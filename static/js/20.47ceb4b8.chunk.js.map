{"version":3,"sources":["views/Web3/Web3Test.js"],"names":["ConnectorNames","connectorsByName","injected","network","walletconnect","walletlink","ledger","trezor","lattice","frame","authereum","fortmatic","magic","portis","torus","getErrorMessage","error","NoEthereumProviderError","UnsupportedChainIdError","UserRejectedRequestErrorInjected","UserRejectedRequestErrorWalletConnect","UserRejectedRequestErrorFrame","console","ChainId","chainId","useWeb3React","role","Account","account","substring","length","Balance","library","React","useState","balance","setBalance","useEffect","stale","eth","getBalance","then","catch","undefined","utils","fromWei","Header","active","style","margin","textAlign","display","gridGap","gridTemplateColumns","maxWidth","lineHeight","App","context","connector","activate","deactivate","activatingConnector","setActivatingConnector","triedEager","useEagerConnect","useInactiveListener","Object","keys","map","name","currentConnector","activating","connected","disabled","height","borderRadius","borderColor","cursor","position","onClick","top","left","alignItems","color","flexDirection","marginTop","marginBottom","getSigner","signMessage","signature","window","alert","message","changeChainId","close","changeNetwork"],"mappings":"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","file":"static/js/20.47ceb4b8.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { useWeb3React, UnsupportedChainIdError } from \"@web3-react/core\";\r\nimport { NoEthereumProviderError, UserRejectedRequestError as UserRejectedRequestErrorInjected } from \"@web3-react/injected-connector\";\r\nimport { UserRejectedRequestError as UserRejectedRequestErrorWalletConnect } from \"@web3-react/walletconnect-connector\";\r\nimport { UserRejectedRequestError as UserRejectedRequestErrorFrame } from \"@web3-react/frame-connector\";\r\nimport { utils } from \"web3\";\r\nimport { useEagerConnect, useInactiveListener } from \"../../web3/hooks\";\r\nimport {\r\n  injected,\r\n  network,\r\n  walletconnect,\r\n  walletlink,\r\n  ledger,\r\n  trezor,\r\n  lattice,\r\n  frame,\r\n  authereum,\r\n  fortmatic,\r\n  magic,\r\n  portis,\r\n  torus,\r\n} from \"../../web3/connectors2\";\r\n\r\nconst ConnectorNames = {\r\n  Injected: \"Injected\",\r\n  Network: \"Network\",\r\n  WalletConnect: \"WalletConnect\",\r\n  WalletLink: \"WalletLink\",\r\n  Ledger: \"Ledger\",\r\n  Trezor: \"Trezor\",\r\n  Lattice: \"Lattice\",\r\n  Frame: \"Frame\",\r\n  Authereum: \"Authereum\",\r\n  Fortmatic: \"Fortmatic\",\r\n  Magic: \"Magic\",\r\n  Portis: \"Portis\",\r\n  Torus: \"Torus\",\r\n};\r\n\r\nconst connectorsByName = {\r\n  [ConnectorNames.Injected]: injected,\r\n  [ConnectorNames.Network]: network,\r\n  [ConnectorNames.WalletConnect]: walletconnect,\r\n  [ConnectorNames.WalletLink]: walletlink,\r\n  [ConnectorNames.Ledger]: ledger,\r\n  [ConnectorNames.Trezor]: trezor,\r\n  [ConnectorNames.Lattice]: lattice,\r\n  [ConnectorNames.Frame]: frame,\r\n  [ConnectorNames.Authereum]: authereum,\r\n  [ConnectorNames.Fortmatic]: fortmatic,\r\n  [ConnectorNames.Magic]: magic,\r\n  [ConnectorNames.Portis]: portis,\r\n  [ConnectorNames.Torus]: torus,\r\n};\r\n\r\nfunction getErrorMessage(error) {\r\n  if (error instanceof NoEthereumProviderError) {\r\n    return \"No Ethereum browser extension detected, install MetaMask on desktop or visit from a dApp browser on mobile.\";\r\n  } else if (error instanceof UnsupportedChainIdError) {\r\n    return \"You're connected to an unsupported network.\";\r\n  } else if (\r\n    error instanceof UserRejectedRequestErrorInjected ||\r\n    error instanceof UserRejectedRequestErrorWalletConnect ||\r\n    error instanceof UserRejectedRequestErrorFrame\r\n  ) {\r\n    return \"Please authorize this website to access your Ethereum account.\";\r\n  } else {\r\n    console.error(error);\r\n    return \"An unknown error occurred. Check the console for more details.\";\r\n  }\r\n}\r\n\r\nfunction ChainId() {\r\n  const { chainId } = useWeb3React();\r\n  return (\r\n    <>\r\n      <span>Chain Id</span>\r\n      <span role=\"img\" aria-label=\"chain\">\r\n        â›“\r\n      </span>\r\n      <span>{chainId ?? \"\"}</span>\r\n    </>\r\n  );\r\n}\r\n\r\nfunction Account() {\r\n  const { account } = useWeb3React();\r\n\r\n  return (\r\n    <>\r\n      <span>Account</span>\r\n      <span role=\"img\" aria-label=\"robot\">\r\n        ðŸ¤–\r\n      </span>\r\n      <span>{account === null ? \"-\" : account ? `${account.substring(0, 6)}...${account.substring(account.length - 4)}` : \"\"}</span>\r\n    </>\r\n  );\r\n}\r\n\r\nfunction Balance() {\r\n  const { account, library, chainId } = useWeb3React();\r\n\r\n  const [balance, setBalance] = React.useState();\r\n  React.useEffect(() => {\r\n    if (!!account && !!library) {\r\n      let stale = false;\r\n      library.eth\r\n        .getBalance(account)\r\n        .then((balance) => {\r\n          if (!stale) {\r\n            setBalance(balance);\r\n          }\r\n        })\r\n        .catch(() => {\r\n          if (!stale) {\r\n            setBalance(null);\r\n          }\r\n        });\r\n      return () => {\r\n        stale = true;\r\n        setBalance(undefined);\r\n      };\r\n    }\r\n  }, [account, library, chainId]); // ensures refresh if referential identity of library doesn't change across chainIds\r\n\r\n  return (\r\n    <>\r\n      <span>Balance</span>\r\n      <span role=\"img\" aria-label=\"gold\">\r\n        ðŸ’°\r\n      </span>\r\n      <span>{balance === null ? \"Error\" : balance ? `Îž${utils.fromWei(balance, \"ether\")}` : \"\"}</span>\r\n    </>\r\n  );\r\n}\r\n\r\nfunction Header() {\r\n  const { active, error } = useWeb3React();\r\n\r\n  return (\r\n    <>\r\n      <h1 style={{ margin: \"1rem\", textAlign: \"right\" }}>{active ? \"ðŸŸ¢\" : error ? \"ðŸ”´\" : \"ðŸŸ \"}</h1>\r\n      <h3\r\n        style={{\r\n          display: \"grid\",\r\n          gridGap: \"1rem\",\r\n          gridTemplateColumns: \"1fr min-content 1fr\",\r\n          maxWidth: \"20rem\",\r\n          lineHeight: \"2rem\",\r\n          margin: \"auto\",\r\n        }}>\r\n        <ChainId />\r\n        <Account />\r\n        <Balance />\r\n      </h3>\r\n    </>\r\n  );\r\n}\r\n\r\nfunction App() {\r\n  const context = useWeb3React();\r\n  const { connector, library, chainId, account, activate, deactivate, active, error } = context;\r\n\r\n  // handle logic to recognize the connector currently being activated\r\n  const [activatingConnector, setActivatingConnector] = React.useState();\r\n  React.useEffect(() => {\r\n    if (activatingConnector && activatingConnector === connector) {\r\n      setActivatingConnector(undefined);\r\n    }\r\n  }, [activatingConnector, connector]);\r\n\r\n  // handle logic to eagerly connect to the injected ethereum provider, if it exists and has granted access already\r\n  const triedEager = useEagerConnect();\r\n\r\n  // handle logic to connect in reaction to certain events on the injected ethereum provider, if it exists\r\n  useInactiveListener(!triedEager || !!activatingConnector);\r\n\r\n  return (\r\n    <>\r\n      <Header />\r\n      <hr style={{ margin: \"2rem\" }} />\r\n      <div\r\n        style={{\r\n          display: \"grid\",\r\n          gridGap: \"1rem\",\r\n          gridTemplateColumns: \"1fr 1fr\",\r\n          maxWidth: \"20rem\",\r\n          margin: \"auto\",\r\n        }}>\r\n        {Object.keys(connectorsByName).map((name) => {\r\n          const currentConnector = connectorsByName[name];\r\n          const activating = currentConnector === activatingConnector;\r\n          const connected = currentConnector === connector;\r\n          const disabled = !triedEager || !!activatingConnector || connected || !!error;\r\n\r\n          return (\r\n            <button\r\n              style={{\r\n                height: \"3rem\",\r\n                borderRadius: \"1rem\",\r\n                borderColor: activating ? \"orange\" : connected ? \"green\" : \"unset\",\r\n                cursor: disabled ? \"unset\" : \"pointer\",\r\n                position: \"relative\",\r\n              }}\r\n              disabled={disabled}\r\n              key={name}\r\n              onClick={() => {\r\n                setActivatingConnector(currentConnector);\r\n                activate(connectorsByName[name]);\r\n              }}>\r\n              <div\r\n                style={{\r\n                  position: \"absolute\",\r\n                  top: \"0\",\r\n                  left: \"0\",\r\n                  height: \"100%\",\r\n                  display: \"flex\",\r\n                  alignItems: \"center\",\r\n                  color: \"black\",\r\n                  margin: \"0 0 0 1rem\",\r\n                }}>\r\n                {activating && <span>loading</span>}\r\n                {connected && (\r\n                  <span role=\"img\" aria-label=\"check\">\r\n                    âœ…\r\n                  </span>\r\n                )}\r\n              </div>\r\n              {name}\r\n            </button>\r\n          );\r\n        })}\r\n      </div>\r\n      <div style={{ display: \"flex\", flexDirection: \"column\", alignItems: \"center\" }}>\r\n        {(active || error) && (\r\n          <button\r\n            style={{\r\n              height: \"3rem\",\r\n              marginTop: \"2rem\",\r\n              borderRadius: \"1rem\",\r\n              borderColor: \"red\",\r\n              cursor: \"pointer\",\r\n            }}\r\n            onClick={() => {\r\n              deactivate();\r\n            }}>\r\n            Deactivate\r\n          </button>\r\n        )}\r\n\r\n        {!!error && <h4 style={{ marginTop: \"1rem\", marginBottom: \"0\" }}>{getErrorMessage(error)}</h4>}\r\n      </div>\r\n\r\n      <hr style={{ margin: \"2rem\" }} />\r\n\r\n      <div\r\n        style={{\r\n          display: \"grid\",\r\n          gridGap: \"1rem\",\r\n          gridTemplateColumns: \"fit-content\",\r\n          maxWidth: \"20rem\",\r\n          margin: \"auto\",\r\n        }}>\r\n        {!!(library && account) && (\r\n          <button\r\n            style={{\r\n              height: \"3rem\",\r\n              borderRadius: \"1rem\",\r\n              cursor: \"pointer\",\r\n            }}\r\n            onClick={() => {\r\n              library\r\n                .getSigner(account)\r\n                .signMessage(\"ðŸ‘‹\")\r\n                .then((signature) => {\r\n                  window.alert(`Success!\\n\\n${signature}`);\r\n                })\r\n                .catch((error) => {\r\n                  window.alert(\"Failure!\" + (error && error.message ? `\\n\\n${error.message}` : \"\"));\r\n                });\r\n            }}>\r\n            Sign Message\r\n          </button>\r\n        )}\r\n        {!!(connector === connectorsByName[ConnectorNames.Network] && chainId) && (\r\n          <button\r\n            style={{\r\n              height: \"3rem\",\r\n              borderRadius: \"1rem\",\r\n              cursor: \"pointer\",\r\n            }}\r\n            onClick={() => {\r\n              connector.changeChainId(chainId === 1 ? 4 : 1);\r\n            }}>\r\n            Switch Networks\r\n          </button>\r\n        )}\r\n        {connector === connectorsByName[ConnectorNames.WalletConnect] && (\r\n          <button\r\n            style={{\r\n              height: \"3rem\",\r\n              borderRadius: \"1rem\",\r\n              cursor: \"pointer\",\r\n            }}\r\n            onClick={() => {\r\n              connector.close();\r\n            }}>\r\n            Kill WalletConnect Session\r\n          </button>\r\n        )}\r\n        {connector === connectorsByName[ConnectorNames.WalletLink] && (\r\n          <button\r\n            style={{\r\n              height: \"3rem\",\r\n              borderRadius: \"1rem\",\r\n              cursor: \"pointer\",\r\n            }}\r\n            onClick={() => {\r\n              connector.close();\r\n            }}>\r\n            Kill WalletLink Session\r\n          </button>\r\n        )}\r\n        {connector === connectorsByName[ConnectorNames.Fortmatic] && (\r\n          <button\r\n            style={{\r\n              height: \"3rem\",\r\n              borderRadius: \"1rem\",\r\n              cursor: \"pointer\",\r\n            }}\r\n            onClick={() => {\r\n              connector.close();\r\n            }}>\r\n            Kill Fortmatic Session\r\n          </button>\r\n        )}\r\n        {connector === connectorsByName[ConnectorNames.Magic] && (\r\n          <button\r\n            style={{\r\n              height: \"3rem\",\r\n              borderRadius: \"1rem\",\r\n              cursor: \"pointer\",\r\n            }}\r\n            onClick={() => {\r\n              connector.close();\r\n            }}>\r\n            Kill Magic Session\r\n          </button>\r\n        )}\r\n        {connector === connectorsByName[ConnectorNames.Portis] && (\r\n          <>\r\n            {chainId !== undefined && (\r\n              <button\r\n                style={{\r\n                  height: \"3rem\",\r\n                  borderRadius: \"1rem\",\r\n                  cursor: \"pointer\",\r\n                }}\r\n                onClick={() => {\r\n                  connector.changeNetwork(chainId === 1 ? 100 : 1);\r\n                }}>\r\n                Switch Networks\r\n              </button>\r\n            )}\r\n            <button\r\n              style={{\r\n                height: \"3rem\",\r\n                borderRadius: \"1rem\",\r\n                cursor: \"pointer\",\r\n              }}\r\n              onClick={() => {\r\n                connector.close();\r\n              }}>\r\n              Kill Portis Session\r\n            </button>\r\n          </>\r\n        )}\r\n        {connector === connectorsByName[ConnectorNames.Torus] && (\r\n          <button\r\n            style={{\r\n              height: \"3rem\",\r\n              borderRadius: \"1rem\",\r\n              cursor: \"pointer\",\r\n            }}\r\n            onClick={() => {\r\n              connector.close();\r\n            }}>\r\n            Kill Torus Session\r\n          </button>\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"sourceRoot":""}