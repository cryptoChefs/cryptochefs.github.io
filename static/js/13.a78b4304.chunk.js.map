{"version":3,"sources":["web3/constants.js","assets/background/outer-bg-pattern-opacity30.png","utils/theme.js","web3/connectors.js","web3/connectorsList.js","web3/errors.js","components/web3/Balance.js","components/web3/AromaBalance.js","components/layout/Web3connect.js","web3/hooks.js","i18n.js","components/layout/LanguageSelector.js","components/common/LogoButton.js","components/layout/TopBar.js","components/common/LoadingSpinner.js","components/ServiceWorkerWrapper.js","routes.js"],"names":["TARGET_CHAIN","process","AROMA_DECIMALS","NETWORKS","rinkeby","name","color","chainId","rpcUrl","faucet","blockExplorer","contractAroma","contractMaster","nativeToken","adminAccount","matic","price","gasPrice","mumbai","cafeNoir","unbleachedSilk","sunGlow","columbiaBlue","theme","createTheme","palette","mode","primary","main","light","secondary","contrastText","background","default","paper","shape","borderRadius","typography","h1","fontSize","fontWeight","h2","h3","h4","h5","h6","components","MuiCssBaseline","styleOverrides","body","backgroundImage","rootBgPattern","MuiAppBar","defaultProps","MuiAccordion","square","elevation","root","backgroundColor","MuiCard","variants","props","variant","style","height","MuiButton","size","padding","MuiLinearProgress","border","barColorPrimary","colorPrimary","RPC_URLS","injected","InjectedConnector","supportedChainIds","connectorsList","NetworkConnector","urls","defaultChainId","WalletConnectConnector","rpc","qrcode","WalletLinkConnector","url","appName","LedgerConnector","pollingInterval","TrezorConnector","manifestEmail","manifestAppUrl","LatticeConnector","FrameConnector","AuthereumConnector","FortmaticConnector","apiKey","FORTMATIC_API_KEY","MagicConnector","MAGIC_API_KEY","email","PortisConnector","dAppId","PORTIS_DAPP_ID","networks","TorusConnector","description","icon","connector","getErrorMessage","error","NoEthereumProviderError","UnsupportedChainIdError","UserRejectedRequestErrorInjected","UserRejectedRequestErrorWalletConnect","UserRejectedRequestErrorFrame","console","Balance","useWeb3React","account","library","React","useState","balance","setBalance","useEffect","stale","eth","getBalance","then","catch","undefined","Skeleton","utils","fromWei","AromaBalance","loadBalance","a","minAbi","constant","inputs","type","outputs","contract","Contract","methods","balanceOf","call","log","withRouter","withTranslation","Web3Context","triedEager","activate","active","tried","setTried","isAuthorized","useEagerConnect","deactivate","activatingConnector","setActivatingConnector","connectionMenu","setconnectionMenu","dialogWeb3","setdialogWeb3","handleConnectionMenuClose","handleWeb3Modal","t","Tooltip","disableFocusListener","title","IconButton","onClick","event","currentTarget","Avatar","seed","toLowerCase","scale","className","Backdrop","open","Boolean","Popover","id","anchorEl","onClose","Paper","Box","m","List","dense","ListItem","ListItemAvatar","ListItemText","toUpperCase","Button","Dialog","keepMounted","maxWidth","DialogContent","Typography","gutterBottom","Object","keys","map","mb","Grid","container","spacing","item","sm","md","borderColor","disabled","role","marginTop","marginBottom","DialogActions","dateLang","en","enUS","de","fr","it","i18n","use","initReactI18next","init","whitelist","fallbackLng","cleanCode","lowerCaseLng","debug","interpolation","escapeValue","format","value","formatting","lng","makedate","Date","d","setUTCSeconds","now","getTime","formatDistance","locale","keySeparator","react","wait","resources","translation","transEn","LanguageSelector","state","languageMenu","language","handleLanguageIconClick","setState","handleLanguageMenuClose","handleLangChange","changeLanguage","Component","LogoButton","animation","animate","window","clearTimeout","timeout","setTimeout","this","component","Link","to","alt","src","logo","links","path","TopBar","popover","handleConnectionIconClick","AppBar","position","Toolbar","direction","justifyContent","alignItems","Hidden","smDown","ButtonGroup","index","mdUp","DialogTitle","button","ListItemIcon","LoadingSpinner","my","textAlign","CircularProgress","ServiceWorkerWrapper","showReload","waitingWorker","onSWUpdate","registration","waiting","activeSnackbar","enqueueSnackbar","persist","action","reloadPage","closeSnackbar","postMessage","location","reload","serviceWorkerRegistration","onUpdate","withSnackbar","Main","lazy","Store","Kitchen","Buffet","Internal","getLibrary","provider","Web3","App","expertmode","videoOn","admin","setExpertMode","boolValue","localStorage","setItem","setVideoOn","setAdmin","ThemeProvider","anchorOrigin","vertical","horizontal","maxSnack","autoHideDuration","classes","variantSuccess","green","variantError","red","variantWarning","blue","variantInfo","CssBaseline","basename","Container","disableGutters","fallback","exact"],"mappings":"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","file":"static/js/13.a78b4304.chunk.js","sourcesContent":["// Target chain\r\nexport const TARGET_CHAIN = process.env.REACT_APP_CHAIN;\r\n// MY INFURA_ID, SWAP IN YOURS FROM https://infura.io/dashboard/ethereum\r\nexport const INFURA_ID = process.env.REACT_APP_INFURA_ID;\r\n// MY ETHERSCAN_ID, SWAP IN YOURS FROM https://etherscan.io/myapikey\r\nexport const ETHERSCAN_KEY = process.env.REACT_APP_ETHERSCAN_KEY;\r\n// BLOCKNATIVE ID FOR Notify.js:\r\nexport const BLOCKNATIVE_DAPPID = process.env.REACT_APP_BLOCKNATIVE_DAPPID;\r\n\r\nexport const DAY_IN_MILLISECONDS = 24 * 60 * 60 * 1000; // hours*minutes*seconds*milliseconds\r\nexport const ETHER_IN_WEI = 1000000000000000000;\r\nexport const AROMA_DECIMALS = 1000000000000000000; // 18 decimals\r\n\r\nexport const NETWORKS = {\r\n  rinkeby: {\r\n    name: \"rinkeby\",\r\n    color: \"#e0d068\",\r\n    chainId: 4,\r\n    rpcUrl: `https://rinkeby.infura.io/v3/${INFURA_ID}`,\r\n    faucet: \"https://faucet.rinkeby.io/\",\r\n    blockExplorer: \"https://rinkeby.etherscan.io/\",\r\n    contractAroma: \"0x41E0984a75d6Ad506Ff5551BE38B0d97C88Ea4A3\",\r\n    contractMaster: \"0xc543A0E22e3c757B712a8924EcFc2bCF1db1b47f\",\r\n    nativeToken: \"TEST ETHER\",\r\n    adminAccount: \"0x3824D6d729493BAEeC8d5dA7d1cB7926E895B24d\",\r\n  },\r\n  matic: {\r\n    name: \"matic\",\r\n    color: \"#2bbdf7\",\r\n    chainId: 137,\r\n    price: 1,\r\n    gasPrice: 1000000000,\r\n    rpcUrl: \"https://rpc-mainnet.maticvigil.com\",\r\n    faucet: \"https://faucet.matic.network/\",\r\n    blockExplorer: \"https://explorer-mainnet.maticvigil.com/\",\r\n    nativeToken: \"MATIC\",\r\n  },\r\n  mumbai: {\r\n    name: \"mumbai\",\r\n    color: \"#92D9FA\",\r\n    chainId: 80001,\r\n    price: 1,\r\n    gasPrice: 1000000000,\r\n    rpcUrl: \"https://rpc-mumbai.maticvigil.com\",\r\n    faucet: \"https://faucet.matic.network/\",\r\n    blockExplorer: \"https://mumbai-explorer.matic.today/\",\r\n  },\r\n  /*\r\n  ropsten: {\r\n    name: \"ropsten\",\r\n    color: \"#F60D09\",\r\n    chainId: 3,\r\n    faucet: \"https://faucet.ropsten.be/\",\r\n    blockExplorer: \"https://ropsten.etherscan.io/\",\r\n    rpcUrl: `https://ropsten.infura.io/v3/${INFURA_ID}`,\r\n  },\r\n  goerli: {\r\n    name: \"goerli\",\r\n    color: \"#0975F6\",\r\n    chainId: 5,\r\n    faucet: \"https://goerli-faucet.slock.it/\",\r\n    blockExplorer: \"https://goerli.etherscan.io/\",\r\n    rpcUrl: `https://goerli.infura.io/v3/${INFURA_ID}`,\r\n  },\r\n  xdai: {\r\n    name: \"xdai\",\r\n    color: \"#48a9a6\",\r\n    chainId: 100,\r\n    price: 1,\r\n    gasPrice: 1000000000,\r\n    rpcUrl: \"https://dai.poa.network\",\r\n    faucet: \"https://xdai-faucet.top/\",\r\n    blockExplorer: \"https://blockscout.com/poa/xdai/\",\r\n  },\r\n    localhost: {\r\n    name: \"localhost\",\r\n    color: \"#666666\",\r\n    chainId: 31337,\r\n    blockExplorer: \"\",\r\n    rpcUrl: \"http://\" + window.location.hostname + \":8545\",\r\n  },\r\n  mainnet: {\r\n    name: \"mainnet\",\r\n    color: \"#ff8b9e\",\r\n    chainId: 1,\r\n    rpcUrl: `https://mainnet.infura.io/v3/${INFURA_ID}`,\r\n    blockExplorer: \"https://etherscan.io/\",\r\n  },\r\n  kovan: {\r\n    name: \"kovan\",\r\n    color: \"#7003DD\",\r\n    chainId: 42,\r\n    rpcUrl: `https://kovan.infura.io/v3/${INFURA_ID}`,\r\n    blockExplorer: \"https://kovan.etherscan.io/\",\r\n    faucet: \"https://gitter.im/kovan-testnet/faucet\", // https://faucet.kovan.network/\r\n  },\r\n  localArbitrum: {\r\n    name: \"localArbitrum\",\r\n    color: \"#50a0ea\",\r\n    chainId: 153869338190755,\r\n    blockExplorer: \"\",\r\n    rpcUrl: `http://localhost:8547`,\r\n  },\r\n  localArbitrumL1: {\r\n    name: \"localArbitrumL1\",\r\n    color: \"#50a0ea\",\r\n    chainId: 44010,\r\n    blockExplorer: \"\",\r\n    rpcUrl: `http://localhost:7545`,\r\n  },\r\n  rinkebyArbitrum: {\r\n    name: \"Arbitrum Testnet\",\r\n    color: \"#50a0ea\",\r\n    chainId: 421611,\r\n    blockExplorer: \"https://rinkeby-explorer.arbitrum.io/#/\",\r\n    rpcUrl: `https://rinkeby.arbitrum.io/rpc`,\r\n  },\r\n  arbitrum: {\r\n    name: \"Arbitrum\",\r\n    color: \"#50a0ea\",\r\n    chainId: 42161,\r\n    blockExplorer: \"https://explorer.arbitrum.io/#/\",\r\n    rpcUrl: `https://arb1.arbitrum.io/rpc`,\r\n    gasPrice: 0,\r\n  },\r\n  localOptimismL1: {\r\n    name: \"localOptimismL1\",\r\n    color: \"#f01a37\",\r\n    chainId: 31337,\r\n    blockExplorer: \"\",\r\n    rpcUrl: \"http://\" + window.location.hostname + \":9545\",\r\n  },\r\n  localOptimism: {\r\n    name: \"localOptimism\",\r\n    color: \"#f01a37\",\r\n    chainId: 420,\r\n    blockExplorer: \"\",\r\n    rpcUrl: \"http://\" + window.location.hostname + \":8545\",\r\n    gasPrice: 0,\r\n  },\r\n  kovanOptimism: {\r\n    name: \"kovanOptimism\",\r\n    color: \"#f01a37\",\r\n    chainId: 69,\r\n    blockExplorer: \"https://kovan-optimistic.etherscan.io/\",\r\n    rpcUrl: `https://kovan.optimism.io`,\r\n    gasPrice: 0,\r\n  },\r\n  optimism: {\r\n    name: \"optimism\",\r\n    color: \"#f01a37\",\r\n    chainId: 10,\r\n    blockExplorer: \"https://optimistic.etherscan.io/\",\r\n    rpcUrl: `https://mainnet.optimism.io`,\r\n  },\r\n  localAvalanche: {\r\n    name: \"localAvalanche\",\r\n    color: \"#666666\",\r\n    chainId: 43112,\r\n    blockExplorer: \"\",\r\n    rpcUrl: `http://localhost:9650/ext/bc/C/rpc`,\r\n    gasPrice: 225000000000,\r\n  },\r\n  fujiAvalanche: {\r\n    name: \"fujiAvalanche\",\r\n    color: \"#666666\",\r\n    chainId: 43113,\r\n    blockExplorer: \"https://cchain.explorer.avax-test.network/\",\r\n    rpcUrl: `https://api.avax-test.network/ext/bc/C/rpc`,\r\n    gasPrice: 225000000000,\r\n  },\r\n  mainnetAvalanche: {\r\n    name: \"mainnetAvalanche\",\r\n    color: \"#666666\",\r\n    chainId: 43114,\r\n    blockExplorer: \"https://cchain.explorer.avax.network/\",\r\n    rpcUrl: `https://api.avax.network/ext/bc/C/rpc`,\r\n    gasPrice: 225000000000,\r\n  },\r\n  testnetHarmony: {\r\n    name: \"Harmony Testnet\",\r\n    color: \"#00b0ef\",\r\n    chainId: 1666700000,\r\n    blockExplorer: \"https://explorer.pops.one/\",\r\n    rpcUrl: `https://api.s0.b.hmny.io`,\r\n    gasPrice: 1000000000,\r\n  },\r\n  mainnetHarmony: {\r\n    name: \"Harmony Mainnet\",\r\n    color: \"#00b0ef\",\r\n    chainId: 1666600000,\r\n    blockExplorer: \"https://explorer.harmony.one/\",\r\n    rpcUrl: `https://api.harmony.one`,\r\n    gasPrice: 1000000000,\r\n  },\r\n  */\r\n};\r\n\r\nexport const NETWORK = (chainId) => {\r\n  for (const n in NETWORKS) {\r\n    if (NETWORKS[n].chainId === chainId) {\r\n      return NETWORKS[n];\r\n    }\r\n  }\r\n};\r\n","export default __webpack_public_path__ + \"static/media/outer-bg-pattern-opacity30.b93cba75.png\";","import { createTheme } from \"@mui/material/styles\";\r\n\r\n// images\r\nimport rootBgPattern from '../assets/background/outer-bg-pattern-opacity30.png';\r\n\r\n// colors\r\nconst cafeNoir = \"rgba(76, 43, 0, 1)\";\r\nconst unbleachedSilk = \"rgba(255, 219, 205, 1)\";\r\nconst persianOrange = \"rgba(223, 141, 74, 1)\";\r\n// const brownSugar = \"rgba(184, 125, 102, 1)\";\r\nconst sunGlow = \"rgba(246, 222, 109, 1)\";\r\nconst columbiaBlue = \"rgb(210, 238, 255)\";\r\n\r\nexport const theme = createTheme ({\r\n  palette: {\r\n    mode: 'light',\r\n    primary: {\r\n      main: cafeNoir,\r\n      light: unbleachedSilk\r\n    },\r\n    secondary: {\r\n      main: persianOrange,\r\n      contrastText: '#fff'\r\n    },\r\n    background: {\r\n      // default, is not used as root background (see components below)\r\n      default: cafeNoir,\r\n      paper: unbleachedSilk\r\n    },\r\n    sunGlow: {\r\n      main: sunGlow,\r\n      contrastText: 'white'\r\n    },\r\n    cafeNoir: {\r\n      main: cafeNoir\r\n    },\r\n    columbiaBlue: {\r\n      main: columbiaBlue\r\n    }\r\n  },\r\n  shape: {\r\n    borderRadius: 11,\r\n  },\r\n  typography: {\r\n    h1: {\r\n      fontSize: \"3.052rem\",\r\n      fontWeight: 400\r\n    },\r\n    h2: {\r\n      fontSize: \"2.441rem\",\r\n      fontWeight: 400\r\n    },\r\n    h3: {\r\n      fontSize: \"1.953rem\",\r\n      fontWeight: 400\r\n    },\r\n    h4: {\r\n      fontSize: \"1.563rem\",\r\n      fontWeight: 400\r\n    },\r\n    h5: {\r\n      fontSize: \"1.25rem\",\r\n      fontWeight: 400\r\n    },\r\n    h6: {\r\n      fontSize: \"1rem\",\r\n      fontWeight: 400\r\n    }\r\n  },\r\n  components: {\r\n    MuiCssBaseline: {\r\n      styleOverrides: {\r\n        body: {\r\n          background: \"#fff\",\r\n          backgroundImage: `url(\"${rootBgPattern}\")`,\r\n        },\r\n      },\r\n    },\r\n    MuiAppBar: {\r\n      defaultProps: {\r\n        color: \"sunGlow\",\r\n      },\r\n    },\r\n    MuiAccordion: {\r\n      defaultProps: {\r\n        square: true,\r\n        elevation: 0,\r\n      },\r\n      styleOverrides: {\r\n        root: {\r\n          backgroundColor: columbiaBlue\r\n        }\r\n      }\r\n    },\r\n    MuiCard: {\r\n      variants: [\r\n        {\r\n          props: { variant: 'fullHeight' },\r\n          style: {\r\n            height: \"100%\"\r\n          }\r\n        }\r\n      ]\r\n    },\r\n    MuiButton: {\r\n      variants: [\r\n        {\r\n          props: { size: 'xlarge' },\r\n          style: {\r\n            padding: \"14px 22px\",\r\n            fontSize: \"1rem\"\r\n          }\r\n        }\r\n      ]\r\n    },\r\n    MuiLinearProgress: {\r\n      styleOverrides: {\r\n        root: {\r\n          height: 40,\r\n          borderRadius: 11,\r\n          border: \"5px solid lightgray\"\r\n        },\r\n        barColorPrimary: {\r\n          backgroundColor: sunGlow,\r\n        },\r\n        colorPrimary: {\r\n          backgroundColor: \"lightgray\",\r\n        },\r\n      }\r\n    },\r\n\r\n  }\r\n  // components: {\r\n  //   // todo: validate all styles below - Do we need these changes globally?\r\n  //   MuiBadge: {\r\n  //     styleOverrides: {\r\n  //       badge: {\r\n  //         background: blueGrey[50],\r\n  //         color: blueGrey[800],\r\n  //         border: \"1px solid\" + blueGrey[500],\r\n  //       },\r\n  //       colorSecondary: {\r\n  //         border: 0,\r\n  //       },\r\n  //       colorError: {\r\n  //         border: 0,\r\n  //         color: \"#fff\",\r\n  //       },\r\n  //     }\r\n  //   },\r\n  //   MuiTooltip: {\r\n  //     styleOverrides: {\r\n  //       tooltip: {\r\n  //         color: \"#fff\",\r\n  //       },\r\n  //     }\r\n  //   },\r\n  //   MuiIconButton: {\r\n  //     styleOverrides: {\r\n  //       root: {\r\n  //         color: blueGrey[500],\r\n  //       },\r\n  //       colorSecondary: {\r\n  //         color: blueGrey[50],\r\n  //         zIndex: 10,\r\n  //       },\r\n  //     }\r\n  //   },\r\n\r\n  //   MuiCircularProgress: {\r\n  //     styleOverrides: {\r\n  //       colorSecondary: {\r\n  //         color: blueGrey[50],\r\n  //       },\r\n  //     }\r\n  //   },\r\n  //   MuiTabs: {\r\n  //     styleOverrides: {\r\n  //       indicator: {\r\n  //         backgroundColor: blueGrey[800],\r\n  //       },\r\n  //     }\r\n  //   },\r\n  //   MuiTab: {\r\n  //     styleOverrides: {\r\n  //       root: {\r\n  //         \"@media (min-width: 960px)\": {\r\n  //           minWidth: 120,\r\n  //         },\r\n  //       },\r\n  //       textColorSecondary: {\r\n  //         color: blueGrey[400],\r\n  //         \"&$selected\": {\r\n  //           color: blueGrey[900],\r\n  //         },\r\n  //       },\r\n  //     }\r\n  //   },\r\n  //   MuiBottomNavigation: {\r\n  //     styleOverrides: {\r\n  //       root: {\r\n  //         zIndex: 1190,\r\n  //         backgroundColor: blueGrey[50],\r\n  //         background: \"linear-gradient(315deg,\" + blueGrey[600] + \",\" + blueGrey[800] + \")\",\r\n  //       },\r\n  //     }\r\n  //   },\r\n  //   MuiBottomNavigationAction: {\r\n  //     styleOverrides: {\r\n  //       root: {\r\n  //         color: blueGrey[100],\r\n  //         \"&$selected\": {\r\n  //           color: \"#fff\",\r\n  //         },\r\n  //       },\r\n  //     }\r\n  //   },\r\n  //   MuiAvatar: {\r\n  //     styleOverrides: {\r\n  //       colorDefault: {\r\n  //         color: blueGrey[800],\r\n  //         backgroundColor: blueGrey[100],\r\n  //       },\r\n  //       square: {\r\n  //         backgroundColor: \"transparent\",\r\n  //       },\r\n  //     }\r\n  //   },\r\n  //   MuiCardMedia: {\r\n  //     styleOverrides: {\r\n  //       root: {\r\n  //         height: 220,\r\n  //       },\r\n  //     }\r\n  //   },\r\n  // }\r\n});\r\n","import { InjectedConnector } from \"@web3-react/injected-connector\";\r\nimport { NetworkConnector } from \"@web3-react/network-connector\";\r\nimport { WalletConnectConnector } from \"@web3-react/walletconnect-connector\";\r\nimport { WalletLinkConnector } from \"@web3-react/walletlink-connector\";\r\nimport { LedgerConnector } from \"@web3-react/ledger-connector\";\r\nimport { TrezorConnector } from \"@web3-react/trezor-connector\";\r\nimport { LatticeConnector } from \"@web3-react/lattice-connector\";\r\nimport { FrameConnector } from \"@web3-react/frame-connector\";\r\nimport { AuthereumConnector } from \"@web3-react/authereum-connector\";\r\nimport { FortmaticConnector } from \"@web3-react/fortmatic-connector\";\r\nimport { MagicConnector } from \"@web3-react/magic-connector\";\r\nimport { PortisConnector } from \"@web3-react/portis-connector\";\r\nimport { TorusConnector } from \"@web3-react/torus-connector\";\r\nimport { NETWORKS, TARGET_CHAIN } from \"./constants\";\r\n\r\nconst POLLING_INTERVAL = 12000;\r\nconst RPC_URLS = {\r\n  1: \"https://eth-rinkeby.alchemyapi.io/v2/GPWAqKF4V0_IpIruGYM3RGGOgtNyUx6l\",\r\n  4: \"https://eth-rinkeby.alchemyapi.io/v2/GPWAqKF4V0_IpIruGYM3RGGOgtNyUx6l\",\r\n};\r\n\r\nexport const injected = new InjectedConnector({ supportedChainIds: [NETWORKS[TARGET_CHAIN].chainId] });\r\n\r\nexport const network = new NetworkConnector({\r\n  urls: { 1: RPC_URLS[1], 4: RPC_URLS[4] },\r\n  defaultChainId: 4,\r\n});\r\n\r\nexport const walletconnect = new WalletConnectConnector({\r\n  rpc: { 1: RPC_URLS[1] },\r\n  qrcode: true,\r\n});\r\n\r\nexport const walletlink = new WalletLinkConnector({\r\n  url: RPC_URLS[1],\r\n  appName: \"web3-react example\",\r\n  supportedChainIds: [1, 3, 4, 5, 42, 10, 137, 69, 420, 80001],\r\n});\r\n\r\nexport const ledger = new LedgerConnector({ chainId: 1, url: RPC_URLS[1], pollingInterval: POLLING_INTERVAL });\r\n\r\nexport const trezor = new TrezorConnector({\r\n  chainId: 1,\r\n  url: RPC_URLS[1],\r\n  pollingInterval: POLLING_INTERVAL,\r\n  manifestEmail: \"dummy@abc.xyz\",\r\n  manifestAppUrl: \"http://localhost:1234\",\r\n});\r\n\r\nexport const lattice = new LatticeConnector({\r\n  chainId: 4,\r\n  appName: \"web3-react\",\r\n  url: RPC_URLS[4],\r\n});\r\n\r\nexport const frame = new FrameConnector({ supportedChainIds: [1] });\r\n\r\nexport const authereum = new AuthereumConnector({ chainId: 42 });\r\n\r\nexport const fortmatic = new FortmaticConnector({ apiKey: process.env.FORTMATIC_API_KEY, chainId: 4 });\r\n\r\nexport const magic = new MagicConnector({\r\n  apiKey: process.env.MAGIC_API_KEY,\r\n  chainId: 4,\r\n  email: \"hello@example.org\",\r\n});\r\n\r\nexport const portis = new PortisConnector({ dAppId: process.env.PORTIS_DAPP_ID, networks: [1, 100] });\r\n\r\nexport const torus = new TorusConnector({ chainId: 1 });\r\n","import {\r\n  injected,\r\n  /* walletconnect, walletlink, ledger, network, trezor, lattice, frame, authereum, fortmatic, magic, portis, torus */\r\n} from \"./connectors\";\r\n\r\nconst connectorsList = {\r\n  injected: {\r\n    name: \"Browser\",\r\n    description: \"Use this for Browser Plugins such as Metamask or Brave Wallet.\",\r\n    icon: \"\",\r\n    connector: injected,\r\n  },\r\n  /*\r\n  walletconnect: {\r\n    name: \"WalletConnect\",\r\n    description: \"Use this if your wallet uses WalletConnect\",\r\n    icon: \"\",\r\n    connector: walletconnect,\r\n  },\r\n  walletlink: {\r\n    name: \"WalletLink\",\r\n    description: \"Use this if your wallet uses WalletLink\",\r\n    icon: \"\",\r\n    connector: walletlink,\r\n  },\r\n  ledger: {\r\n    name: \"Ledger\",\r\n    description: \"Use this if you use a Ledger Wallet.\",\r\n    icon: \"\",\r\n    connector: ledger,\r\n  },\r\n  */\r\n};\r\n/*\r\nconst ConnectorNames = {\r\n  Injected: \"Injected\",\r\n  Network: \"Network\",\r\n  WalletConnect: \"WalletConnect\",\r\n  WalletLink: \"WalletLink\",\r\n  Ledger: \"Ledger\",\r\n  Trezor: \"Trezor\",\r\n  Lattice: \"Lattice\",\r\n  Frame: \"Frame\",\r\n  Authereum: \"Authereum\",\r\n  Fortmatic: \"Fortmatic\",\r\n  Magic: \"Magic\",\r\n  Portis: \"Portis\",\r\n  Torus: \"Torus\",\r\n};\r\n\r\nexport const connectorsByName = {\r\n  [ConnectorNames.Injected]: injected,\r\n  [ConnectorNames.Network]: network,\r\n  [ConnectorNames.WalletConnect]: walletconnect,\r\n  [ConnectorNames.WalletLink]: walletlink,\r\n  [ConnectorNames.Ledger]: ledger,\r\n  [ConnectorNames.Trezor]: trezor,\r\n  [ConnectorNames.Lattice]: lattice,\r\n  [ConnectorNames.Frame]: frame,\r\n  [ConnectorNames.Authereum]: authereum,\r\n  [ConnectorNames.Fortmatic]: fortmatic,\r\n  [ConnectorNames.Magic]: magic,\r\n  [ConnectorNames.Portis]: portis,\r\n  [ConnectorNames.Torus]: torus,\r\n};\r\n*/\r\n\r\nexport default connectorsList;\r\n","import { UnsupportedChainIdError } from \"@web3-react/core\";\r\nimport { NoEthereumProviderError, UserRejectedRequestError as UserRejectedRequestErrorInjected } from \"@web3-react/injected-connector\";\r\nimport { UserRejectedRequestError as UserRejectedRequestErrorWalletConnect } from \"@web3-react/walletconnect-connector\";\r\nimport { UserRejectedRequestError as UserRejectedRequestErrorFrame } from \"@web3-react/frame-connector\";\r\n\r\nexport function getErrorMessage(error) {\r\n  if (error instanceof NoEthereumProviderError) {\r\n    return \"No Ethereum browser extension detected, install MetaMask on desktop or visit from a dApp browser on mobile.\";\r\n  } else if (error instanceof UnsupportedChainIdError) {\r\n    return \"You're connected to an unsupported network.\";\r\n  } else if (\r\n    error instanceof UserRejectedRequestErrorInjected ||\r\n    error instanceof UserRejectedRequestErrorWalletConnect ||\r\n    error instanceof UserRejectedRequestErrorFrame\r\n  ) {\r\n    return \"Please authorize this website to access your Ethereum account.\";\r\n  } else {\r\n    console.error(error);\r\n    return \"An unknown error occurred. Check the console for more details.\";\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport { useWeb3React } from \"@web3-react/core\";\r\nimport { utils } from \"web3\";\r\nimport Skeleton from \"@mui/material/Skeleton\";\r\n\r\nconst Balance = function () {\r\n  const { account, library, chainId } = useWeb3React();\r\n\r\n  const [balance, setBalance] = React.useState();\r\n\r\n  React.useEffect(() => {\r\n    if (!!account && !!library) {\r\n      let stale = false;\r\n      library.eth\r\n        .getBalance(account)\r\n        .then((balance) => {\r\n          if (!stale) {\r\n            setBalance(balance);\r\n          }\r\n        })\r\n        .catch(() => {\r\n          if (!stale) {\r\n            setBalance(null);\r\n          }\r\n        });\r\n      return () => {\r\n        stale = true;\r\n        setBalance(undefined);\r\n      };\r\n    }\r\n  }, [account, library, chainId]); // ensures refresh if referential identity of library doesn't change across chainIds\r\n\r\n  return balance === null ? <Skeleton variant=\"text\" /> : balance ? <span>{utils.fromWei(balance, \"ether\")}</span> : <Skeleton variant=\"text\" />;\r\n};\r\n\r\nexport default Balance;\r\n","import React from \"react\";\r\nimport { useWeb3React } from \"@web3-react/core\";\r\n//import { utils } from \"web3\";\r\nimport Skeleton from \"@mui/material/Skeleton\";\r\nimport { NETWORKS, TARGET_CHAIN, AROMA_DECIMALS } from \"../../web3/constants\";\r\n\r\nconst AromaBalance = function () {\r\n  const { account, library } = useWeb3React();\r\n  const [balance, setBalance] = React.useState();\r\n  React.useEffect(() => {\r\n    if (!!account && !!library) {\r\n      async function loadBalance() {\r\n        try {\r\n          const contractAroma = NETWORKS[TARGET_CHAIN].contractAroma;\r\n          const minAbi = [\r\n            {\r\n              constant: true,\r\n              inputs: [{ name: \"_owner\", type: \"address\" }],\r\n              name: \"balanceOf\",\r\n              outputs: [{ name: \"balance\", type: \"uint256\" }],\r\n              type: \"function\",\r\n            },\r\n          ];\r\n          const contract = new library.eth.Contract(minAbi, contractAroma);\r\n          const balance = await contract.methods.balanceOf(account).call();\r\n          setBalance(balance / AROMA_DECIMALS);\r\n        } catch (e) {\r\n          console.log(e);\r\n        }\r\n      }\r\n      loadBalance();\r\n    }\r\n  }, [account, library]); // ensures refresh if referential identity of library doesn't change across chainIds\r\n\r\n  return balance === null ? <Skeleton variant=\"text\" /> : balance ? <span>AROMA {balance}</span> : <Skeleton variant=\"text\" />;\r\n};\r\n\r\nexport default AromaBalance;\r\n","import React, { useState, Fragment, useEffect } from \"react\";\r\nimport { withTranslation } from \"react-i18next\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport Blockies from \"react-blockies\";\r\nimport { useWeb3React } from \"@web3-react/core\";\r\n//import { useSnackbar } from \"notistack\";\r\n//mui\r\nimport Tooltip from \"@mui/material/Tooltip\";\r\nimport List from \"@mui/material/List\";\r\nimport ListItem from \"@mui/material/ListItem\";\r\nimport ListItemAvatar from \"@mui/material/ListItemAvatar\";\r\nimport ListItemText from \"@mui/material/ListItemText\";\r\nimport Button from \"@mui/material/Button\";\r\nimport Paper from \"@mui/material/Paper\";\r\nimport Popover from \"@mui/material/Popover\";\r\nimport Avatar from \"@mui/material/Avatar\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport Backdrop from \"@mui/material/Backdrop\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Dialog from \"@mui/material/Dialog\";\r\nimport DialogContent from \"@mui/material/DialogContent\";\r\nimport DialogActions from \"@mui/material/DialogActions\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport Check from \"@mui/icons-material/Check\";\r\nimport Warning from \"@mui/icons-material/Warning\";\r\n//custom\r\nimport connectorsList from \"../../web3/connectorsList\";\r\nimport { getErrorMessage } from \"../../web3/errors\";\r\nimport { useEagerConnect } from \"../../web3/hooks\";\r\nimport Balance from \"../web3/Balance\";\r\nimport AromaBalance from \"../web3/AromaBalance\";\r\nimport { NETWORKS, TARGET_CHAIN } from \"../../web3/constants\";\r\n//import ToastLoading from \"../../components/notification/ToastLoading\";\r\n//import ToastLoadingIndeterminate from \"../../components/notification/ToastLoadingIndeterminate\";\r\n\r\nfunction Web3connect(props) {\r\n  const Web3Context = useWeb3React();\r\n  const triedEager = useEagerConnect();\r\n  const { connector, account, activate, deactivate, active, error, chainId } = Web3Context;\r\n  const [activatingConnector, setActivatingConnector] = React.useState();\r\n  const [connectionMenu, setconnectionMenu] = useState(false);\r\n  const [dialogWeb3, setdialogWeb3] = useState(false);\r\n  // const { enqueueSnackbar, closeSnackbar } = useSnackbar();\r\n\r\n  const handleConnectionIconClick = (event) => {\r\n    setconnectionMenu(event.currentTarget);\r\n  };\r\n  const handleConnectionMenuClose = () => {\r\n    setconnectionMenu(null);\r\n  };\r\n  const handleWeb3Modal = () => {\r\n    setconnectionMenu(null);\r\n    setdialogWeb3(!dialogWeb3);\r\n  };\r\n  const { t } = props;\r\n\r\n  const loadWeb3Modal = () => {\r\n    setdialogWeb3(!dialogWeb3);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (activatingConnector && activatingConnector === connector) {\r\n      setActivatingConnector(undefined);\r\n    }\r\n  }, [activatingConnector, connector]);\r\n  /*\r\n  useEffect(() => {\r\n    if (!!error) {\r\n      enqueueSnackbar(\"I love hooks\");\r\n    }\r\n  }, [error, enqueueSnackbar]);\r\n*/\r\n\r\n  return (\r\n    <Fragment>\r\n      {!account ? (\r\n        <Tooltip title=\"Connect to your Ethereum account\">\r\n          <Button variant=\"contained\" color=\"secondary\" onClick={loadWeb3Modal}>\r\n            Connect\r\n          </Button>\r\n        </Tooltip>\r\n      ) : (\r\n        <>\r\n          <Tooltip disableFocusListener title={t(\"base.youraccount\")} aria-label={t(\"base.youraccount\")}>\r\n            <IconButton color=\"inherit\" onClick={handleConnectionIconClick}>\r\n              <Avatar>\r\n                <Blockies seed={account.toLowerCase()} size={10} scale={4} className=\"blockies\" />\r\n              </Avatar>\r\n            </IconButton>\r\n          </Tooltip>\r\n          <Backdrop open={Boolean(connectionMenu)} className=\"backdropZindex\">\r\n            <Popover id=\"settings-menu\" open={Boolean(connectionMenu)} anchorEl={connectionMenu} onClose={handleConnectionMenuClose}>\r\n              <Paper>\r\n                <Box m={2}>\r\n                  <List dense>\r\n                    {account && (\r\n                      <ListItem>\r\n                        <Tooltip disableFocusListener title={t(\"base.youraccount\")}>\r\n                          <ListItemAvatar>\r\n                            <Avatar>\r\n                              <Blockies seed={account.toLowerCase()} size={10} scale={4} className=\"blockies\" />\r\n                            </Avatar>\r\n                          </ListItemAvatar>\r\n                        </Tooltip>\r\n                        <ListItemText secondary={account.toLowerCase()} primary={t(\"base.yourWeb3Account\")} />\r\n                      </ListItem>\r\n                    )}\r\n                    {chainId === NETWORKS[TARGET_CHAIN].chainId ? (\r\n                      <ListItem>\r\n                        <ListItemAvatar>\r\n                          <Avatar className=\"avatar-success\">\r\n                            <Check />\r\n                          </Avatar>\r\n                        </ListItemAvatar>\r\n                        <ListItemText secondary={\"Successfully connected to \" + TARGET_CHAIN.toUpperCase()} primary=\"Connected\" />\r\n                      </ListItem>\r\n                    ) : (\r\n                      <ListItem>\r\n                        <ListItemAvatar>\r\n                          <Avatar className=\"avatar-warning\">\r\n                            <Warning />\r\n                          </Avatar>\r\n                        </ListItemAvatar>\r\n                        <ListItemText secondary={\"Please select \" + TARGET_CHAIN.toUpperCase() + \" in your wallet\"} primary=\"WRONG NETWORK\" />\r\n                      </ListItem>\r\n                    )}\r\n                    <ListItem>\r\n                      <ListItemText secondary={<AromaBalance />} primary=\"Your AROMA balance\" />\r\n                    </ListItem>\r\n                    <ListItem>\r\n                      <ListItemText secondary={<Balance />} primary=\"Your MATIC balance\" />\r\n                    </ListItem>\r\n                  </List>\r\n                  <Button color=\"primary\" variant=\"contained\" onClick={handleConnectionMenuClose}>\r\n                    {t(\"base.close\")}\r\n                  </Button>\r\n                  &nbsp;\r\n                  <Button color=\"primary\" variant=\"outlined\" onClick={handleWeb3Modal}>\r\n                    {t(\"base.settings\")}\r\n                  </Button>\r\n                </Box>\r\n              </Paper>\r\n            </Popover>\r\n          </Backdrop>\r\n        </>\r\n      )}\r\n      <Dialog onClose={handleWeb3Modal} open={dialogWeb3} keepMounted maxWidth=\"lg\">\r\n        <DialogContent>\r\n          <Typography variant=\"h2\" gutterBottom>\r\n            Connect Wallet\r\n          </Typography>\r\n\r\n          {Object.keys(connectorsList).map((name) => (\r\n            <Box mb={2} key={name}>\r\n              <Grid container spacing={2}>\r\n                <Grid item sm={6} md={4}>\r\n                  <Button\r\n                    variant=\"contained\"\r\n                    style={{\r\n                      borderColor:\r\n                        connectorsList[name].connector === activatingConnector ? \"orange\" : connectorsList[name].connector === connector ? \"green\" : \"unset\",\r\n                    }}\r\n                    disabled={!triedEager || !!activatingConnector || connectorsList[name].connector === connector || !!error}\r\n                    onClick={() => {\r\n                      setActivatingConnector(connectorsList[name].connector);\r\n                      activate(connectorsList[name].connector);\r\n                    }}>\r\n                    <div>\r\n                      {connectorsList[name].connector === activatingConnector && <span>loading</span>}\r\n                      {connectorsList[name].connector === connector && (\r\n                        <span role=\"img\" aria-label=\"check\">\r\n                          ✅\r\n                        </span>\r\n                      )}\r\n                    </div>\r\n                    {name}\r\n                  </Button>\r\n                </Grid>\r\n                <Grid item sm={6} md={8}>\r\n                  <Typography variant=\"body2\">{connectorsList[name].description}</Typography>\r\n                </Grid>\r\n              </Grid>\r\n            </Box>\r\n          ))}\r\n          <Grid container item spacing={2}>\r\n            {!!error && <h4 style={{ marginTop: \"1rem\", marginBottom: \"0\" }}>{getErrorMessage(error)}</h4>}\r\n          </Grid>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleWeb3Modal} variant=\"contained\" color=\"primary\">\r\n            {t(\"base.close\")}\r\n          </Button>\r\n          {(active || error) && (\r\n            <Button\r\n              onClick={() => {\r\n                deactivate();\r\n              }}\r\n              variant=\"outlined\"\r\n              color=\"primary\">\r\n              {t(\"base.deactivate\")}\r\n            </Button>\r\n          )}\r\n        </DialogActions>\r\n      </Dialog>\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nexport default withRouter(withTranslation()(Web3connect));\r\n","import { useState, useEffect } from \"react\";\r\nimport { useWeb3React } from \"@web3-react/core\";\r\nimport { injected } from \"./connectors\";\r\n\r\nexport function useEagerConnect() {\r\n  const { activate, active } = useWeb3React();\r\n\r\n  const [tried, setTried] = useState(false);\r\n\r\n  useEffect(() => {\r\n    injected.isAuthorized().then((isAuthorized) => {\r\n      if (isAuthorized) {\r\n        activate(injected, undefined, true).catch(() => {\r\n          setTried(true);\r\n        });\r\n      } else {\r\n        setTried(true);\r\n      }\r\n    });\r\n  }, [activate]); // intentionally only running on mount (make sure it's only mounted once :))\r\n\r\n  // if the connection worked, wait until we get confirmation of that to flip the flag\r\n  useEffect(() => {\r\n    if (!tried && active) {\r\n      setTried(true);\r\n    }\r\n  }, [tried, active]);\r\n\r\n  return tried;\r\n}\r\n\r\nexport function useInactiveListener(suppress = false) {\r\n  const { active, error, activate } = useWeb3React();\r\n\r\n  useEffect(() => {\r\n    const { ethereum } = window;\r\n    if (ethereum && ethereum.on && !active && !error && !suppress) {\r\n      const handleConnect = () => {\r\n        console.log(\"Handling 'connect' event\");\r\n        activate(injected);\r\n      };\r\n      const handleChainChanged = (chainId) => {\r\n        console.log(\"Handling 'chainChanged' event with payload\", chainId);\r\n        activate(injected);\r\n      };\r\n      const handleAccountsChanged = (accounts) => {\r\n        console.log(\"Handling 'accountsChanged' event with payload\", accounts);\r\n        if (accounts.length > 0) {\r\n          activate(injected);\r\n        }\r\n      };\r\n      const handleNetworkChanged = (networkId) => {\r\n        console.log(\"Handling 'networkChanged' event with payload\", networkId);\r\n        activate(injected);\r\n      };\r\n\r\n      ethereum.on(\"connect\", handleConnect);\r\n      ethereum.on(\"chainChanged\", handleChainChanged);\r\n      ethereum.on(\"accountsChanged\", handleAccountsChanged);\r\n      ethereum.on(\"networkChanged\", handleNetworkChanged);\r\n\r\n      return () => {\r\n        if (ethereum.removeListener) {\r\n          ethereum.removeListener(\"connect\", handleConnect);\r\n          ethereum.removeListener(\"chainChanged\", handleChainChanged);\r\n          ethereum.removeListener(\"accountsChanged\", handleAccountsChanged);\r\n          ethereum.removeListener(\"networkChanged\", handleNetworkChanged);\r\n        }\r\n      };\r\n    }\r\n  }, [active, error, suppress, activate]);\r\n}\r\n","import i18n from \"i18next\";\r\n// import Backend from 'i18next-xhr-backend';\r\n//import LanguageDetector from \"i18next-browser-languagedetector\";\r\nimport { format, formatDistance } from \"date-fns\";\r\n// other date functions: { formatDistance, formatRelative, subDays } from 'date-fns';\r\nimport { de, enUS, fr, it } from \"date-fns/locale\";\r\nimport transEn from \"./i18n/en/translation\";\r\n//import transDe from \"./i18n/de/translation\";\r\n//import transFr from \"./i18n/fr/translation\";\r\n//import transIt from \"./i18n/it/translation\";\r\nimport { initReactI18next } from \"react-i18next\";\r\n\r\nconst dateLang = {\r\n  en: enUS,\r\n  de: de,\r\n  fr: fr,\r\n  it: it,\r\n};\r\n\r\ni18n\r\n  // load translation using xhr -> see /public/locales\r\n  // learn more: https://github.com/i18next/i18nextdate-xhr-backend\r\n  //.use(Backend)\r\n  // detect user language\r\n  // learn more: https://github.com/i18next/i18next-browser-languageDetector\r\n  //.use(LanguageDetector)\r\n  // pass the i18n instance to the react-i18next components.\r\n  // Alternative use the I18nextProvider: https://react.i18next.com/components/i18nextprovider\r\n  .use(initReactI18next)\r\n  // init i18next\r\n  // for all options read: https://www.i18next.com/overview/configuration-options\r\n  .init({\r\n    whitelist: [\"en\", \"de\", \"fr\", \"it\"],\r\n    fallbackLng: \"en\",\r\n    cleanCode: true,\r\n    lowerCaseLng: true,\r\n    debug: false,\r\n    interpolation: {\r\n      escapeValue: false, // not needed for react as it escapes by default\r\n      format: function (value, formatting, lng) {\r\n        var makedate = (value) => {\r\n          if (value instanceof Date) {\r\n            return value;\r\n          } else {\r\n            var d = new Date(0);\r\n            d.setUTCSeconds(value);\r\n            return d;\r\n          }\r\n        };\r\n        var now = new Date();\r\n        switch (formatting) {\r\n          case \"distance\":\r\n            switch (lng) {\r\n              case \"de\":\r\n                value = makedate(value);\r\n                return (\r\n                  (value.getTime() > now.getTime() ? \"in \" : \"vor \") +\r\n                  formatDistance(value, now, {\r\n                    locale: dateLang[lng],\r\n                  })\r\n                );\r\n              case \"en\":\r\n              default:\r\n                value = makedate(value);\r\n                return (\r\n                  formatDistance(value, now, {\r\n                    locale: dateLang[lng],\r\n                  }) + (value.getTime() > now.getTime() ? \" remaining\" : \" ago\")\r\n                );\r\n            }\r\n          case \"date\":\r\n            return format(makedate(value), \"dd.MM.yyyy\", {\r\n              locale: dateLang[lng],\r\n            });\r\n          case \"datetime\":\r\n            return format(makedate(value), \"dd.MM.yyyy hh:mm\", {\r\n              locale: dateLang[lng],\r\n            });\r\n          default:\r\n            if (value instanceof Date) return format(value, formatting, { locale: dateLang[lng] });\r\n            else return value;\r\n        }\r\n      },\r\n    },\r\n    keySeparator: \".\",\r\n    react: {\r\n      wait: true,\r\n    },\r\n    resources: {\r\n      en: { translation: transEn },\r\n      /*\r\n      de: { translation: transDe },\r\n      fr: { translation: transFr },\r\n      it: { translation: transIt },\r\n      */\r\n    },\r\n  });\r\n\r\nexport default i18n;\r\n","import React, { Component, Fragment } from \"react\";\r\n/*\r\nimport Tooltip from \"@mui/material/Tooltip\";\r\nimport Menu from \"@mui/material/Menu\";\r\nimport MenuItem from \"@mui/material/MenuItem\";\r\nimport Badge from \"@mui/material/Badge\";\r\nimport LanguageIcon from \"@mui/icons-material/Language\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport Backdrop from \"@mui/material/Backdrop\";\r\n*/\r\nimport { withTranslation } from \"react-i18next\";\r\nimport i18n from \"./../../i18n\";\r\n\r\nclass LanguageSelector extends Component {\r\n  state = {\r\n    languageMenu: null,\r\n    locale: i18n.language,\r\n  };\r\n\r\n  handleLanguageIconClick = (event) => {\r\n    this.setState({ languageMenu: event.currentTarget });\r\n  };\r\n  handleLanguageMenuClose = () => {\r\n    this.setState({ languageMenu: null });\r\n  };\r\n  handleLangChange = (name) => (event) => {\r\n    this.setState({ languageMenu: null });\r\n    i18n.changeLanguage(name);\r\n    this.setState({ locale: name });\r\n  };\r\n\r\n  render() {\r\n    //const { languageMenu } = this.state;\r\n    //const { t } = this.props;\r\n    return (\r\n      <Fragment>\r\n        {/* \r\n        <Tooltip title={t(\"base.changelang\")} aria-label={t(\"base.changelang\")} disableFocusListener>\r\n          <IconButton color=\"inherit\" aria-owns={languageMenu ? \"language-menu\" : undefined} aria-haspopup=\"true\" onClick={this.handleLanguageIconClick}>\r\n            <Badge badgeContent={this.state.locale.substring(0, 2).toUpperCase()} color=\"default\">\r\n              <LanguageIcon />\r\n            </Badge>\r\n          </IconButton>\r\n        </Tooltip>\r\n        <Backdrop open={Boolean(languageMenu)} className=\"backdropZindex\">\r\n          <Menu id=\"language-menu\" anchorEl={languageMenu} open={Boolean(languageMenu)} onClose={this.handleLanguageMenuClose}>\r\n            <MenuItem onClick={this.handleLangChange(\"en\")}>English</MenuItem>\r\n            <MenuItem onClick={this.handleLangChange(\"de\")}>Deutsch</MenuItem>\r\n            <MenuItem onClick={this.handleLangChange(\"fr\")}>Français</MenuItem>\r\n            <MenuItem onClick={this.handleLangChange(\"it\")}>Italiano</MenuItem>\r\n          </Menu>\r\n        </Backdrop>\r\n        */}\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withTranslation()(LanguageSelector);\r\n","import React, { Component } from \"react\";\r\nimport { withTranslation } from \"react-i18next\";\r\nimport { Link } from \"react-router-dom\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport Avatar from \"@mui/material/Avatar\";\r\nimport Tooltip from \"@mui/material/Tooltip\";\r\nimport logo from \"../../assets/logo.png\";\r\n\r\nclass LogoButton extends Component {\r\n  state = {\r\n    animation: true,\r\n  };\r\n  animate = () => {\r\n    this.setState({\r\n      animation: false,\r\n    });\r\n    window.clearTimeout(this.timeout);\r\n    this.timeout = window.setTimeout(() => {\r\n      this.setState({ animation: true });\r\n    }, 100);\r\n  };\r\n\r\n  render() {\r\n    const { t } = this.props;\r\n\r\n    return (\r\n      <Tooltip disableFocusListener title={t(\"base.titleTooltip\")} aria-label={t(\"base.titleTooltip\")}>\r\n        <IconButton color=\"inherit\" component={Link} to=\"/\">\r\n          <Avatar alt={t(\"base.titleTooltip\")} src={logo} />\r\n        </IconButton>\r\n      </Tooltip>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withTranslation()(LogoButton);\r\n","import React, { Component } from \"react\";\r\nimport { withTranslation } from \"react-i18next\";\r\nimport { withRouter, Link } from \"react-router-dom\";\r\n//material-ui\r\nimport Toolbar from \"@mui/material/Toolbar\";\r\nimport AppBar from \"@mui/material/AppBar\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport Button from \"@mui/material/Button\";\r\nimport ButtonGroup from \"@mui/material/ButtonGroup\";\r\nimport List from \"@mui/material/List\";\r\nimport ListItem from \"@mui/material/ListItem\";\r\nimport ListItemText from \"@mui/material/ListItemText\";\r\nimport DialogActions from \"@mui/material/DialogActions\";\r\nimport Dialog from \"@mui/material/Dialog\";\r\nimport DialogTitle from \"@mui/material/DialogTitle\";\r\nimport DialogContent from \"@mui/material/DialogContent\";\r\nimport ListItemIcon from \"@mui/material/ListItemIcon\";\r\nimport Tooltip from \"@mui/material/Tooltip\";\r\nimport Hidden from \"@mui/material/Hidden\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\n// icons\r\nimport People from \"@mui/icons-material/People\";\r\nimport EventNote from \"@mui/icons-material/EventNote\";\r\nimport Settings from \"@mui/icons-material/Settings\";\r\n//custom\r\n//import OfflineInfo from \"./OfflineInfo\";  // deactivated for the time being\r\nimport Web3connect from \"./Web3connect\";\r\nimport LanguageSelector from \"./LanguageSelector\";\r\nimport LogoButton from \"../common/LogoButton\";\r\n\r\nconst links = [\r\n  { name: \"Store\", icon: <Settings />, path: \"/store\", description: \"Buy some Aroma\" },\r\n  { name: \"Kitchen\", icon: <EventNote />, path: \"/kitchen\", description: \"Create your recipe\" },\r\n  { name: \"Buffet\", icon: <People />, path: \"/buffet\", description: \"Order and enjoy your meal\" },\r\n];\r\n\r\nclass TopBar extends Component {\r\n  state = {\r\n    popover: false,\r\n  };\r\n  handleConnectionIconClick = (event) => {\r\n    this.setState({ popover: true });\r\n  };\r\n  handleConnectionMenuClose = () => {\r\n    this.setState({ popover: false });\r\n  };\r\n  render() {\r\n    const { t } = this.props;\r\n    const { popover } = this.state;\r\n\r\n    return (\r\n      <AppBar elevation={0} position=\"static\">\r\n        <Toolbar>\r\n          <Grid container direction=\"row\" justifyContent=\"space-between\" alignItems=\"center\">\r\n            <Grid item>\r\n              <LogoButton />\r\n\r\n              <Button color=\"inherit\" size=\"large\" component={Link} to=\"/\">\r\n                {t(\"base.title\")}\r\n              </Button>\r\n            </Grid>\r\n            <Grid item>\r\n              <Hidden smDown>\r\n                <ButtonGroup color=\"secondary\" variant=\"contained\" size=\"large\">\r\n                  {links.map((item, index) => (\r\n                    <Tooltip key={index} title={item.description}>\r\n                      <Button component={Link} to={item.path}>\r\n                        {item.name}\r\n                      </Button>\r\n                    </Tooltip>\r\n                  ))}\r\n                </ButtonGroup>\r\n              </Hidden>\r\n              <Hidden mdUp>\r\n                <Tooltip title={t(\"admin.navControlButton\")}>\r\n                  <IconButton color=\"inherit\" onClick={this.handleConnectionIconClick}>\r\n                    <Settings />\r\n                  </IconButton>\r\n                </Tooltip>\r\n              </Hidden>\r\n              <Dialog onClose={this.handleConnectionMenuClose} aria-labelledby=\"admininfos\" open={popover}>\r\n                <DialogTitle id=\"admininfos\">Admin Infos</DialogTitle>\r\n                <DialogContent>\r\n                  <List dense>\r\n                    {links.map((item, index) => (\r\n                      <ListItem key={index} button component={Link} to={\"/assembly/\" + item.path} onClick={this.handleConnectionMenuClose}>\r\n                        <ListItemIcon color=\"primary\">{item.icon}</ListItemIcon>\r\n                        <ListItemText primary={item.name} secondary={item.description} />\r\n                      </ListItem>\r\n                    ))}\r\n                  </List>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                  <Button color=\"primary\" variant=\"outlined\" onClick={this.handleConnectionMenuClose}>\r\n                    Close\r\n                  </Button>\r\n                </DialogActions>\r\n              </Dialog>\r\n            </Grid>\r\n            <Grid item>\r\n              <Web3connect />\r\n              <LanguageSelector />\r\n            </Grid>\r\n          </Grid>\r\n        </Toolbar>\r\n      </AppBar>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(withTranslation()(TopBar));\r\n","import React, { Component } from \"react\";\r\n//material-ui\r\nimport Box from \"@mui/material/Box\";\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\n\r\nclass LoadingSpinner extends Component {\r\n  render() {\r\n    return (\r\n      <Box \r\n        my={6}\r\n        textAlign=\"center\"\r\n        alignItems=\"center\"\r\n        justifyContent=\"center\"\r\n      >\r\n        <CircularProgress color=\"primary\" />\r\n      </Box>\r\n    );\r\n  }\r\n}\r\n\r\nexport default LoadingSpinner;\r\n","import React, { Fragment } from \"react\";\r\nimport * as serviceWorkerRegistration from \"../serviceWorkerRegistration\";\r\nimport Button from \"@mui/material/Button\";\r\nimport { withSnackbar } from \"notistack\";\r\n\r\nclass ServiceWorkerWrapper extends React.Component {\r\n  state = {\r\n    showReload: null,\r\n    waitingWorker: null,\r\n  };\r\n\r\n  componentDidMount() {\r\n    serviceWorkerRegistration.register({ onUpdate: this.onSWUpdate });\r\n  }\r\n\r\n  onSWUpdate = (registration) => {\r\n    this.setState({ waitingWorker: registration.waiting });\r\n    const activeSnackbar = this.props.enqueueSnackbar(\"A new version is available\", {\r\n      variant: \"warning\",\r\n      persist: true,\r\n      action: (\r\n        <Button color=\"inherit\" size=\"small\" onClick={this.reloadPage}>\r\n          Update now\r\n        </Button>\r\n      ),\r\n    });\r\n    this.setState({ showReload: activeSnackbar });\r\n  };\r\n\r\n  reloadPage = () => {\r\n    this.props.closeSnackbar(this.state.showReload);\r\n    this.state.waitingWorker.postMessage({ type: \"SKIP_WAITING\" });\r\n    window.location.reload(true);\r\n  };\r\n\r\n  render() {\r\n    return <Fragment> </Fragment>;\r\n  }\r\n}\r\n\r\nexport default withSnackbar(ServiceWorkerWrapper);\r\n","import React, { Component, Suspense, lazy } from \"react\";\r\nimport { Switch, Route, BrowserRouter as Router } from \"react-router-dom\";\r\nimport { withTranslation } from \"react-i18next\";\r\nimport { SnackbarProvider } from \"notistack\";\r\nimport { Web3ReactProvider } from \"@web3-react/core\";\r\nimport Web3 from \"web3\";\r\n// fonts\r\nimport \"@fontsource/roboto/300.css\";\r\nimport \"@fontsource/roboto/400.css\";\r\nimport \"@fontsource/roboto/500.css\";\r\nimport \"@fontsource/roboto/700.css\";\r\n// material-ui\r\nimport { green, blue, red } from \"@mui/material/colors\";\r\nimport { ThemeProvider } from \"@mui/material/styles\";\r\nimport CssBaseline from \"@mui/material/CssBaseline\";\r\nimport { theme } from \"./utils/theme\";\r\n// shell\r\nimport TopBar from \"./components/layout/TopBar\";\r\nimport LoadingSpinner from \"./components/common/LoadingSpinner\";\r\nimport ServiceWorkerWrapper from \"./components/ServiceWorkerWrapper\";\r\nimport { Container, Paper } from \"@mui/material\";\r\n// pages (lazy loading)\r\nconst Main = lazy(() => import(\"./views/Main/Main\"));\r\n//const Web3Test = lazy(() => import(\"./views/Web3/Web3Test\"));\r\nconst Store = lazy(() => import(\"./views/Store/Store\"));\r\nconst Kitchen = lazy(() => import(\"./views/Kitchen/Kitchen\"));\r\nconst Buffet = lazy(() => import(\"./views/Buffet/Buffet\"));\r\nconst Internal = lazy(() => import(\"./views/Internal/Internal\"));\r\n\r\nfunction getLibrary(provider) {\r\n  //const library =\r\n  //library.pollingInterval = 12000\r\n  return new Web3(provider);\r\n}\r\n\r\nclass App extends Component {\r\n  state = {\r\n    expertmode: false,\r\n    videoOn: false,\r\n    admin: false,\r\n  };\r\n\r\n  setExpertMode = (boolValue) => {\r\n    this.setState({ expertmode: boolValue });\r\n    window.localStorage.setItem(\"expertmode\", boolValue);\r\n  };\r\n  setVideoOn = (boolValue) => {\r\n    this.setState({ videoOn: boolValue });\r\n    window.localStorage.setItem(\"videoOn\", boolValue);\r\n  };\r\n  setAdmin = (boolValue) => {\r\n    this.setState({ admin: boolValue });\r\n  };\r\n\r\n  render() {\r\n    const { expertmode, videoOn, admin } = this.state;\r\n\r\n    return (\r\n      <Web3ReactProvider getLibrary={getLibrary}>\r\n        <ThemeProvider theme={theme}>\r\n          <SnackbarProvider\r\n            anchorOrigin={{\r\n              vertical: \"bottom\",\r\n              horizontal: \"right\",\r\n            }}\r\n            maxSnack={3}\r\n            autoHideDuration={6000}\r\n            classes={{\r\n              variantSuccess: {\r\n                backgroundImage: \"linear-gradient(90deg,\" + green[700] + \",\" + green[500] + \")\",\r\n              },\r\n              variantError: {\r\n                backgroundImage: \"linear-gradient(90deg,\" + red[700] + \",\" + red[400] + \")\",\r\n              },\r\n              variantWarning: {\r\n                backgroundImage: \"linear-gradient(90deg,\" + blue[700] + \",\" + blue[500] + \")\",\r\n              },\r\n              variantInfo: {\r\n                backgroundImage: \"linear-gradient(90deg,\" + blue[700] + \",\" + blue[500] + \")\",\r\n              },\r\n            }}>\r\n            <CssBaseline />\r\n            <Router basename=\"/\">\r\n              <Container maxWidth=\"lg\" disableGutters={true}>\r\n                <Paper square elevation={5}>\r\n                  <TopBar setExpertMode={this.setExpertMode} setVideoOn={this.setVideoOn} expertmode={expertmode} videoOn={videoOn} admin={admin} />\r\n                  <ServiceWorkerWrapper />\r\n                  <Suspense fallback={<LoadingSpinner />}>\r\n                    <Switch>\r\n                      <Route exact path=\"/\" component={Store} />\r\n                      <Route exact path=\"/start\" component={Main} />\r\n                      <Route exact path=\"/buffet\" component={Buffet} />\r\n                      <Route exact path=\"/store\" component={Store} />\r\n                      <Route exact path=\"/kitchen\" component={Kitchen} />\r\n                      <Route exact path=\"/internal\" component={Internal} />\r\n                    </Switch>\r\n                  </Suspense>\r\n                </Paper>\r\n              </Container>\r\n            </Router>\r\n          </SnackbarProvider>\r\n        </ThemeProvider>\r\n      </Web3ReactProvider>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withTranslation()(App);\r\n"],"sourceRoot":""}