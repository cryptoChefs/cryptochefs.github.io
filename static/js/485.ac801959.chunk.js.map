{"version":3,"file":"static/js/485.ac801959.chunk.js","mappings":"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","sources":["Components/MobileComponents/HowItWorksMobile.jsx","Components/WebComponents/HowItWorksWeb.jsx","Components/HowItWorksComponent.jsx","utils/dimensions.js"],"sourcesContent":["import React from \"react\";\nimport { Typography, Grid, Avatar, Container } from \"@mui/material\";\nimport Carousel from \"react-material-ui-carousel\";\nimport cook from \"../../assets/Cook-Stake-Earn/cook.png\";\nimport stake from \"../../assets/Cook-Stake-Earn/stake.png\";\nimport earn from \"../../assets/Cook-Stake-Earn/earn.png\";\nimport back from \"../../assets/Arrows/back-arrow.svg\";\nimport forward from \"../../assets/Arrows/forward-arrow.svg\";\nimport { NextButton, BackButton } from \"../../utils/theme.js\";\n\nconst HowItWorksMobile = () => {\n  const steps = [\n    {\n      image: cook,\n      number: \"1\",\n      title: \"Cook\",\n      content: \"Combine your favourite cryptocurrencies to create a recipe.\",\n    },\n    {\n      image: stake,\n      number: \"2\",\n      title: \"Stake\",\n      content:\n        \"Add AROMA to your Recipes to compete against other CHEFs, the more you stake, the higher your rewards.\",\n    },\n    {\n      image: earn,\n      number: \"3\",\n      title: \"Earn\",\n      content:\n        \"Win daily, weekly, and monthly AROMA based on your Recipes' performance in the market!\",\n    },\n  ];\n\n  return (\n    <Grid\n      container\n      xs={12}\n      pb=\"20vw\"\n      flexDirection=\"column\"\n      alignItems=\"center\"\n    >\n      <Typography variant=\"h2\">HOW IT WORKS</Typography>\n      <Container>\n        <Carousel\n          interval=\"15000\"\n          navButtonsAlwaysVisible\n          indicatorIconButtonProps={{\n            style: {\n              color: \"transparent\",\n            },\n          }}\n          navButtonsProps={{\n            style: {\n              backgroundColor: \"transparent\",\n              marginTop: \"25px\",\n              width: \"35px\",\n              height: \"35px\",\n            },\n          }}\n          PrevIcon={\n            <BackButton>\n              <img src={back} width=\"100%\" alt=\"PrevIcon\"></img>\n            </BackButton>\n          }\n          NextIcon={\n            <NextButton>\n              <img src={forward} width=\"100%\" alt=\"NextIcon\"></img>\n            </NextButton>\n          }\n        >\n          {steps.map((step) => (\n            <Grid\n              container\n              item\n              xs={12}\n              flexDirection=\"column\"\n              justifyContent=\"center\"\n              alignItems=\"center\"\n            >\n              <Grid item xs={12}>\n                <img src={step.image} width=\"100%\" alt={step.title}></img>\n              </Grid>\n              <Grid\n                container\n                item\n                sx={12}\n                justifyContent=\"center\"\n                alignItems=\"center\"\n              >\n                <Grid item xs={1.5}>\n                  <Avatar>\n                    <Typography variant=\"h3\" mt=\"0\">\n                      {step.number}\n                    </Typography>\n                  </Avatar>\n                </Grid>\n                <Grid item xs={2}>\n                  <Typography variant=\"h3\" mt=\"0\">\n                    {step.title}\n                  </Typography>\n                </Grid>\n              </Grid>\n              <Grid item xs={10}>\n                <Typography variant=\"h4\">{step.content}</Typography>\n              </Grid>\n            </Grid>\n          ))}\n        </Carousel>\n      </Container>\n    </Grid>\n  );\n};\nexport default HowItWorksMobile;\n","import React from \"react\";\nimport { Typography, Grid, Avatar } from \"@mui/material\";\nimport cook from \"../../assets/Cook-Stake-Earn/cook.png\";\nimport stake from \"../../assets/Cook-Stake-Earn/stake.png\";\nimport earn from \"../../assets/Cook-Stake-Earn/earn.png\";\n\nconst HowItWorksWeb = () => {\n  const steps = [\n    {\n      image: cook,\n      number: \"1\",\n      title: \"Cook\",\n      content: \"Combine your favourite cryptocurrencies to create a recipe.\",\n    },\n    {\n      image: stake,\n      number: \"2\",\n      title: \"Stake\",\n      content:\n        \"Add AROMA to your Recipes to compete against other CHEFs, the more you stake, the higher your rewards.\",\n    },\n    {\n      image: earn,\n      number: \"3\",\n      title: \"Earn\",\n      content:\n        \"Win daily, weekly, and monthly AROMA based on your Recipes' performance in the market!\",\n    },\n  ];\n\n  return (\n    <Grid container flexDirection=\"column\" alignItems=\"center\">\n      <Grid item>\n        <Typography variant=\"h2\">HOW IT WORKS</Typography>\n      </Grid>\n      <Grid\n        container\n        item\n        justifyContent=\"center\"\n        alignItems=\"flex-start\"\n        spacing={8}\n        xs={12}\n        md={12}\n        lg={12}\n      >\n        {steps.map((step) => (\n          <Grid\n            container\n            item\n            xs={2.7}\n            md={2.7}\n            lg={2.7}\n            justifyContent=\"center\"\n          >\n            <Grid item>\n              <img src={step.image} width=\"100%\" alt={step.title}></img>\n            </Grid>\n            <Grid container item alignItems=\"center\">\n              <Grid item md={3.5} lg={2.2}>\n                <Avatar>\n                  <Typography variant=\"h3\" mt=\"0\">\n                    {step.number}\n                  </Typography>\n                </Avatar>\n              </Grid>\n              <Grid item md={7} lg={7}>\n                <Typography variant=\"h3\" mt=\"0\">\n                  {step.title}\n                </Typography>\n              </Grid>\n            </Grid>\n            <Grid item md={12} lg={12}>\n              <Typography variant=\"h4\">{step.content}</Typography>\n            </Grid>\n          </Grid>\n        ))}\n      </Grid>\n    </Grid>\n  );\n};\nexport default HowItWorksWeb;\n","import React from \"react\";\nimport HowItWorksMobile from \"./MobileComponents/HowItWorksMobile\";\nimport HowItWorksWeb from \"./WebComponents/HowItWorksWeb\";\nimport Dimensions from \"../utils/dimensions\";\n\nconst HowItWorksComponent = () => {\n  return Dimensions().width > 900 ? <HowItWorksWeb /> : <HowItWorksMobile />;\n};\nexport default HowItWorksComponent;\n","import React from \"react\";\n\nfunction debounce(fn, ms) {\n  let timer;\n  return (_) => {\n    clearTimeout(timer);\n    timer = setTimeout((_) => {\n      timer = null;\n      fn.apply(this, arguments);\n    }, ms);\n  };\n}\n\nconst Dimensions = () => {\n  const [dimensions, setDimensions] = React.useState({\n    height: window.innerHeight,\n    width: window.innerWidth,\n  });\n  React.useEffect(() => {\n    const debouncedHandleResize = debounce(function handleResize() {\n      setDimensions({\n        height: window.innerHeight,\n        width: window.innerWidth,\n      });\n    }, 1000);\n\n    window.addEventListener(\"resize\", debouncedHandleResize);\n  });\n\n  return dimensions;\n};\nexport default Dimensions;\n"],"names":["steps","image","cook","number","title","content","stake","earn","Grid","container","xs","pb","flexDirection","alignItems","Typography","variant","Container","interval","navButtonsAlwaysVisible","indicatorIconButtonProps","style","color","navButtonsProps","backgroundColor","marginTop","width","height","PrevIcon","src","back","alt","NextIcon","forward","map","step","item","justifyContent","sx","Avatar","mt","spacing","md","lg","Dimensions","React","window","innerHeight","innerWidth","dimensions","setDimensions","debouncedHandleResize","fn","ms","timer","_","clearTimeout","setTimeout","apply","arguments","debounce","addEventListener"],"sourceRoot":""}