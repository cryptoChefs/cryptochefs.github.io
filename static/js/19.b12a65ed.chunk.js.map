{"version":3,"sources":["components/form/CurrencyInputField.js","components/CurrencyExchange.js","components/StoreSteps.js","components/NFTBuy.js","components/NFTSilhouette.js","components/layout/Headline.js","views/Store/Store.js"],"names":["CurrencyInputField","e","this","props","onUserInput","target","value","t","id","label","currency","type","amount","TextField","variant","helperText","fullWidth","inputProps","inputMode","pattern","onChange","React","Component","withTranslation","CurrencyExchange","state","currencyFrom","currencyTo","switchCurrencies","setState","handleUserInput","console","log","handleExchange","sx","fullHeight","height","Card","CardContent","Typography","gutterBottom","Stack","my","spacing","alignItems","SwapCalls","onClick","Button","StoreSteps","Stepper","activeStep","alternativeLabel","map","Step","StepLabel","NFTBuy","currentNFT","NFTs","cryptochefsS01","sold","remaining","price","season","buy","NFT","textAlign","color","Divider","Grid","container","alignContent","mt","mb","item","xs","p","orientation","flexItem","NFTSilhouette","Paper","justifyContent","md","Box","src","srcSet","alt","loading","Headline","align","title","Store","document","body","className","xl","sm"],"mappings":"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","file":"static/js/19.b12a65ed.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nimport { withTranslation } from 'react-i18next'\r\nimport TextField from '@mui/material/TextField'\r\n\r\nclass CurrencyInputField extends React.Component {\r\n  handleChange(e) {\r\n    this.props.onUserInput(e.target.value);\r\n  }\r\n\r\n  render () {\r\n    const { t, id, label, currency, type, amount, onUserInput} = this.props\r\n\r\n    return (\r\n      <TextField\r\n        variant=\"outlined\"\r\n        id={id}\r\n        label={t(label)}\r\n        helperText={t(`components.CurrencyInputField.helperText`, { currency, type })}\r\n        type=\"number\"\r\n        fullWidth\r\n        inputProps={{ inputMode: 'numeric', pattern: '[0-9]*' }}\r\n        value={amount}\r\n        onChange={onUserInput}\r\n      />\r\n    )\r\n  }\r\n}\r\n\r\nexport default withTranslation()(CurrencyInputField)\r\n\r\n","import React from \"react\";\r\n\r\nimport { withTranslation } from 'react-i18next'\r\nimport Typography from '@mui/material/Typography'\r\nimport CardContent from '@mui/material/CardContent'\r\nimport Button from '@mui/material/Button'\r\nimport Card from '@mui/material/Card'\r\nimport CurrencyInputField from './form/CurrencyInputField'\r\nimport { SwapCalls } from '@mui/icons-material'\r\nimport { Stack } from '@mui/material'\r\n\r\nclass CurrencyExchange extends React.Component {\r\n\r\n  state = {\r\n    currencyFrom: 'MATIC',\r\n    currencyTo: 'AROMA'\r\n  }\r\n\r\n  switchCurrencies = () => {\r\n    this.setState({\r\n      currencyFrom: this.state.currencyTo,\r\n      currencyTo: this.state.currencyFrom\r\n    })\r\n  }\r\n\r\n  handleUserInput = () => {\r\n      console.log('Handle User Input')\r\n  }\r\n\r\n  handleExchange = () => {\r\n    console.log('Handle Exchange')\r\n  }\r\n\r\n  render() {\r\n    const { t, fullHeight } = this.props;\r\n\r\n    let sx = {};\r\n\r\n    if (fullHeight) {\r\n      sx = { height: \"100%\" }\r\n    }\r\n\r\n    return (\r\n      <Card sx={sx}>\r\n        <CardContent>\r\n          <Typography gutterBottom variant=\"h5\">\r\n            {t('store.exchangeTitle')}\r\n          </Typography>\r\n          <Typography variant=\"body2\">\r\n            It looks like that you are not yet a chef. In order to create a recipe, you must acquire a chef NFT.\r\n          </Typography>\r\n          <Stack my={4} spacing={1} alignItems=\"center\">\r\n            <CurrencyInputField\r\n              id=\"token-exchange-from\"\r\n              currency={this.state.currencyFrom}\r\n              label={this.state.currencyFrom}\r\n              type=\"buy\"\r\n              onUserInput={this.handleUserInput}\r\n            />\r\n            <SwapCalls onClick={this.switchCurrencies}/>\r\n            <CurrencyInputField\r\n              id=\"token-exchange-to\"\r\n              currency={this.state.currencyTo}\r\n              label={this.state.currencyTo}\r\n              type=\"sell\"\r\n              onUserInput={this.handleUserInput}\r\n            />\r\n          </Stack>\r\n          <Button variant=\"contained\" fullWidth onClick={this.handleExchange}>\r\n            Exchange\r\n          </Button>\r\n        </CardContent>\r\n      </Card>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withTranslation()(CurrencyExchange);\r\n\r\n","import React from 'react'\r\n\r\nimport { withTranslation } from 'react-i18next'\r\nimport CardContent from '@mui/material/CardContent'\r\nimport Card from '@mui/material/Card'\r\nimport { Step, StepLabel, Stepper } from '@mui/material'\r\n\r\nclass StoreSteps extends React.Component {\r\n  render () {\r\n    const { t } = this.props\r\n\r\n    const steps = [\r\n      'Exchange',\r\n      'Buy',\r\n      'Wait',\r\n    ]\r\n\r\n    return (\r\n      <Card>\r\n        <CardContent>\r\n          <Stepper activeStep={1} alternativeLabel>\r\n            {steps.map((label) => (\r\n              <Step key={label}>\r\n                <StepLabel>{label}</StepLabel>\r\n              </Step>\r\n            ))}\r\n          </Stepper>\r\n        </CardContent>\r\n      </Card>\r\n    )\r\n  }\r\n}\r\n\r\nexport default withTranslation()(StoreSteps)\r\n\r\n","import React from \"react\";\r\n\r\nimport { withTranslation } from 'react-i18next'\r\nimport Typography from '@mui/material/Typography'\r\nimport CardContent from '@mui/material/CardContent'\r\nimport Card from '@mui/material/Card'\r\nimport { Divider } from '@mui/material'\r\nimport Grid from '@mui/material/Grid'\r\nimport Button from '@mui/material/Button'\r\n\r\nclass NFTBuy extends React.Component {\r\n  state = {\r\n    currentNFT: 'cryptochefsS01',\r\n    NFTs: {\r\n      cryptochefsS01: {\r\n        sold: 0,\r\n        remaining: 0,\r\n        price: 34231,\r\n        season: 1\r\n      }\r\n    }\r\n  }\r\n\r\n  buy = () => {\r\n    console.log('Buy Nft')\r\n  }\r\n\r\n  render() {\r\n    const { t, fullHeight } = this.props;\r\n    const NFT = this.state.NFTs[this.state.currentNFT]\r\n\r\n    let sx = {};\r\n\r\n    if (fullHeight) {\r\n      sx = { height: \"100%\" }\r\n    }\r\n\r\n    return (\r\n      <Card sx={sx}>\r\n        <CardContent>\r\n          <Typography gutterBottom variant=\"h5\" textAlign=\"center\">\r\n            CryptoChefs\r\n          </Typography>\r\n          <Typography gutterBottom variant=\"h6\" textAlign=\"center\">\r\n            Remaining\r\n          </Typography>\r\n          <Typography gutterBottom variant=\"h1\" textAlign=\"center\">\r\n            {NFT.remaining}\r\n          </Typography>\r\n          <Typography gutterBottom variant=\"h4\" color=\"purple\" textAlign=\"center\">\r\n            {NFT.sold} Sold\r\n          </Typography>\r\n\r\n          <Divider />\r\n\r\n          <Grid container alignContent=\"center\" alignItems=\"center\" mt={2} mb={6}>\r\n            <Grid item xs p={1}>\r\n              Season {NFT.season}\r\n            </Grid>\r\n            <Divider orientation=\"vertical\" flexItem />\r\n            <Grid item xs p={1}>\r\n              <Typography variant=\"body1\">\r\n                Price per CryptoChef\r\n              </Typography>\r\n              <Typography variant=\"h5\" color=\"purple\">\r\n                {NFT.price} AROMA\r\n              </Typography>\r\n            </Grid>\r\n          </Grid>\r\n          <Button variant=\"contained\" fullWidth onClick={this.buy}>Buy CryptoChef</Button>\r\n        </CardContent>\r\n      </Card>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withTranslation()(NFTBuy);\r\n\r\n","import React from \"react\";\r\n\r\nimport { withTranslation } from 'react-i18next'\r\nimport Card from '@mui/material/Card'\r\nimport { Paper, CardContent, Typography, Box, Grid } from '@mui/material'\r\n\r\nclass NFTSilhouette extends React.Component {\r\n  render() {\r\n    const { t, fullHeight } = this.props;\r\n\r\n    let sx = {};\r\n\r\n    if (fullHeight) {\r\n      sx = { height: \"100%\" }\r\n    }\r\n\r\n    return (\r\n      <Card sx={sx}>\r\n        <CardContent>\r\n          <Typography gutterBottom variant=\"h5\">\r\n            NFT Shiolette\r\n          </Typography>\r\n          <Paper variant=\"outlined\">\r\n            <Grid container justifyContent=\"center\" alignItems=\"center\" my={3}>\r\n              <Grid item md={10}>\r\n                <Box textAlign=\"center\">\r\n                  <img\r\n                    src={`http://placehold.it/400x500`}\r\n                    srcSet={`http://placehold.it/400x500 2x`}\r\n                    alt=\"CryptoChef Silhouette\"\r\n                    loading=\"lazy\"\r\n                  />\r\n                </Box>\r\n              </Grid>\r\n            </Grid>\r\n          </Paper>\r\n        </CardContent>\r\n      </Card>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withTranslation()(NFTSilhouette);\r\n\r\n","import React from \"react\";\r\n\r\nimport { withTranslation } from 'react-i18next'\r\nimport Typography from '@mui/material/Typography'\r\n\r\nclass Headline extends React.Component {\r\n  render() {\r\n    const { t } = this.props;\r\n\r\n    return (\r\n      <Typography variant=\"h1\" align=\"center\" gutterBottom mt={3} mb={6}>\r\n        {t(this.props.title)}\r\n      </Typography>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withTranslation()(Headline);\r\n\r\n","import React, { Component } from \"react\";\r\nimport { withTranslation } from \"react-i18next\";\r\n//material-ui\r\nimport Grid from \"@mui/material/Grid\";\r\nimport TokenExchange from \"../../components/CurrencyExchange\";\r\nimport StoreSteps from \"../../components/StoreSteps\";\r\nimport NFTBuy from \"../../components/NFTBuy\";\r\nimport NFTSilhouette from \"../../components/NFTSilhouette\";\r\nimport Headline from \"../../components/layout/Headline\";\r\n\r\nclass Store extends Component {\r\n  componentDidMount() {\r\n    document.body.className = \"store\";\r\n  }\r\n  render() {\r\n    //  const { t } = this.props;\r\n\r\n    return (\r\n      <Grid item xs={12} md={9} xl={6} id=\"store\">\r\n        <Headline title={\"store.title\"} />\r\n        <Grid container spacing={2}>\r\n          <Grid item sm={12} md={12}>\r\n            <StoreSteps />\r\n          </Grid>\r\n          <Grid item sm={12} md={4}>\r\n            <TokenExchange fullHeight />\r\n          </Grid>\r\n          <Grid item sm={12} md={4}>\r\n            <NFTBuy fullHeight />\r\n          </Grid>\r\n          <Grid item sm={12} md={4}>\r\n            <NFTSilhouette fullHeight />\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withTranslation()(Store);\r\n"],"sourceRoot":""}