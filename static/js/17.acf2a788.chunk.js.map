{"version":3,"sources":["views/Internal/Internal.js","components/notification/ToastLoading.js","components/notification/ToastLoadingIndeterminate.js","components/layout/Headline.js"],"names":["withTranslation","t","useWeb3React","account","library","chainId","useState","isLoading","setIsLoading","contractErc721","setContractErc721","contractAroma","setContractAroma","contractMasterAddress","NETWORKS","TARGET_CHAIN","contractMaster","contractAromaAddress","useSnackbar","enqueueSnackbar","closeSnackbar","data","setData","aromaPrice","setAromaPrice","chefPrice","setChefPrice","deployAromaPrice","a","console","log","loadingSnackbar","variant","persist","action","methods","setAROMAPrice","send","from","gas","result","snackKey","deployChefPrice","setCryptoChefPrice","React","useEffect","eth","Contract","abi","abiAroma","loadData","dataTemp","getCryptoChefSeasonSupply","call","getCryptoChefPrice","getAROMAPrice","totalSupply","symbol","web3ready","pb","as","color","title","container","spacing","item","sm","md","disabled","type","onChange","e","target","value","endAdornment","position","edge","onClick","gutterBottom","adminAccount","ToastLoading","props","progress","setProgress","timer","setInterval","prevProgress","clearInterval","className","size","thickness","ToastLoadingIndeterminate","Headline","align","mt","mb","defaultProps"],"mappings":"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","file":"static/js/17.acf2a788.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport { withTranslation } from \"react-i18next\";\r\nimport { useWeb3React } from \"@web3-react/core\";\r\nimport { useSnackbar } from \"notistack\";\r\n// material-ui\r\nimport { Box, Container, OutlinedInput, Button, InputAdornment, Grid, Typography } from \"@mui/material\";\r\n// custom\r\nimport Headline from \"../../components/layout/Headline\";\r\n//import AromaPrice from \"../../components/web3/AromaPrice\";\r\nimport { NETWORKS, TARGET_CHAIN } from \"../../web3/constants\";\r\nimport abi from \"../../web3/abi/CryptoChefsERC721Facet.json\";\r\nimport abiAroma from \"../../web3/abi/AROMATokenMatic.json\";\r\nimport ToastLoading from \"../../components/notification/ToastLoading\";\r\nimport ToastLoadingIndeterminate from \"../../components/notification/ToastLoadingIndeterminate\";\r\n\r\nfunction Internal({ t }) {\r\n  const { account, library, chainId } = useWeb3React();\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [contractErc721, setContractErc721] = useState(false);\r\n  const [contractAroma, setContractAroma] = useState(false);\r\n  const contractMasterAddress = NETWORKS[TARGET_CHAIN].contractMaster;\r\n  const contractAromaAddress = NETWORKS[TARGET_CHAIN].contractAroma;\r\n  const { enqueueSnackbar, closeSnackbar } = useSnackbar();\r\n  const [data, setData] = useState({});\r\n  const [aromaPrice, setAromaPrice] = useState(0);\r\n  const [chefPrice, setChefPrice] = useState(0);\r\n\r\n  const handleAromaPrice = (event) => { setAromaPrice(event.target.value);  };\r\n  const handleChefPrice = (event) => { setChefPrice(event.target.value);  };\r\n\r\n  const deployAromaPrice = async () => {\r\n    console.log(aromaPrice)\r\n    console.log(account)\r\n    setIsLoading(true);\r\n    let loadingSnackbar = enqueueSnackbar(\"Transaction ongoing\", {\r\n      variant: \"warning\",\r\n      persist: true,\r\n      action: <ToastLoadingIndeterminate />,\r\n    });\r\n    try {\r\n      const result = await contractErc721.methods.setAROMAPrice(aromaPrice).send({ from: account, gas: 10000000 });\r\n      console.log(result);\r\n      closeSnackbar(loadingSnackbar);\r\n      enqueueSnackbar(\"Success\", {\r\n        variant: \"success\",\r\n        action: (snackKey) => <ToastLoading snackKey={snackKey} closeSnackbar={closeSnackbar} />,\r\n      });\r\n      setIsLoading(false);\r\n    } catch (error) {\r\n      console.log(error);\r\n      closeSnackbar(loadingSnackbar);\r\n      enqueueSnackbar(\"Error\", {\r\n        variant: \"error\",\r\n        action: (snackKey) => <ToastLoading snackKey={snackKey} closeSnackbar={closeSnackbar} />,\r\n      });\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  const deployChefPrice = async () => {\r\n    setIsLoading(true);\r\n    let loadingSnackbar = enqueueSnackbar(\"Transaction ongoing\", {\r\n      variant: \"warning\",\r\n      persist: true,\r\n      action: <ToastLoadingIndeterminate />,\r\n    });\r\n    try {\r\n      const result = await contractErc721.methods.setCryptoChefPrice(chefPrice).send({ from: account, gas: 10000000 });\r\n      console.log(result);\r\n      closeSnackbar(loadingSnackbar);\r\n      enqueueSnackbar(\"Success\", {\r\n        variant: \"success\",\r\n        action: (snackKey) => <ToastLoading snackKey={snackKey} closeSnackbar={closeSnackbar} />,\r\n      });\r\n      setIsLoading(false);\r\n    } catch (error) {\r\n      console.log(error);\r\n      closeSnackbar(loadingSnackbar);\r\n      enqueueSnackbar(\"Error\", {\r\n        variant: \"error\",\r\n        action: (snackKey) => <ToastLoading snackKey={snackKey} closeSnackbar={closeSnackbar} />,\r\n      });\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    if (!!library && !contractErc721) {\r\n      setContractErc721(new library.eth.Contract(abi, contractMasterAddress));\r\n    }\r\n    if (!!library && !contractAroma) {\r\n      setContractAroma(new library.eth.Contract(abiAroma, contractAromaAddress));\r\n    }\r\n    if(library && contractErc721 && contractAroma) {\r\n      async function loadData() {\r\n      let dataTemp = {};\r\n      let result;\r\n      try {\r\n          result = await contractErc721.methods.getCryptoChefSeasonSupply().call();\r\n          dataTemp.getCryptoChefSeasonSupply = result;\r\n          result = await contractErc721.methods.getCryptoChefPrice().call();\r\n          dataTemp.getCryptoChefPrice = result;\r\n          result = await contractErc721.methods.getAROMAPrice().call();\r\n          dataTemp.getAROMAPrice = result;\r\n          result = await contractErc721.methods.totalSupply().call();\r\n          dataTemp.totalSupply = result;\r\n          result = await contractErc721.methods.symbol().call();\r\n          dataTemp.symbol = result;\r\n        setData(dataTemp);\r\n        console.log(dataTemp)\r\n      } catch (e) {\r\n        console.log(e);\r\n      }\r\n    }\r\n    loadData();\r\n    }\r\n  }, [library, contractErc721, contractMasterAddress, contractAroma, contractAromaAddress]); \r\n\r\n // const isAdmin = account === NETWORKS[TARGET_CHAIN].adminAccount;\r\n  const web3ready = chainId === NETWORKS[TARGET_CHAIN].chainId;\r\n\r\n  return (\r\n    <Box pb={10}>\r\n    <Container as=\"section\">\r\n      <Headline color=\"white\" title={t(\"internal.title\")} />\r\n      {web3ready ? ( // web3ready && isAdmin ? (\r\n        <Grid container spacing={2}>\r\n          <Grid item sm={12} md={6}>\r\n            <Typography variant=\"h3\">AROMA price</Typography>\r\n            <Typography variant=\"body2\">Set Price of AROMA in native currency.</Typography>\r\n            <OutlinedInput\r\n              variant=\"outlined\"\r\n              disabled={false}\r\n              type=\"number\"\r\n              onChange={(e) => handleAromaPrice(e)}\r\n              value={aromaPrice}\r\n              endAdornment={\r\n                <InputAdornment position=\"end\">\r\n                  <Button variant=\"contained\" edge=\"end\" disabled={isLoading} onClick={deployAromaPrice}>\r\n                    Set price\r\n                  </Button>\r\n                </InputAdornment>\r\n              }\r\n            />\r\n            <Typography variant=\"h3\">CHEF Price</Typography>\r\n            <Typography variant=\"body2\">Set Price of CHEF NFT in AROMA.</Typography>\r\n            <OutlinedInput\r\n              variant=\"outlined\"\r\n              disabled={false}\r\n              type=\"number\"\r\n              onChange={(e) => handleChefPrice(e)}\r\n              value={chefPrice}\r\n              endAdornment={\r\n                <InputAdornment position=\"end\">\r\n                  <Button variant=\"contained\" edge=\"end\" disabled={isLoading} onClick={deployChefPrice}>\r\n                    Set price\r\n                  </Button>\r\n                </InputAdornment>\r\n              }\r\n            />\r\n          </Grid>\r\n          <Grid item sm={12} md={6}>\r\n            <Typography variant=\"h3\">Addresses (parameters)</Typography>\r\n            <Typography variant=\"body2\">Contract Aroma: {NETWORKS[TARGET_CHAIN].contractAroma}</Typography>\r\n            <Typography variant=\"body2\">Contract Proxy Master: {NETWORKS[TARGET_CHAIN].contractMaster}</Typography>\r\n            <Typography variant=\"body2\" gutterBottom>Admin account: {NETWORKS[TARGET_CHAIN].adminAccount}</Typography>\r\n\r\n            <Typography variant=\"h3\">Stats CHEFS</Typography>\r\n            <Typography variant=\"body2\">Admin account: </Typography>\r\n            <Typography variant=\"body2\" gutterBottom >...</Typography>\r\n            <Typography variant=\"body2\">totalSupply: </Typography>\r\n            <Typography variant=\"body2\" gutterBottom >{data.totalSupply ? data.totalSupply : \"DATA UNAVAILABLE\"}</Typography>\r\n            <Typography variant=\"body2\">getCryptoChefSeasonSupply: </Typography>\r\n            <Typography variant=\"body2\" gutterBottom >{data.getCryptoChefSeasonSupply ? data.getCryptoChefSeasonSupply : \"DATA UNAVAILABLE\"}</Typography>\r\n            <Typography variant=\"body2\">getAROMAPrice: </Typography>\r\n            <Typography variant=\"body2\" gutterBottom >{data.getAROMAPrice ? data.getAROMAPrice : \"DATA UNAVAILABLE\"}</Typography>\r\n            <Typography variant=\"body2\">getCryptoChefPrice: </Typography>\r\n            <Typography variant=\"body2\" gutterBottom >{data.getCryptoChefPrice ? data.getCryptoChefPrice : \"DATA UNAVAILABLE\"}</Typography>\r\n           \r\n            <Typography variant=\"h3\">Stats AROMA</Typography>\r\n            <Typography variant=\"body2\">Total Supply: </Typography>\r\n            <Typography variant=\"body2\" gutterBottom >...</Typography>\r\n            <Typography variant=\"body2\">Decimals: </Typography>\r\n            <Typography variant=\"body2\" gutterBottom >...</Typography>\r\n          </Grid>\r\n        </Grid>\r\n      ) : (\r\n        <Typography variant=\"body2\">No access</Typography>\r\n      )}\r\n    </Container>\r\n  </Box>\r\n  );\r\n}\r\n\r\nexport default withTranslation()(Internal);\r\n","import React from \"react\";\r\n//material-ui\r\nimport CircularProgress from \"@mui/material/CircularProgress\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport Close from \"@mui/icons-material/Close\";\r\n\r\nexport default function ToastLoading(props) {\r\n  const [progress, setProgress] = React.useState(100);\r\n  React.useEffect(() => {\r\n    setProgress(100);\r\n    const timer = setInterval(() => {\r\n      setProgress((prevProgress) => (prevProgress <= 0 ? 0 : prevProgress - 2));\r\n    }, 100);\r\n    return () => {\r\n      clearInterval(timer);\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"toastSpinnerWrapper\">\r\n      <IconButton\r\n        size=\"small\"\r\n        color=\"secondary\"\r\n        onClick={() => {\r\n          props.closeSnackbar(props.snackKey);\r\n        }}\r\n      >\r\n        <Close />\r\n      </IconButton>\r\n      <CircularProgress variant=\"determinate\" value={progress} color=\"secondary\" size={36} thickness={2} className=\"toastSpinner\" />\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\n//material-ui\r\nimport CircularProgress from \"@mui/material/CircularProgress\";\r\n\r\nexport default function ToastLoadingIndeterminate() {\r\n  return <CircularProgress variant=\"indeterminate\" color=\"secondary\" size={30} thickness={2} />;\r\n}\r\n","import React from \"react\";\r\nimport { withTranslation } from 'react-i18next'\r\n// material-ui\r\nimport Typography from '@mui/material/Typography'\r\n\r\nfunction Headline({ t, variant, color, title}) {\r\n  return (\r\n    <Typography variant={variant} color={color} align=\"center\" gutterBottom mt={3} mb={6}>\r\n      {t(title)}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nHeadline.defaultProps = {\r\n  variant: \"h1\"\r\n};\r\n\r\nexport default withTranslation()(Headline);"],"sourceRoot":""}