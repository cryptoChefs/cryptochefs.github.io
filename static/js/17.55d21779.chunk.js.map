{"version":3,"sources":["views/Internal/Internal.js","components/notification/ToastLoading.js","components/notification/ToastLoadingIndeterminate.js","components/layout/Headline.js"],"names":["withTranslation","t","useWeb3React","account","library","chainId","useState","isLoading","setIsLoading","contractErc721","setContractErc721","contractAroma","setContractAroma","contractMasterAddress","NETWORKS","TARGET_CHAIN","contractMaster","contractAromaAddress","useSnackbar","enqueueSnackbar","closeSnackbar","data","setData","aromaPrice","setAromaPrice","chefPrice","setChefPrice","baseUri","setBaseUri","seasonSupply","setSeasonSupply","deploy","method","parameter","a","console","log","loadingSnackbar","variant","persist","action","methods","send","from","gas","result","snackKey","React","useEffect","eth","Contract","abi","abiAroma","loadData","dataTemp","getCryptoChefSeasonSupply","call","getCryptoChefPrice","getAROMAPrice","totalSupply","symbol","isAdmin","adminAccount","web3ready","pb","as","color","title","container","spacing","item","sm","md","onChange","e","target","value","fullWidth","endAdornment","position","edge","disabled","onClick","gutterBottom","ToastLoading","props","progress","setProgress","timer","setInterval","prevProgress","clearInterval","className","size","thickness","ToastLoadingIndeterminate","Headline","align","mt","mb","defaultProps"],"mappings":"uTAsPeA,yBAvOf,YAA0B,IAANC,EAAK,EAALA,EAClB,EAAsCC,cAA9BC,EAAR,EAAQA,QAASC,EAAjB,EAAiBA,QAASC,EAA1B,EAA0BA,QAC1B,EAAkCC,oBAAS,GAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAA4CF,oBAAS,GAArD,mBAAOG,EAAP,KAAuBC,EAAvB,KACA,EAA0CJ,oBAAS,GAAnD,mBAAOK,EAAP,KAAsBC,EAAtB,KACMC,EAAwBC,IAASC,KAAcC,eAC/CC,EAAuBH,IAASC,KAAcJ,cACpD,EAA2CO,cAAnCC,EAAR,EAAQA,gBAAiBC,EAAzB,EAAyBA,cACzB,EAAwBd,mBAAS,IAAjC,mBAAOe,EAAP,KAAaC,EAAb,KACA,EAAoChB,mBAAS,GAA7C,mBAAOiB,EAAP,KAAmBC,EAAnB,KACA,EAAkClB,mBAAS,GAA3C,mBAAOmB,GAAP,KAAkBC,GAAlB,KACA,GAA8BpB,mBAAS,GAAvC,qBAAOqB,GAAP,MAAgBC,GAAhB,MACA,GAAwCtB,mBAAS,GAAjD,qBAAOuB,GAAP,MAAqBC,GAArB,MAeMC,GAAM,uCAAG,WAAOC,EAAQC,GAAf,iBAAAC,EAAA,6DACbC,QAAQC,IAAIb,GACZY,QAAQC,IAAIjC,GACZK,GAAa,GACT6B,EAAkBlB,EAAgB,sBAAuB,CAC3DmB,QAAS,UACTC,SAAS,EACTC,OAAQ,cAAC,IAAD,MAPG,kBAUU/B,EAAegC,QAAQT,GAAQC,GAAWS,KAAK,CAAEC,KAAMxC,EAASyC,IAAK,MAV/E,OAULC,EAVK,OAWXV,QAAQC,IAAIS,GACZzB,EAAciB,GACdlB,EAAgB,UAAW,CACzBmB,QAAS,UACTE,OAAQ,SAACM,GAAD,OAAc,cAAC,IAAD,CAAcA,SAAUA,EAAU1B,cAAeA,OAEzEZ,GAAa,GAjBF,kDAmBX2B,QAAQC,IAAR,MACAhB,EAAciB,GACdlB,EAAgB,QAAS,CACvBmB,QAAS,QACTE,OAAQ,SAACM,GAAD,OAAc,cAAC,IAAD,CAAcA,SAAUA,EAAU1B,cAAeA,OAEzEZ,GAAa,GAzBF,0DAAH,wDA6BZuC,IAAMC,WAAU,WAOd,GANM5C,IAAYK,GAChBC,EAAkB,IAAIN,EAAQ6C,IAAIC,SAASC,EAAKtC,IAE5CT,IAAYO,GAChBC,EAAiB,IAAIR,EAAQ6C,IAAIC,SAASE,EAAUnC,IAElDb,GAAWK,GAAkBE,EAAe,CAAC,IAChC0C,EAD+B,uCAC9C,8BAAAnB,EAAA,6DACMoB,EAAW,GADjB,kBAImB7C,EAAegC,QAAQc,4BAA4BC,OAJtE,cAIIX,EAJJ,OAKIS,EAASC,0BAA4BV,EALzC,SAMmBpC,EAAegC,QAAQgB,qBAAqBD,OAN/D,cAMIX,EANJ,OAOIS,EAASG,mBAAqBZ,EAPlC,UAQmBpC,EAAegC,QAAQiB,gBAAgBF,OAR1D,eAQIX,EARJ,OASIS,EAASI,cAAgBb,EAT7B,UAUmBpC,EAAegC,QAAQkB,cAAcH,OAVxD,eAUIX,EAVJ,OAWIS,EAASK,YAAcd,EAX3B,UAYmBpC,EAAegC,QAAQmB,SAASJ,OAZnD,QAYIX,EAZJ,OAaIS,EAASM,OAASf,EAClBvB,EAAQgC,GAdZ,kDAgBInB,QAAQC,IAAR,MAhBJ,0DAD8C,qDAoB9CiB,OAED,CAACjD,EAASK,EAAgBI,EAAuBF,EAAeM,IAEnE,IAAM4C,GAAU1D,IAAYW,IAASC,KAAc+C,aAC7CC,GAAY1D,IAAYS,IAASC,KAAcV,QAErD,OACE,cAAC,IAAD,CAAK2D,GAAI,GAAT,SACE,eAAC,IAAD,CAAWC,GAAG,UAAd,UACE,cAAC,IAAD,CAAUC,MAAM,QAAQC,MAAOlE,EAAE,oBAChC8D,IAAaF,GACZ,eAAC,IAAD,CAAMO,WAAS,EAACC,QAAS,EAAzB,UACE,eAAC,IAAD,CAAMC,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAvB,UACE,cAAC,IAAD,CAAYlC,QAAQ,KAApB,2BACA,cAAC,IAAD,CAAYA,QAAQ,QAApB,oDACA,cAAC,IAAD,CACEA,QAAQ,WACRmC,SAAU,SAACC,GAtFvBlD,EAsF8CkD,EAtF1BC,OAAOC,QAuFfA,MAAOrD,EACPsD,WAAS,EACTC,aACE,cAAC,IAAD,CAAgBC,SAAS,MAAzB,SACE,cAAC,IAAD,CACEzC,QAAQ,YACR0C,KAAK,MACLC,SAAU1E,EACV2E,QAAS,WACPnD,GAAO,gBAAiBR,IAL5B,2BAYN,cAAC,IAAD,CAAYe,QAAQ,KAApB,0BACA,cAAC,IAAD,CAAYA,QAAQ,QAApB,6CACA,cAAC,IAAD,CACEA,QAAQ,WACRmC,SAAU,SAACC,GAxGvBhD,GAwG6CgD,EAxG1BC,OAAOC,QAyGdA,MAAOnD,GACPoD,WAAS,EACTC,aACE,cAAC,IAAD,CAAgBC,SAAS,MAAzB,SACE,cAAC,IAAD,CACEzC,QAAQ,YACR0C,KAAK,MACLC,SAAU1E,EACV2E,QAAS,WACPnD,GAAO,qBAAsBN,KALjC,2BAYN,cAAC,IAAD,CAAYa,QAAQ,KAApB,wBACA,cAAC,IAAD,CAAYA,QAAQ,QAApB,yCACA,cAAC,IAAD,CACEA,QAAQ,WACRmC,SAAU,SAACC,GA1HvB9C,GA0H2C8C,EA1H1BC,OAAOC,QA2HZA,MAAOjD,GACPkD,WAAS,EACTC,aACE,cAAC,IAAD,CAAgBC,SAAS,MAAzB,SACE,cAAC,IAAD,CACEzC,QAAQ,YACR0C,KAAK,MACLC,SAAU1E,EACV2E,QAAS,WACPnD,GAAO,aAAcJ,KALzB,yBAYN,cAAC,IAAD,CAAYW,QAAQ,KAApB,uCACA,cAAC,IAAD,CAAYA,QAAQ,QAApB,yCACA,cAAC,IAAD,CACEA,QAAQ,WACRmC,SAAU,SAACC,GA5IvB5C,GA4IgD4C,EA5I1BC,OAAOC,QA6IjBA,MAAO/C,GACPgD,WAAS,EACTC,aACE,cAAC,IAAD,CAAgBC,SAAS,MAAzB,SACE,cAAC,IAAD,CACEzC,QAAQ,YACR0C,KAAK,MACLC,SAAU1E,EACV2E,QAAS,WACPnD,GAAO,4BAA6BF,KALxC,+BAaR,eAAC,IAAD,CAAMyC,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAvB,UACE,cAAC,IAAD,CAAYlC,QAAQ,KAApB,oCACA,eAAC,IAAD,CAAYA,QAAQ,QAApB,6BAA6CxB,IAASC,KAAcJ,iBACpE,eAAC,IAAD,CAAY2B,QAAQ,QAApB,oCAAoDxB,IAASC,KAAcC,kBAC3E,eAAC,IAAD,CAAYsB,QAAQ,QAAQ6C,cAAY,EAAxC,4BACkBrE,IAASC,KAAc+C,gBAGzC,cAAC,IAAD,CAAYxB,QAAQ,KAApB,yBACA,cAAC,IAAD,CAAYA,QAAQ,QAApB,6BACA,cAAC,IAAD,CAAYA,QAAQ,QAAQ6C,cAAY,EAAxC,iBAGA,cAAC,IAAD,CAAY7C,QAAQ,QAApB,2BACA,cAAC,IAAD,CAAYA,QAAQ,QAAQ6C,cAAY,EAAxC,SACG9D,EAAKsC,YAActC,EAAKsC,YAAc,qBAEzC,cAAC,IAAD,CAAYrB,QAAQ,QAApB,yCACA,cAAC,IAAD,CAAYA,QAAQ,QAAQ6C,cAAY,EAAxC,SACG9D,EAAKkC,0BAA4BlC,EAAKkC,0BAA4B,qBAErE,cAAC,IAAD,CAAYjB,QAAQ,QAApB,6BACA,cAAC,IAAD,CAAYA,QAAQ,QAAQ6C,cAAY,EAAxC,SACG9D,EAAKqC,cAAgBrC,EAAKqC,cAAgB,qBAE7C,cAAC,IAAD,CAAYpB,QAAQ,QAApB,kCACA,cAAC,IAAD,CAAYA,QAAQ,QAAQ6C,cAAY,EAAxC,SACG9D,EAAKoC,mBAAqBpC,EAAKoC,mBAAqB,qBAGvD,cAAC,IAAD,CAAYnB,QAAQ,KAApB,yBACA,cAAC,IAAD,CAAYA,QAAQ,QAApB,4BACA,cAAC,IAAD,CAAYA,QAAQ,QAAQ6C,cAAY,EAAxC,iBAGA,cAAC,IAAD,CAAY7C,QAAQ,QAApB,wBACA,cAAC,IAAD,CAAYA,QAAQ,QAAQ6C,cAAY,EAAxC,uBAMJ,cAAC,IAAD,CAAY7C,QAAQ,QAApB,gC,4ICzOK,SAAS8C,EAAaC,GACnC,MAAgCtC,IAAMzC,SAAS,KAA/C,mBAAOgF,EAAP,KAAiBC,EAAjB,KAWA,OAVAxC,IAAMC,WAAU,WACduC,EAAY,KACZ,IAAMC,EAAQC,aAAY,WACxBF,GAAY,SAACG,GAAD,OAAmBA,GAAgB,EAAI,EAAIA,EAAe,OACrE,KACH,OAAO,WACLC,cAAcH,MAEf,IAGD,sBAAKI,UAAU,sBAAf,UACE,cAAC,IAAD,CACEC,KAAK,QACL3B,MAAM,YACNgB,QAAS,WACPG,EAAMjE,cAAciE,EAAMvC,WAJ9B,SAOE,cAAC,IAAD,MAEF,cAAC,IAAD,CAAkBR,QAAQ,cAAcsC,MAAOU,EAAUpB,MAAM,YAAY2B,KAAM,GAAIC,UAAW,EAAGF,UAAU,sB,iCC7BnH,4DAIe,SAASG,IACtB,OAAO,cAAC,IAAD,CAAkBzD,QAAQ,gBAAgB4B,MAAM,YAAY2B,KAAM,GAAIC,UAAW,M,oyHCL1F,kCAKA,SAASE,EAAT,GAAgD,IAA5B/F,EAA2B,EAA3BA,EAAGqC,EAAwB,EAAxBA,QAAS4B,EAAe,EAAfA,MAAOC,EAAQ,EAARA,MACrC,OACE,cAAC,IAAD,CAAY7B,QAASA,EAAS4B,MAAOA,EAAO+B,MAAM,SAASd,cAAY,EAACe,GAAI,EAAGC,GAAI,EAAnF,SACGlG,EAAEkE,KAKT6B,EAASI,aAAe,CACtB9D,QAAS,MAGItC,kBAAkBgG","file":"static/js/17.55d21779.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport { withTranslation } from \"react-i18next\";\r\nimport { useWeb3React } from \"@web3-react/core\";\r\nimport { useSnackbar } from \"notistack\";\r\n// material-ui\r\nimport { Box, Container, OutlinedInput, Button, InputAdornment, Grid, Typography } from \"@mui/material\";\r\n// custom\r\nimport Headline from \"../../components/layout/Headline\";\r\n//import AromaPrice from \"../../components/web3/AromaPrice\";\r\nimport { NETWORKS, TARGET_CHAIN } from \"../../web3/constants\";\r\nimport abi from \"../../web3/abi/CryptoChefsERC721Facet.json\";\r\nimport abiAroma from \"../../web3/abi/AROMATokenMatic.json\";\r\nimport ToastLoading from \"../../components/notification/ToastLoading\";\r\nimport ToastLoadingIndeterminate from \"../../components/notification/ToastLoadingIndeterminate\";\r\n\r\nfunction Internal({ t }) {\r\n  const { account, library, chainId } = useWeb3React();\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [contractErc721, setContractErc721] = useState(false);\r\n  const [contractAroma, setContractAroma] = useState(false);\r\n  const contractMasterAddress = NETWORKS[TARGET_CHAIN].contractMaster;\r\n  const contractAromaAddress = NETWORKS[TARGET_CHAIN].contractAroma;\r\n  const { enqueueSnackbar, closeSnackbar } = useSnackbar();\r\n  const [data, setData] = useState({});\r\n  const [aromaPrice, setAromaPrice] = useState(0);\r\n  const [chefPrice, setChefPrice] = useState(0);\r\n  const [baseUri, setBaseUri] = useState(0);\r\n  const [seasonSupply, setSeasonSupply] = useState(0);\r\n\r\n  const handleAromaPrice = (event) => {\r\n    setAromaPrice(event.target.value);\r\n  };\r\n  const handleChefPrice = (event) => {\r\n    setChefPrice(event.target.value);\r\n  };\r\n  const handleBaseUri = (event) => {\r\n    setBaseUri(event.target.value);\r\n  };\r\n  const handleSeasonSupply = (event) => {\r\n    setSeasonSupply(event.target.value);\r\n  };\r\n\r\n  const deploy = async (method, parameter) => {\r\n    console.log(aromaPrice);\r\n    console.log(account);\r\n    setIsLoading(true);\r\n    let loadingSnackbar = enqueueSnackbar(\"Transaction ongoing\", {\r\n      variant: \"warning\",\r\n      persist: true,\r\n      action: <ToastLoadingIndeterminate />,\r\n    });\r\n    try {\r\n      const result = await contractErc721.methods[method](parameter).send({ from: account, gas: 10000000 });\r\n      console.log(result);\r\n      closeSnackbar(loadingSnackbar);\r\n      enqueueSnackbar(\"Success\", {\r\n        variant: \"success\",\r\n        action: (snackKey) => <ToastLoading snackKey={snackKey} closeSnackbar={closeSnackbar} />,\r\n      });\r\n      setIsLoading(false);\r\n    } catch (error) {\r\n      console.log(error);\r\n      closeSnackbar(loadingSnackbar);\r\n      enqueueSnackbar(\"Error\", {\r\n        variant: \"error\",\r\n        action: (snackKey) => <ToastLoading snackKey={snackKey} closeSnackbar={closeSnackbar} />,\r\n      });\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    if (!!library && !contractErc721) {\r\n      setContractErc721(new library.eth.Contract(abi, contractMasterAddress));\r\n    }\r\n    if (!!library && !contractAroma) {\r\n      setContractAroma(new library.eth.Contract(abiAroma, contractAromaAddress));\r\n    }\r\n    if (library && contractErc721 && contractAroma) {\r\n      async function loadData() {\r\n        let dataTemp = {};\r\n        let result;\r\n        try {\r\n          result = await contractErc721.methods.getCryptoChefSeasonSupply().call();\r\n          dataTemp.getCryptoChefSeasonSupply = result;\r\n          result = await contractErc721.methods.getCryptoChefPrice().call();\r\n          dataTemp.getCryptoChefPrice = result;\r\n          result = await contractErc721.methods.getAROMAPrice().call();\r\n          dataTemp.getAROMAPrice = result;\r\n          result = await contractErc721.methods.totalSupply().call();\r\n          dataTemp.totalSupply = result;\r\n          result = await contractErc721.methods.symbol().call();\r\n          dataTemp.symbol = result;\r\n          setData(dataTemp);\r\n        } catch (e) {\r\n          console.log(e);\r\n        }\r\n      }\r\n      loadData();\r\n    }\r\n  }, [library, contractErc721, contractMasterAddress, contractAroma, contractAromaAddress]);\r\n\r\n  const isAdmin = account === NETWORKS[TARGET_CHAIN].adminAccount;\r\n  const web3ready = chainId === NETWORKS[TARGET_CHAIN].chainId;\r\n\r\n  return (\r\n    <Box pb={10}>\r\n      <Container as=\"section\">\r\n        <Headline color=\"white\" title={t(\"internal.title\")} />\r\n        {web3ready && isAdmin ? (\r\n          <Grid container spacing={2}>\r\n            <Grid item sm={12} md={6}>\r\n              <Typography variant=\"h4\">setAROMAprice</Typography>\r\n              <Typography variant=\"body2\">Set Price of AROMA in native currency.</Typography>\r\n              <OutlinedInput\r\n                variant=\"outlined\"\r\n                onChange={(e) => handleAromaPrice(e)}\r\n                value={aromaPrice}\r\n                fullWidth\r\n                endAdornment={\r\n                  <InputAdornment position=\"end\">\r\n                    <Button\r\n                      variant=\"contained\"\r\n                      edge=\"end\"\r\n                      disabled={isLoading}\r\n                      onClick={() => {\r\n                        deploy(\"setAROMAPrice\", aromaPrice);\r\n                      }}>\r\n                      Set price\r\n                    </Button>\r\n                  </InputAdornment>\r\n                }\r\n              />\r\n              <Typography variant=\"h4\">setChefPrice</Typography>\r\n              <Typography variant=\"body2\">Set Price of CHEF NFT in AROMA.</Typography>\r\n              <OutlinedInput\r\n                variant=\"outlined\"\r\n                onChange={(e) => handleChefPrice(e)}\r\n                value={chefPrice}\r\n                fullWidth\r\n                endAdornment={\r\n                  <InputAdornment position=\"end\">\r\n                    <Button\r\n                      variant=\"contained\"\r\n                      edge=\"end\"\r\n                      disabled={isLoading}\r\n                      onClick={() => {\r\n                        deploy(\"setCryptoChefPrice\", chefPrice);\r\n                      }}>\r\n                      Set price\r\n                    </Button>\r\n                  </InputAdornment>\r\n                }\r\n              />\r\n              <Typography variant=\"h4\">setBaseURI</Typography>\r\n              <Typography variant=\"body2\">set base URI for IPFS NFTs.</Typography>\r\n              <OutlinedInput\r\n                variant=\"outlined\"\r\n                onChange={(e) => handleBaseUri(e)}\r\n                value={baseUri}\r\n                fullWidth\r\n                endAdornment={\r\n                  <InputAdornment position=\"end\">\r\n                    <Button\r\n                      variant=\"contained\"\r\n                      edge=\"end\"\r\n                      disabled={isLoading}\r\n                      onClick={() => {\r\n                        deploy(\"setBaseURI\", baseUri);\r\n                      }}>\r\n                      Set URI\r\n                    </Button>\r\n                  </InputAdornment>\r\n                }\r\n              />\r\n              <Typography variant=\"h4\">setCryptoChefSeasonSupply</Typography>\r\n              <Typography variant=\"body2\">set base URI for IPFS NFTs.</Typography>\r\n              <OutlinedInput\r\n                variant=\"outlined\"\r\n                onChange={(e) => handleSeasonSupply(e)}\r\n                value={seasonSupply}\r\n                fullWidth\r\n                endAdornment={\r\n                  <InputAdornment position=\"end\">\r\n                    <Button\r\n                      variant=\"contained\"\r\n                      edge=\"end\"\r\n                      disabled={isLoading}\r\n                      onClick={() => {\r\n                        deploy(\"setCryptoChefSeasonSupply\", seasonSupply);\r\n                      }}>\r\n                      Set Season\r\n                    </Button>\r\n                  </InputAdornment>\r\n                }\r\n              />\r\n            </Grid>\r\n            <Grid item sm={12} md={6}>\r\n              <Typography variant=\"h4\">Addresses (parameters)</Typography>\r\n              <Typography variant=\"body2\">Contract Aroma: {NETWORKS[TARGET_CHAIN].contractAroma}</Typography>\r\n              <Typography variant=\"body2\">Contract Proxy Master: {NETWORKS[TARGET_CHAIN].contractMaster}</Typography>\r\n              <Typography variant=\"body2\" gutterBottom>\r\n                Admin account: {NETWORKS[TARGET_CHAIN].adminAccount}\r\n              </Typography>\r\n\r\n              <Typography variant=\"h4\">Stats CHEFS</Typography>\r\n              <Typography variant=\"body2\">Admin account: </Typography>\r\n              <Typography variant=\"body2\" gutterBottom>\r\n                ...\r\n              </Typography>\r\n              <Typography variant=\"body2\">totalSupply: </Typography>\r\n              <Typography variant=\"body2\" gutterBottom>\r\n                {data.totalSupply ? data.totalSupply : \"DATA UNAVAILABLE\"}\r\n              </Typography>\r\n              <Typography variant=\"body2\">getCryptoChefSeasonSupply: </Typography>\r\n              <Typography variant=\"body2\" gutterBottom>\r\n                {data.getCryptoChefSeasonSupply ? data.getCryptoChefSeasonSupply : \"DATA UNAVAILABLE\"}\r\n              </Typography>\r\n              <Typography variant=\"body2\">getAROMAPrice: </Typography>\r\n              <Typography variant=\"body2\" gutterBottom>\r\n                {data.getAROMAPrice ? data.getAROMAPrice : \"DATA UNAVAILABLE\"}\r\n              </Typography>\r\n              <Typography variant=\"body2\">getCryptoChefPrice: </Typography>\r\n              <Typography variant=\"body2\" gutterBottom>\r\n                {data.getCryptoChefPrice ? data.getCryptoChefPrice : \"DATA UNAVAILABLE\"}\r\n              </Typography>\r\n\r\n              <Typography variant=\"h4\">Stats AROMA</Typography>\r\n              <Typography variant=\"body2\">Total Supply: </Typography>\r\n              <Typography variant=\"body2\" gutterBottom>\r\n                ...\r\n              </Typography>\r\n              <Typography variant=\"body2\">Decimals: </Typography>\r\n              <Typography variant=\"body2\" gutterBottom>\r\n                ...\r\n              </Typography>\r\n            </Grid>\r\n          </Grid>\r\n        ) : (\r\n          <Typography variant=\"body2\">No access</Typography>\r\n        )}\r\n      </Container>\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default withTranslation()(Internal);\r\n","import React from \"react\";\r\n//material-ui\r\nimport CircularProgress from \"@mui/material/CircularProgress\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport Close from \"@mui/icons-material/Close\";\r\n\r\nexport default function ToastLoading(props) {\r\n  const [progress, setProgress] = React.useState(100);\r\n  React.useEffect(() => {\r\n    setProgress(100);\r\n    const timer = setInterval(() => {\r\n      setProgress((prevProgress) => (prevProgress <= 0 ? 0 : prevProgress - 2));\r\n    }, 100);\r\n    return () => {\r\n      clearInterval(timer);\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"toastSpinnerWrapper\">\r\n      <IconButton\r\n        size=\"small\"\r\n        color=\"secondary\"\r\n        onClick={() => {\r\n          props.closeSnackbar(props.snackKey);\r\n        }}\r\n      >\r\n        <Close />\r\n      </IconButton>\r\n      <CircularProgress variant=\"determinate\" value={progress} color=\"secondary\" size={36} thickness={2} className=\"toastSpinner\" />\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\n//material-ui\r\nimport CircularProgress from \"@mui/material/CircularProgress\";\r\n\r\nexport default function ToastLoadingIndeterminate() {\r\n  return <CircularProgress variant=\"indeterminate\" color=\"secondary\" size={30} thickness={2} />;\r\n}\r\n","import React from \"react\";\r\nimport { withTranslation } from 'react-i18next'\r\n// material-ui\r\nimport Typography from '@mui/material/Typography'\r\n\r\nfunction Headline({ t, variant, color, title}) {\r\n  return (\r\n    <Typography variant={variant} color={color} align=\"center\" gutterBottom mt={3} mb={6}>\r\n      {t(title)}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nHeadline.defaultProps = {\r\n  variant: \"h1\"\r\n};\r\n\r\nexport default withTranslation()(Headline);"],"sourceRoot":""}