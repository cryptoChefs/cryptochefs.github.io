{"version":3,"sources":["utils/theme.js","web3/constants.js","components/layout/Web3connect.js","i18n.js","components/layout/LanguageSelector.js","components/common/LogoButton.js","components/layout/TopBar.js","components/common/LoadingSpinner.js","components/ServiceWorkerWrapper.js","routes.js"],"names":["purple","teal","theme","createTheme","mode","palette","common","black","white","background","paper","default","text","primary","secondary","disabled","hint","light","main","dark","contrastText","typography","h1","fontSize","fontWeight","h2","h3","h4","h5","h6","components","MuiCard","styleOverrides","root","borderRadius","MuiButton","MuiBadge","badge","blueGrey","color","border","colorSecondary","colorError","MuiTooltip","tooltip","MuiIconButton","zIndex","MuiLinearProgress","height","dashedColorPrimary","animation","backgroundImage","backgroundColor","barColorPrimary","colorPrimary","MuiCircularProgress","MuiTabs","indicator","MuiTab","minWidth","textColorSecondary","MuiBottomNavigation","MuiBottomNavigationAction","MuiAvatar","colorDefault","square","MuiCardMedia","INFURA_ID","process","window","location","hostname","ethers","require","web3Modal","Web3Modal","network","cacheProvider","providerOptions","walletconnect","package","WalletConnectProvider","options","bridge","infuraId","rpc","portis","display","logo","name","description","Portis","id","fortmatic","Fortmatic","key","authereum","Authereum","withRouter","withTranslation","props","useState","provider","setProvider","address","setAddress","connectionMenu","setconnectionMenu","dialogWeb3","setdialogWeb3","balanceAroma","setBalanceAroma","balanceMatic","setBalanceMatic","handleConnectionMenuClose","handleWeb3Modal","t","logoutOfWeb3Modal","a","clearCachedProvider","disconnect","setTimeout","reload","loadWeb3Modal","connect","web3modalProvider","providers","Web3Provider","listAccounts","addressList","getBalance","balance","console","log","utils","formatEther","aromaContract","Contract","aromaAbi","balanceOf","on","chainId","code","reason","buyAroma","mainAbi","Tooltip","disableFocusListener","title","IconButton","onClick","event","currentTarget","Backdrop","open","Boolean","className","Popover","anchorEl","onClose","Paper","Box","m","List","dense","ListItem","ListItemAvatar","Avatar","seed","toLowerCase","size","scale","ListItemText","Button","variant","Dialog","keepMounted","maxWidth","DialogContent","Typography","gutterBottom","DialogActions","dateLang","en","enUS","de","fr","it","i18n","use","LanguageDetector","initReactI18next","init","whitelist","fallbackLng","cleanCode","lowerCaseLng","debug","interpolation","escapeValue","format","value","formatting","lng","makedate","Date","d","setUTCSeconds","now","getTime","formatDistance","locale","keySeparator","react","wait","resources","translation","transEn","transDe","transFr","transIt","LanguageSelector","state","languageMenu","language","handleLanguageIconClick","setState","handleLanguageMenuClose","handleLangChange","changeLanguage","this","undefined","Badge","badgeContent","substring","toUpperCase","Menu","MenuItem","Component","LogoButton","animate","clearTimeout","timeout","component","Link","to","alt","src","links","icon","path","TopBar","popover","handleConnectionIconClick","AppBar","position","Toolbar","Grid","container","direction","justifyContent","alignItems","item","Hidden","smDown","ButtonGroup","map","index","mdUp","DialogTitle","button","ListItemIcon","LoadingSpinner","my","textAlign","CircularProgress","ServiceWorkerWrapper","showReload","waitingWorker","onSWUpdate","registration","waiting","activeSnackbar","enqueueSnackbar","persist","action","reloadPage","closeSnackbar","postMessage","type","serviceWorkerRegistration","onUpdate","React","withSnackbar","Main","lazy","Store","Kitchen","Buffet","App","expertmode","videoOn","admin","setExpertMode","boolValue","localStorage","setItem","setVideoOn","setAdmin","ThemeProvider","anchorOrigin","vertical","horizontal","maxSnack","autoHideDuration","classes","variantSuccess","green","variantError","red","variantWarning","blue","variantInfo","CssBaseline","basename","spacing","fallback","exact"],"mappings":"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","file":"static/js/3.f40ee134.chunk.js","sourcesContent":["import { createTheme } from \"@mui/material/styles\";\r\nimport { blueGrey } from \"@mui/material/colors\";\r\n\r\n//const red = \"rgb(255, 156, 146)\";\r\nconst purple = \"rgba(205, 113, 194, 1)\";\r\nconst purpleLight = \"rgba(205, 113, 194, 0.7)\";\r\n//const blue = \"rgb(90, 157, 237)\";\r\nconst teal = \"rgba(83, 211, 224, 1)\";\r\nconst tealLight = \"rgba(83, 211, 224, 0.7)\";\r\n//const green = \"rgb(136, 216, 72)\";\r\n//const yellow = \"rgb(255, 233, 77)\";\r\n\r\nexport const theme = createTheme ({\r\n  mode: 'light',\r\n  palette: {\r\n    common: {\r\n      black: \"rgba(40, 31, 31, 1)\",\r\n      white: \"#fff\",\r\n    },\r\n    background: {\r\n      paper: \"#fff\",\r\n      default: \"#f1f1f1\",\r\n    },\r\n    text: {\r\n      primary: \"rgba(0, 0, 0, 0.87)\",\r\n      secondary: \"rgba(0, 0, 0, 0.54)\",\r\n      disabled: \"rgba(0, 0, 0, 0.38)\",\r\n      hint: \"rgba(0, 0, 0, 0.38)\",\r\n    },\r\n    primary: {\r\n      light: purpleLight,\r\n      main: purple,\r\n      dark: purple,\r\n      contrastText: \"#fff\",\r\n    },\r\n    secondary: {\r\n      light: tealLight,\r\n      main: teal, \r\n      dark: teal,\r\n      contrastText: \"#000\",\r\n    },\r\n  },\r\n  typography: {\r\n    // using Roboto by default\r\n    h1: {\r\n      fontSize: \"3.052rem\",\r\n      fontWeight: 400\r\n    },\r\n    h2: {\r\n      fontSize: \"2.441rem\",\r\n      fontWeight: 400\r\n    },\r\n    h3: {\r\n      fontSize: \"1.953rem\",\r\n      fontWeight: 400\r\n    },\r\n    h4: {\r\n      fontSize: \"1.563rem\",\r\n      fontWeight: 400\r\n    },\r\n    h5: {\r\n      fontSize: \"1.25rem\",\r\n      fontWeight: 400\r\n    },\r\n    h6: {\r\n      fontSize: \"1rem\",\r\n      fontWeight: 400\r\n    }\r\n  },\r\n  components: {\r\n    MuiCard: {\r\n      styleOverrides: {\r\n        root: {\r\n          // todo: other variants (square) is not excluded from these overrides\r\n          borderRadius: \"10px\"\r\n        }\r\n      }\r\n    },\r\n    MuiButton: {\r\n      styleOverrides: {\r\n        root: {\r\n          borderRadius: \"10px\"\r\n        },\r\n      },\r\n    },\r\n    // todo: validate all styles below - Do we need these changes globally?\r\n    MuiBadge: {\r\n      styleOverrides: {\r\n        badge: {\r\n          background: blueGrey[50],\r\n          color: blueGrey[800],\r\n          border: \"1px solid\" + blueGrey[500],\r\n        },\r\n        colorSecondary: {\r\n          border: 0,\r\n        },\r\n        colorError: {\r\n          border: 0,\r\n          color: \"#fff\",\r\n        },\r\n      }\r\n    },\r\n    MuiTooltip: {\r\n      styleOverrides: {\r\n        tooltip: {\r\n          color: \"#fff\",\r\n        },\r\n      }\r\n    },\r\n    MuiIconButton: {\r\n      styleOverrides: {\r\n        root: {\r\n          color: blueGrey[500],\r\n        },\r\n        colorSecondary: {\r\n          color: blueGrey[50],\r\n          zIndex: 10,\r\n        },\r\n      }\r\n    },\r\n    MuiLinearProgress: {\r\n      styleOverrides: {\r\n        root: {\r\n          height: 15,\r\n          borderRadius: 2,\r\n        },\r\n        dashedColorPrimary: {\r\n          animation: \"none\",\r\n          backgroundImage: \"none\",\r\n          backgroundColor: blueGrey[200],\r\n        },\r\n        barColorPrimary: {\r\n          backgroundColor: blueGrey[700],\r\n        },\r\n        colorPrimary: {\r\n          backgroundColor: blueGrey[100],\r\n        },\r\n      }\r\n    },\r\n    MuiCircularProgress: {\r\n      styleOverrides: {\r\n        colorSecondary: {\r\n          color: blueGrey[50],\r\n        },\r\n      }\r\n    },\r\n    MuiTabs: {\r\n      styleOverrides: {\r\n        indicator: {\r\n          backgroundColor: blueGrey[800],\r\n        },\r\n      }\r\n    },\r\n    MuiTab: {\r\n      styleOverrides: {\r\n        root: {\r\n          \"@media (min-width: 960px)\": {\r\n            minWidth: 120,\r\n          },\r\n        },\r\n        textColorSecondary: {\r\n          color: blueGrey[400],\r\n          \"&$selected\": {\r\n            color: blueGrey[900],\r\n          },\r\n        },\r\n      }\r\n    },\r\n    MuiBottomNavigation: {\r\n      styleOverrides: {\r\n        root: {\r\n          zIndex: 1190,\r\n          backgroundColor: blueGrey[50],\r\n          background: \"linear-gradient(315deg,\" + blueGrey[600] + \",\" + blueGrey[800] + \")\",\r\n        },\r\n      }\r\n    },\r\n    MuiBottomNavigationAction: {\r\n      styleOverrides: {\r\n        root: {\r\n          color: blueGrey[100],\r\n          \"&$selected\": {\r\n            color: \"#fff\",\r\n          },\r\n        },\r\n      }\r\n    },\r\n    MuiAvatar: {\r\n      styleOverrides: {\r\n        colorDefault: {\r\n          color: blueGrey[800],\r\n          backgroundColor: blueGrey[100],\r\n        },\r\n        square: {\r\n          backgroundColor: \"transparent\",\r\n        },\r\n      }\r\n    },\r\n    MuiCardMedia: {\r\n      styleOverrides: {\r\n        root: {\r\n          height: 220,\r\n        },\r\n      }\r\n    },\r\n  }\r\n});\r\n","// Target chain\r\nexport const TARGET_CHAIN = process.env.REACT_APP_CHAIN;\r\n// MY INFURA_ID, SWAP IN YOURS FROM https://infura.io/dashboard/ethereum\r\nexport const INFURA_ID = process.env.REACT_APP_INFURA_ID;\r\n// MY ETHERSCAN_ID, SWAP IN YOURS FROM https://etherscan.io/myapikey\r\nexport const ETHERSCAN_KEY = process.env.REACT_APP_ETHERSCAN_KEY;\r\n// BLOCKNATIVE ID FOR Notify.js:\r\nexport const BLOCKNATIVE_DAPPID = process.env.REACT_APP_BLOCKNATIVE_DAPPID;\r\n\r\nexport const NETWORKS = {\r\n  localhost: {\r\n    name: \"localhost\",\r\n    color: \"#666666\",\r\n    chainId: 31337,\r\n    blockExplorer: \"\",\r\n    rpcUrl: \"http://\" + window.location.hostname + \":8545\",\r\n  },\r\n  mainnet: {\r\n    name: \"mainnet\",\r\n    color: \"#ff8b9e\",\r\n    chainId: 1,\r\n    rpcUrl: `https://mainnet.infura.io/v3/${INFURA_ID}`,\r\n    blockExplorer: \"https://etherscan.io/\",\r\n  },\r\n  kovan: {\r\n    name: \"kovan\",\r\n    color: \"#7003DD\",\r\n    chainId: 42,\r\n    rpcUrl: `https://kovan.infura.io/v3/${INFURA_ID}`,\r\n    blockExplorer: \"https://kovan.etherscan.io/\",\r\n    faucet: \"https://gitter.im/kovan-testnet/faucet\", // https://faucet.kovan.network/\r\n  },\r\n  rinkeby: {\r\n    name: \"rinkeby\",\r\n    color: \"#e0d068\",\r\n    chainId: 4,\r\n    rpcUrl: `https://rinkeby.infura.io/v3/${INFURA_ID}`,\r\n    faucet: \"https://faucet.rinkeby.io/\",\r\n    blockExplorer: \"https://rinkeby.etherscan.io/\",\r\n  },\r\n  ropsten: {\r\n    name: \"ropsten\",\r\n    color: \"#F60D09\",\r\n    chainId: 3,\r\n    faucet: \"https://faucet.ropsten.be/\",\r\n    blockExplorer: \"https://ropsten.etherscan.io/\",\r\n    rpcUrl: `https://ropsten.infura.io/v3/${INFURA_ID}`,\r\n  },\r\n  goerli: {\r\n    name: \"goerli\",\r\n    color: \"#0975F6\",\r\n    chainId: 5,\r\n    faucet: \"https://goerli-faucet.slock.it/\",\r\n    blockExplorer: \"https://goerli.etherscan.io/\",\r\n    rpcUrl: `https://goerli.infura.io/v3/${INFURA_ID}`,\r\n  },\r\n  xdai: {\r\n    name: \"xdai\",\r\n    color: \"#48a9a6\",\r\n    chainId: 100,\r\n    price: 1,\r\n    gasPrice: 1000000000,\r\n    rpcUrl: \"https://dai.poa.network\",\r\n    faucet: \"https://xdai-faucet.top/\",\r\n    blockExplorer: \"https://blockscout.com/poa/xdai/\",\r\n  },\r\n  matic: {\r\n    name: \"matic\",\r\n    color: \"#2bbdf7\",\r\n    chainId: 137,\r\n    price: 1,\r\n    gasPrice: 1000000000,\r\n    rpcUrl: \"https://rpc-mainnet.maticvigil.com\",\r\n    faucet: \"https://faucet.matic.network/\",\r\n    blockExplorer: \"https://explorer-mainnet.maticvigil.com/\",\r\n  },\r\n  mumbai: {\r\n    name: \"mumbai\",\r\n    color: \"#92D9FA\",\r\n    chainId: 80001,\r\n    price: 1,\r\n    gasPrice: 1000000000,\r\n    rpcUrl: \"https://rpc-mumbai.maticvigil.com\",\r\n    faucet: \"https://faucet.matic.network/\",\r\n    blockExplorer: \"https://mumbai-explorer.matic.today/\",\r\n  },\r\n  localArbitrum: {\r\n    name: \"localArbitrum\",\r\n    color: \"#50a0ea\",\r\n    chainId: 153869338190755,\r\n    blockExplorer: \"\",\r\n    rpcUrl: `http://localhost:8547`,\r\n  },\r\n  localArbitrumL1: {\r\n    name: \"localArbitrumL1\",\r\n    color: \"#50a0ea\",\r\n    chainId: 44010,\r\n    blockExplorer: \"\",\r\n    rpcUrl: `http://localhost:7545`,\r\n  },\r\n  rinkebyArbitrum: {\r\n    name: \"Arbitrum Testnet\",\r\n    color: \"#50a0ea\",\r\n    chainId: 421611,\r\n    blockExplorer: \"https://rinkeby-explorer.arbitrum.io/#/\",\r\n    rpcUrl: `https://rinkeby.arbitrum.io/rpc`,\r\n  },\r\n  arbitrum: {\r\n    name: \"Arbitrum\",\r\n    color: \"#50a0ea\",\r\n    chainId: 42161,\r\n    blockExplorer: \"https://explorer.arbitrum.io/#/\",\r\n    rpcUrl: `https://arb1.arbitrum.io/rpc`,\r\n    gasPrice: 0,\r\n  },\r\n  localOptimismL1: {\r\n    name: \"localOptimismL1\",\r\n    color: \"#f01a37\",\r\n    chainId: 31337,\r\n    blockExplorer: \"\",\r\n    rpcUrl: \"http://\" + window.location.hostname + \":9545\",\r\n  },\r\n  localOptimism: {\r\n    name: \"localOptimism\",\r\n    color: \"#f01a37\",\r\n    chainId: 420,\r\n    blockExplorer: \"\",\r\n    rpcUrl: \"http://\" + window.location.hostname + \":8545\",\r\n    gasPrice: 0,\r\n  },\r\n  kovanOptimism: {\r\n    name: \"kovanOptimism\",\r\n    color: \"#f01a37\",\r\n    chainId: 69,\r\n    blockExplorer: \"https://kovan-optimistic.etherscan.io/\",\r\n    rpcUrl: `https://kovan.optimism.io`,\r\n    gasPrice: 0,\r\n  },\r\n  optimism: {\r\n    name: \"optimism\",\r\n    color: \"#f01a37\",\r\n    chainId: 10,\r\n    blockExplorer: \"https://optimistic.etherscan.io/\",\r\n    rpcUrl: `https://mainnet.optimism.io`,\r\n  },\r\n  localAvalanche: {\r\n    name: \"localAvalanche\",\r\n    color: \"#666666\",\r\n    chainId: 43112,\r\n    blockExplorer: \"\",\r\n    rpcUrl: `http://localhost:9650/ext/bc/C/rpc`,\r\n    gasPrice: 225000000000,\r\n  },\r\n  fujiAvalanche: {\r\n    name: \"fujiAvalanche\",\r\n    color: \"#666666\",\r\n    chainId: 43113,\r\n    blockExplorer: \"https://cchain.explorer.avax-test.network/\",\r\n    rpcUrl: `https://api.avax-test.network/ext/bc/C/rpc`,\r\n    gasPrice: 225000000000,\r\n  },\r\n  mainnetAvalanche: {\r\n    name: \"mainnetAvalanche\",\r\n    color: \"#666666\",\r\n    chainId: 43114,\r\n    blockExplorer: \"https://cchain.explorer.avax.network/\",\r\n    rpcUrl: `https://api.avax.network/ext/bc/C/rpc`,\r\n    gasPrice: 225000000000,\r\n  },\r\n  testnetHarmony: {\r\n    name: \"Harmony Testnet\",\r\n    color: \"#00b0ef\",\r\n    chainId: 1666700000,\r\n    blockExplorer: \"https://explorer.pops.one/\",\r\n    rpcUrl: `https://api.s0.b.hmny.io`,\r\n    gasPrice: 1000000000,\r\n  },\r\n  mainnetHarmony: {\r\n    name: \"Harmony Mainnet\",\r\n    color: \"#00b0ef\",\r\n    chainId: 1666600000,\r\n    blockExplorer: \"https://explorer.harmony.one/\",\r\n    rpcUrl: `https://api.harmony.one`,\r\n    gasPrice: 1000000000,\r\n  },\r\n};\r\n\r\nexport const NETWORK = chainId => {\r\n  for (const n in NETWORKS) {\r\n    if (NETWORKS[n].chainId === chainId) {\r\n      return NETWORKS[n];\r\n    }\r\n  }\r\n};\r\n","import React, { useState, Fragment } from \"react\";\r\nimport { withTranslation } from \"react-i18next\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport Blockies from \"react-blockies\";\r\n//web3\r\nimport WalletConnectProvider from \"@walletconnect/web3-provider\";\r\nimport Web3Modal from \"web3modal\";\r\nimport Portis from \"@portis/web3\";\r\nimport Fortmatic from \"fortmatic\";\r\nimport Authereum from \"authereum\";\r\n//mui\r\nimport Tooltip from \"@mui/material/Tooltip\";\r\nimport List from \"@mui/material/List\";\r\nimport ListItem from \"@mui/material/ListItem\";\r\nimport ListItemAvatar from \"@mui/material/ListItemAvatar\";\r\nimport ListItemText from \"@mui/material/ListItemText\";\r\nimport Button from \"@mui/material/Button\";\r\nimport Paper from \"@mui/material/Paper\";\r\nimport Popover from \"@mui/material/Popover\";\r\nimport Avatar from \"@mui/material/Avatar\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport Backdrop from \"@mui/material/Backdrop\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Dialog from \"@mui/material/Dialog\";\r\nimport DialogContent from \"@mui/material/DialogContent\";\r\nimport DialogActions from \"@mui/material/DialogActions\";\r\nimport Typography from \"@mui/material/Typography\";\r\n//icons\r\nimport AccountCircle from \"@mui/icons-material/AccountCircle\";\r\n//import AddCircle from \"@mui/icons-material/AddCircle\";\r\n//custom\r\nimport { INFURA_ID, TARGET_CHAIN } from \"../../web3/constants\";\r\nimport aromaAbi from \"../../web3/abi/aroma.json\";\r\nimport mainAbi from \"../../web3/abi/main.json\";\r\nconst { ethers } = require(\"ethers\");\r\n\r\nconst web3Modal = new Web3Modal({\r\n  network: TARGET_CHAIN, // Optional. If using WalletConnect on xDai, change network to \"xdai\" and add RPC info below for xDai chain.\r\n  cacheProvider: true, // optional\r\n  theme: \"light\", // optional. Change to \"dark\" for a dark theme.\r\n  providerOptions: {\r\n    walletconnect: {\r\n      package: WalletConnectProvider, // required\r\n      options: {\r\n        bridge: \"https://polygon.bridge.walletconnect.org\",\r\n        infuraId: INFURA_ID,\r\n        rpc: {\r\n          1: `https://mainnet.infura.io/v3/${INFURA_ID}`, // mainnet // For more WalletConnect providers: https://docs.walletconnect.org/quick-start/dapps/web3-provider#required\r\n          42: `https://kovan.infura.io/v3/${INFURA_ID}`,\r\n          100: \"https://dai.poa.network\", // xDai\r\n        },\r\n      },\r\n    },\r\n    portis: {\r\n      display: {\r\n        logo: \"https://user-images.githubusercontent.com/9419140/128913641-d025bc0c-e059-42de-a57b-422f196867ce.png\",\r\n        name: \"Portis\",\r\n        description: \"Connect to Portis App\",\r\n      },\r\n      package: Portis,\r\n      options: {\r\n        id: \"6255fb2b-58c8-433b-a2c9-62098c05ddc9\",\r\n      },\r\n    },\r\n    fortmatic: {\r\n      package: Fortmatic, // required\r\n      options: {\r\n        key: \"pk_live_5A7C91B2FC585A17\", // required\r\n      },\r\n    },\r\n    authereum: {\r\n      package: Authereum, // required\r\n    },\r\n  },\r\n});\r\n\r\nfunction Web3connect(props) {\r\n  const [provider, setProvider] = useState(null);\r\n  const [address, setAddress] = useState(null);\r\n  const [connectionMenu, setconnectionMenu] = useState(false);\r\n  const [dialogWeb3, setdialogWeb3] = useState(false);\r\n  const [balanceAroma, setBalanceAroma] = useState(0);\r\n  const [balanceMatic, setBalanceMatic] = useState(0);\r\n\r\n  const handleConnectionIconClick = (event) => {\r\n    setconnectionMenu(event.currentTarget);\r\n  };\r\n  const handleConnectionMenuClose = () => {\r\n    setconnectionMenu(null);\r\n  };\r\n  const handleWeb3Modal = () => {\r\n    setdialogWeb3(!dialogWeb3);\r\n  };\r\n  const { t } = props;\r\n\r\n  const logoutOfWeb3Modal = async () => {\r\n    await web3Modal.clearCachedProvider();\r\n    if (provider && provider.provider && typeof provider.provider.disconnect == \"function\") {\r\n      await provider.provider.disconnect();\r\n    }\r\n    setTimeout(() => {\r\n      window.location.reload();\r\n    }, 1);\r\n  };\r\n  const loadWeb3Modal = async () => {\r\n    const web3modalProvider = await web3Modal.connect();\r\n    const provider = new ethers.providers.Web3Provider(web3modalProvider);\r\n\r\n    setProvider(provider);\r\n    const addressList = await provider.listAccounts();\r\n    setAddress(addressList[0]);\r\n\r\n    const balance = await provider.getBalance(addressList[0]);\r\n    console.log(balance);\r\n    setBalanceMatic(ethers.utils.formatEther(balance));\r\n\r\n    const aromaContract = new ethers.Contract(\"0x41E0984a75d6Ad506Ff5551BE38B0d97C88Ea4A3\", aromaAbi, provider);\r\n    const balanceAroma = await aromaContract.balanceOf(addressList[0]);\r\n    setBalanceAroma(ethers.utils.formatEther(balanceAroma));\r\n\r\n    provider.on(\"chainChanged\", (chainId) => {\r\n      console.log(`chain changed to ${chainId}! updating providers`);\r\n      setProvider(new ethers.providers.Web3Provider(provider));\r\n    });\r\n    provider.on(\"accountsChanged\", () => {\r\n      console.log(`account changed!`);\r\n      setProvider(new ethers.providers.Web3Provider(provider));\r\n    });\r\n    provider.on(\"disconnect\", (code, reason) => {\r\n      console.log(code, reason);\r\n      logoutOfWeb3Modal();\r\n    });\r\n  };\r\n\r\n  const buyAroma = async () => {\r\n    const mainContract = new ethers.Contract(\"0xc543A0E22e3c757B712a8924EcFc2bCF1db1b47f\", mainAbi, provider);\r\n    //await mainContract.deployed(\"buyAROMA)  (23).send({ value: \"1000\", from: address, gas: 10000000 });\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      {!address ? (\r\n        <Tooltip title=\"Connect to your Ethereum account\">\r\n          <Button size=\"small\" variant=\"outlined\" color=\"secondary\" onClick={loadWeb3Modal}>\r\n            Connect\r\n          </Button>\r\n        </Tooltip>\r\n      ) : (\r\n        <>\r\n          <Tooltip disableFocusListener title={t(\"base.connectionInfo\")} aria-label={t(\"base.connectionInfo\")}>\r\n            <IconButton color=\"inherit\" onClick={handleConnectionIconClick}>\r\n              <AccountCircle />\r\n            </IconButton>\r\n          </Tooltip>\r\n          <Backdrop open={Boolean(connectionMenu)} className=\"backdropZindex\">\r\n            <Popover id=\"settings-menu\" open={Boolean(connectionMenu)} anchorEl={connectionMenu} onClose={handleConnectionMenuClose}>\r\n              <Paper>\r\n                <Box m={2}>\r\n                  <List dense>\r\n                    {address && (\r\n                      <ListItem>\r\n                        <Tooltip disableFocusListener title=\"your web3 address\">\r\n                          <ListItemAvatar>\r\n                            <Avatar>\r\n                              <Blockies seed={address.toLowerCase()} size={10} scale={4} className=\"blockies\" />\r\n                            </Avatar>\r\n                          </ListItemAvatar>\r\n                        </Tooltip>\r\n                        <ListItemText secondary={address.toLowerCase()} primary={t(\"base.yourWeb3Account\")} />\r\n                      </ListItem>\r\n                    )}\r\n                    <ListItem>\r\n                      <ListItemText secondary={balanceAroma} primary=\"Your AROMA balance\" />\r\n                    </ListItem>\r\n                    <ListItem>\r\n                      <ListItemText secondary={balanceMatic} primary=\"Your MATIC balance\" />\r\n                    </ListItem>\r\n                  </List>\r\n                  <Button color=\"primary\" variant=\"contained\" onClick={handleConnectionMenuClose}>\r\n                    {t(\"base.close\")}\r\n                  </Button>\r\n                  <Button color=\"primary\" variant=\"outlined\" onClick={logoutOfWeb3Modal}>\r\n                    Logout\r\n                  </Button>\r\n                  <Button color=\"primary\" variant=\"outlined\" onClick={buyAroma}>\r\n                    buy some aroma\r\n                  </Button>\r\n                </Box>\r\n              </Paper>\r\n            </Popover>\r\n          </Backdrop>\r\n        </>\r\n      )}\r\n      <Dialog onClose={handleWeb3Modal} open={dialogWeb3} keepMounted maxWidth=\"lg\">\r\n        <DialogContent>\r\n          <Typography variant=\"h2\" gutterBottom>\r\n            Connect Wallet\r\n          </Typography>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleWeb3Modal} variant=\"contained\" color=\"primary\">\r\n            {t(\"base.close\")}\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nexport default withRouter(withTranslation()(Web3connect));\r\n","import i18n from \"i18next\";\r\n// import Backend from 'i18next-xhr-backend';\r\nimport LanguageDetector from \"i18next-browser-languagedetector\";\r\nimport { format, formatDistance } from \"date-fns\";\r\n// other date functions: { formatDistance, formatRelative, subDays } from 'date-fns';\r\nimport { de, enUS, fr, it } from \"date-fns/locale\";\r\nimport transDe from \"./i18n/de/translation\";\r\nimport transEn from \"./i18n/en/translation\";\r\nimport transFr from \"./i18n/fr/translation\";\r\nimport transIt from \"./i18n/it/translation\";\r\nimport { initReactI18next } from \"react-i18next\";\r\n\r\nconst dateLang = {\r\n  en: enUS,\r\n  de: de,\r\n  fr: fr,\r\n  it: it,\r\n};\r\n\r\ni18n\r\n  // load translation using xhr -> see /public/locales\r\n  // learn more: https://github.com/i18next/i18nextdate-xhr-backend\r\n  //.use(Backend)\r\n  // detect user language\r\n  // learn more: https://github.com/i18next/i18next-browser-languageDetector\r\n  .use(LanguageDetector)\r\n  // pass the i18n instance to the react-i18next components.\r\n  // Alternative use the I18nextProvider: https://react.i18next.com/components/i18nextprovider\r\n  .use(initReactI18next)\r\n  // init i18next\r\n  // for all options read: https://www.i18next.com/overview/configuration-options\r\n  .init({\r\n    whitelist: [\"en\", \"de\", \"fr\", \"it\"],\r\n    fallbackLng: \"en\",\r\n    cleanCode: true,\r\n    lowerCaseLng: true,\r\n    debug: false,\r\n    interpolation: {\r\n      escapeValue: false, // not needed for react as it escapes by default\r\n      format: function (value, formatting, lng) {\r\n        var makedate = (value) => {\r\n          if (value instanceof Date) {\r\n            return value;\r\n          } else {\r\n            var d = new Date(0);\r\n            d.setUTCSeconds(value);\r\n            return d;\r\n          }\r\n        };\r\n        var now = new Date();\r\n        switch (formatting) {\r\n          case \"distance\":\r\n            switch (lng) {\r\n              case \"de\":\r\n                value = makedate(value);\r\n                return (\r\n                  (value.getTime() > now.getTime() ? \"in \" : \"vor \") +\r\n                  formatDistance(value, now, {\r\n                    locale: dateLang[lng],\r\n                  })\r\n                );\r\n              case \"en\":\r\n              default:\r\n                value = makedate(value);\r\n                return (\r\n                  formatDistance(value, now, {\r\n                    locale: dateLang[lng],\r\n                  }) + (value.getTime() > now.getTime() ? \" remaining\" : \" ago\")\r\n                );\r\n            }\r\n          case \"date\":\r\n            return format(makedate(value), \"dd.MM.yyyy\", {\r\n              locale: dateLang[lng],\r\n            });\r\n          case \"datetime\":\r\n            return format(makedate(value), \"dd.MM.yyyy hh:mm\", {\r\n              locale: dateLang[lng],\r\n            });\r\n          default:\r\n            if (value instanceof Date)\r\n              return format(value, formatting, { locale: dateLang[lng] });\r\n            else return value;\r\n        }\r\n      },\r\n    },\r\n    keySeparator: \".\",\r\n    react: {\r\n      wait: true,\r\n    },\r\n    resources: {\r\n      en: { translation: transEn },\r\n      de: { translation: transDe },\r\n      fr: { translation: transFr },\r\n      it: { translation: transIt },\r\n    },\r\n  });\r\n\r\nexport default i18n;\r\n","import React, { Component, Fragment } from \"react\";\r\n\r\nimport Tooltip from \"@mui/material/Tooltip\";\r\nimport Menu from \"@mui/material/Menu\";\r\nimport MenuItem from \"@mui/material/MenuItem\";\r\nimport Badge from \"@mui/material/Badge\";\r\nimport LanguageIcon from \"@mui/icons-material/Language\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport Backdrop from \"@mui/material/Backdrop\";\r\nimport { withTranslation } from \"react-i18next\";\r\nimport i18n from \"./../../i18n\";\r\n\r\nclass LanguageSelector extends Component {\r\n  state = {\r\n    languageMenu: null,\r\n    locale: i18n.language,\r\n  };\r\n\r\n  handleLanguageIconClick = (event) => {\r\n    this.setState({ languageMenu: event.currentTarget });\r\n  };\r\n  handleLanguageMenuClose = () => {\r\n    this.setState({ languageMenu: null });\r\n  };\r\n  handleLangChange = (name) => (event) => {\r\n    this.setState({ languageMenu: null });\r\n    i18n.changeLanguage(name);\r\n    this.setState({ locale: name });\r\n  };\r\n\r\n  render() {\r\n    const { languageMenu } = this.state;\r\n    const { t } = this.props;\r\n    return (\r\n      <Fragment>\r\n        <Tooltip title={t(\"base.changelang\")} aria-label={t(\"base.changelang\")} disableFocusListener>\r\n          <IconButton color=\"inherit\" aria-owns={languageMenu ? \"language-menu\" : undefined} aria-haspopup=\"true\" onClick={this.handleLanguageIconClick}>\r\n            <Badge badgeContent={this.state.locale.substring(0, 2).toUpperCase()} color=\"default\">\r\n              <LanguageIcon />\r\n            </Badge>\r\n          </IconButton>\r\n        </Tooltip>\r\n        <Backdrop open={Boolean(languageMenu)} className=\"backdropZindex\">\r\n          <Menu id=\"language-menu\" anchorEl={languageMenu} open={Boolean(languageMenu)} onClose={this.handleLanguageMenuClose}>\r\n            <MenuItem onClick={this.handleLangChange(\"en\")}>English</MenuItem>\r\n            <MenuItem onClick={this.handleLangChange(\"de\")}>Deutsch</MenuItem>\r\n            <MenuItem onClick={this.handleLangChange(\"fr\")}>Français</MenuItem>\r\n            <MenuItem onClick={this.handleLangChange(\"it\")}>Italiano</MenuItem>\r\n          </Menu>\r\n        </Backdrop>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withTranslation()(LanguageSelector);\r\n","import React, { Component } from \"react\";\r\nimport { withTranslation } from \"react-i18next\";\r\nimport { Link } from \"react-router-dom\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport Avatar from \"@mui/material/Avatar\";\r\nimport Tooltip from \"@mui/material/Tooltip\";\r\nimport logo from \"../../assets/logo.png\";\r\n\r\nclass LogoButton extends Component {\r\n  state = {\r\n    animation: true,\r\n  };\r\n  animate = () => {\r\n    this.setState({\r\n      animation: false,\r\n    });\r\n    window.clearTimeout(this.timeout);\r\n    this.timeout = window.setTimeout(() => {\r\n      this.setState({ animation: true });\r\n    }, 100);\r\n  };\r\n\r\n  render() {\r\n    const { t } = this.props;\r\n\r\n    return (\r\n      <Tooltip disableFocusListener title={t(\"base.titleTooltip\")} aria-label={t(\"base.titleTooltip\")}>\r\n        <IconButton color=\"inherit\" component={Link} to=\"/\">\r\n          <Avatar alt={t(\"base.titleTooltip\")} src={logo} />\r\n        </IconButton>\r\n      </Tooltip>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withTranslation()(LogoButton);\r\n","import React, { Component } from \"react\";\r\nimport { withTranslation } from \"react-i18next\";\r\nimport { withRouter, Link } from \"react-router-dom\";\r\n//material-ui\r\nimport Toolbar from \"@mui/material/Toolbar\";\r\nimport AppBar from \"@mui/material/AppBar\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport Button from \"@mui/material/Button\";\r\nimport ButtonGroup from \"@mui/material/ButtonGroup\";\r\nimport List from \"@mui/material/List\";\r\nimport ListItem from \"@mui/material/ListItem\";\r\nimport ListItemText from \"@mui/material/ListItemText\";\r\nimport DialogActions from \"@mui/material/DialogActions\";\r\nimport Dialog from \"@mui/material/Dialog\";\r\nimport DialogTitle from \"@mui/material/DialogTitle\";\r\nimport DialogContent from \"@mui/material/DialogContent\";\r\nimport ListItemIcon from \"@mui/material/ListItemIcon\";\r\nimport Tooltip from \"@mui/material/Tooltip\";\r\nimport Hidden from \"@mui/material/Hidden\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\n// icons\r\nimport People from \"@mui/icons-material/People\";\r\nimport EventNote from \"@mui/icons-material/EventNote\";\r\nimport Settings from \"@mui/icons-material/Settings\";\r\n//custom\r\n//import OfflineInfo from \"./OfflineInfo\";  // deactivated for the time being\r\nimport Web3connect from \"./Web3connect\";\r\nimport LanguageSelector from \"./LanguageSelector\";\r\nimport LogoButton from \"../common/LogoButton\";\r\n\r\nconst links = [\r\n  { name: \"Store\", icon: <Settings />, path: \"/store\", description: \"Buy some Aroma\" },\r\n  { name: \"Kitchen\", icon: <EventNote />, path: \"/kitchen\", description: \"Create your recipe\" },\r\n  { name: \"Buffet\", icon: <People />, path: \"/buffet\", description: \"Order and enjoy your meal\" },\r\n];\r\n\r\nclass TopBar extends Component {\r\n  state = {\r\n    popover: false,\r\n  };\r\n  handleConnectionIconClick = (event) => {\r\n    this.setState({ popover: true });\r\n  };\r\n  handleConnectionMenuClose = () => {\r\n    this.setState({ popover: false });\r\n  };\r\n  render() {\r\n    const { t } = this.props;\r\n    const { popover } = this.state;\r\n\r\n    return (\r\n      <AppBar color=\"default\" position=\"static\">\r\n        <Toolbar>\r\n          <Grid container direction=\"row\" justifyContent=\"space-between\" alignItems=\"center\">\r\n            <Grid item>\r\n              <LogoButton />\r\n              <Button color=\"inherit\" size=\"large\" component={Link} to=\"/\">\r\n                {t(\"base.title\")}\r\n              </Button>\r\n            </Grid>\r\n            <Grid item>\r\n              <Hidden smDown>\r\n                <ButtonGroup color=\"secondary\" variant=\"contained\" size=\"large\">\r\n                  {links.map((item, index) => (\r\n                    <Tooltip key={index} title={item.description}>\r\n                      <Button component={Link} to={item.path}>\r\n                        {item.name}\r\n                      </Button>\r\n                    </Tooltip>\r\n                  ))}\r\n                </ButtonGroup>\r\n              </Hidden>\r\n              <Hidden mdUp>\r\n                <Tooltip title={t(\"admin.navControlButton\")}>\r\n                  <IconButton color=\"inherit\" onClick={this.handleConnectionIconClick}>\r\n                    <Settings />\r\n                  </IconButton>\r\n                </Tooltip>\r\n              </Hidden>\r\n              <Dialog onClose={this.handleConnectionMenuClose} aria-labelledby=\"admininfos\" open={popover}>\r\n                <DialogTitle id=\"admininfos\">Admin Infos</DialogTitle>\r\n                <DialogContent>\r\n                  <List dense>\r\n                    {links.map((item, index) => (\r\n                      <ListItem key={index} button component={Link} to={\"/assembly/\" + item.path} onClick={this.handleConnectionMenuClose}>\r\n                        <ListItemIcon color=\"primary\">{item.icon}</ListItemIcon>\r\n                        <ListItemText primary={item.name} secondary={item.description} />\r\n                      </ListItem>\r\n                    ))}\r\n                  </List>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                  <Button color=\"primary\" variant=\"outlined\" onClick={this.handleConnectionMenuClose}>\r\n                    Close\r\n                  </Button>\r\n                </DialogActions>\r\n              </Dialog>\r\n            </Grid>\r\n            <Grid item>\r\n              <Web3connect />\r\n              <LanguageSelector />\r\n            </Grid>\r\n          </Grid>\r\n        </Toolbar>\r\n      </AppBar>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(withTranslation()(TopBar));\r\n","import React, { Component } from \"react\";\r\n//material-ui\r\nimport Box from \"@mui/material/Box\";\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\n\r\nclass LoadingSpinner extends Component {\r\n  render() {\r\n    return (\r\n      <Box \r\n        my={6}\r\n        textAlign=\"center\"\r\n        alignItems=\"center\"\r\n        justifyContent=\"center\"\r\n      >\r\n        <CircularProgress color=\"primary\" />\r\n      </Box>\r\n    );\r\n  }\r\n}\r\n\r\nexport default LoadingSpinner;\r\n","import React, { Fragment } from \"react\";\r\nimport * as serviceWorkerRegistration from \"../serviceWorkerRegistration\";\r\nimport Button from \"@mui/material/Button\";\r\nimport { withSnackbar } from \"notistack\";\r\n\r\nclass ServiceWorkerWrapper extends React.Component {\r\n  state = {\r\n    showReload: null,\r\n    waitingWorker: null,\r\n  };\r\n\r\n  componentDidMount() {\r\n    serviceWorkerRegistration.register({ onUpdate: this.onSWUpdate });\r\n  }\r\n\r\n  onSWUpdate = (registration) => {\r\n    this.setState({ waitingWorker: registration.waiting });\r\n    const activeSnackbar = this.props.enqueueSnackbar(\"A new version is available\", {\r\n      variant: \"warning\",\r\n      persist: true,\r\n      action: (\r\n        <Button color=\"inherit\" size=\"small\" onClick={this.reloadPage}>\r\n          Update now\r\n        </Button>\r\n      ),\r\n    });\r\n    this.setState({ showReload: activeSnackbar });\r\n  };\r\n\r\n  reloadPage = () => {\r\n    this.props.closeSnackbar(this.state.showReload);\r\n    this.state.waitingWorker.postMessage({ type: \"SKIP_WAITING\" });\r\n    window.location.reload(true);\r\n  };\r\n\r\n  render() {\r\n    return <Fragment> </Fragment>;\r\n  }\r\n}\r\n\r\nexport default withSnackbar(ServiceWorkerWrapper);\r\n","import React, { Component, Suspense, lazy } from \"react\";\r\nimport { Switch, Route, BrowserRouter as Router } from \"react-router-dom\";\r\nimport { withTranslation } from \"react-i18next\";\r\nimport { SnackbarProvider } from \"notistack\";\r\n// fonts\r\nimport '@fontsource/roboto/300.css';\r\nimport '@fontsource/roboto/400.css';\r\nimport '@fontsource/roboto/500.css';\r\nimport '@fontsource/roboto/700.css';\r\n// material-ui\r\nimport { green, blue, red } from \"@mui/material/colors\";\r\nimport { ThemeProvider } from \"@mui/material/styles\";\r\nimport CssBaseline from \"@mui/material/CssBaseline\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport { theme } from \"./utils/theme\";\r\n// shell\r\nimport TopBar from \"./components/layout/TopBar\";\r\nimport LoadingSpinner from \"./components/common/LoadingSpinner\";\r\nimport ServiceWorkerWrapper from \"./components/ServiceWorkerWrapper\";\r\n// pages (lazy loading)\r\nconst Main = lazy(() => import(\"./views/Main/Main\"));\r\n/*const Account = lazy(() => import(\"./web3/Web3\")); */\r\nconst Store = lazy(() => import(\"./views/Store/Store\"));\r\nconst Kitchen = lazy(() => import(\"./views/Kitchen/Kitchen\"));\r\nconst Buffet = lazy(() => import(\"./views/Buffet/Buffet\"));\r\n\r\nclass App extends Component {\r\n  state = {\r\n    expertmode: false,\r\n    videoOn: false,\r\n    admin: false,\r\n  };\r\n\r\n  setExpertMode = (boolValue) => {\r\n    this.setState({ expertmode: boolValue });\r\n    window.localStorage.setItem(\"expertmode\", boolValue);\r\n  };\r\n  setVideoOn = (boolValue) => {\r\n    this.setState({ videoOn: boolValue });\r\n    window.localStorage.setItem(\"videoOn\", boolValue);\r\n  };\r\n  setAdmin = (boolValue) => {\r\n    this.setState({ admin: boolValue });\r\n  };\r\n\r\n  render() {\r\n    const { expertmode, videoOn, admin } = this.state;\r\n\r\n    return (\r\n      <ThemeProvider theme={theme}>\r\n        <SnackbarProvider\r\n          anchorOrigin={{\r\n            vertical: \"bottom\",\r\n            horizontal: \"right\",\r\n          }}\r\n          maxSnack={3}\r\n          autoHideDuration={6000}\r\n          classes={{\r\n            variantSuccess: { backgroundImage: \"linear-gradient(90deg,\" + green[700] + \",\" + green[500] + \")\" },\r\n            variantError: { backgroundImage: \"linear-gradient(90deg,\" + red[700] + \",\" + red[400] + \")\" },\r\n            variantWarning: { backgroundImage: \"linear-gradient(90deg,\" + blue[700] + \",\" + blue[500] + \")\" },\r\n            variantInfo: { backgroundImage: \"linear-gradient(90deg,\" + blue[700] + \",\" + blue[500] + \")\" },\r\n          }}>\r\n          <CssBaseline />\r\n          <Router basename=\"/\">\r\n            <>\r\n              <TopBar setExpertMode={this.setExpertMode} setVideoOn={this.setVideoOn} expertmode={expertmode} videoOn={videoOn} admin={admin} />\r\n              <Grid container spacing={0} direction=\"row\" justifyContent=\"center\" alignItems=\"flex-start\">\r\n                <ServiceWorkerWrapper />\r\n                <Suspense fallback={<LoadingSpinner />}>\r\n                  <Switch>\r\n                    <Route exact path=\"/\" component={Main} />\r\n                    <Route exact path=\"/start\" component={Main} />\r\n                    <Route exact path=\"/buffet\" component={Buffet} />\r\n                    <Route exact path=\"/store\" component={Store} />\r\n                    <Route exact path=\"/kitchen\" component={Kitchen} />\r\n                    {/* <Route exact path=\"/account\" component={Account}/> /> */}\r\n                  </Switch>\r\n                </Suspense>\r\n              </Grid>\r\n            </>\r\n          </Router>\r\n        </SnackbarProvider>\r\n      </ThemeProvider>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withTranslation()(App);\r\n"],"sourceRoot":""}