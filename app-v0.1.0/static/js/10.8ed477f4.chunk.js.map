{"version":3,"sources":["components/common/LoadingSpinner.js","utils/theme.js","components/common/ConnectionInfo.js","i18n.js","components/common/LanguageSelector.js","assets/logo.png","components/common/LogoButton.js","components/common/Topbar.js","serviceWorker.js","components/ServiceWorkerWrapper.js","routes.js"],"names":["LoadingSpinner","my","textAlign","alignItems","justifyContent","color","Component","purple","teal","theme","createTheme","palette","common","black","white","background","paper","default","text","primary","secondary","disabled","hint","light","main","dark","contrastText","typography","useNextVariants","fontFamily","join","overrides","MuiBadge","badge","blueGrey","border","colorSecondary","colorError","MuiTooltip","tooltip","MuiIconButton","root","zIndex","MuiButton","borderRadius","MuiStepper","backgroundColor","display","MuiLinearProgress","height","dashedColorPrimary","animation","backgroundImage","barColorPrimary","colorPrimary","MuiCircularProgress","MuiTypography","colorTextSecondary","h1","fontSize","fontWeight","h2","h3","h5","body1","MuiTabs","indicator","MuiTab","minWidth","textColorSecondary","MuiCardContent","paddingTop","MuiBottomNavigation","MuiBottomNavigationAction","MuiAvatar","colorDefault","square","MuiCardMedia","ConnectionInfo","state","connectionMenu","deferredPrompt","isAppInstalled","isAppInstallable","componentDidMount","window","addEventListener","e","setState","console","log","evt","handleConnectionIconClick","event","currentTarget","handleConnectionMenuClose","t","this","props","Tooltip","disableFocusListener","title","IconButton","onClick","Backdrop","open","Boolean","className","Popover","id","anchorEl","onClose","Paper","Box","m","List","dense","ListItem","button","component","Link","to","ListItemAvatar","Avatar","seed","size","scale","ListItemText","ListItemSecondaryAction","prompt","ListItemIcon","Button","variant","withRouter","withTranslation","dateLang","en","enUS","de","fr","it","i18n","use","LanguageDetector","initReactI18next","init","whitelist","fallbackLng","cleanCode","lowerCaseLng","debug","interpolation","escapeValue","format","value","formatting","lng","makedate","Date","d","setUTCSeconds","now","getTime","formatDistance","locale","keySeparator","react","wait","resources","translation","transEn","transDe","transFr","transIt","LanguageSelector","languageMenu","language","handleLanguageIconClick","handleLanguageMenuClose","handleLangChange","name","changeLanguage","undefined","Badge","badgeContent","substring","toUpperCase","Menu","MenuItem","LogoButton","animate","clearTimeout","timeout","setTimeout","alt","src","logo","links","icon","path","description","Topbar","popover","AppBar","position","Toolbar","Grid","container","direction","item","Hidden","smDown","ButtonGroup","map","index","mdUp","Dialog","DialogTitle","DialogContent","DialogActions","isLocalhost","location","hostname","match","register","config","navigator","URL","process","href","origin","swUrl","fetch","then","response","contentType","headers","get","status","indexOf","serviceWorker","ready","registration","unregister","reload","registerValidSW","catch","checkValidServiceWorker","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","error","ServiceWorkerWrapper","showReload","waitingWorker","onSWUpdate","waiting","activeSnackbar","enqueueSnackbar","persist","action","reloadPage","closeSnackbar","postMessage","type","React","withSnackbar","Main","lazy","Account","Store","Kitchen","Buffet","App","expertmode","videoOn","admin","setExpertMode","boolValue","localStorage","setItem","setVideoOn","setAdmin","ThemeProvider","anchorOrigin","vertical","horizontal","maxSnack","autoHideDuration","classes","variantSuccess","green","variantError","red","variantWarning","blue","variantInfo","CssBaseline","basename","spacing","fallback","exact","render"],"mappings":"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","file":"static/js/10.8ed477f4.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\n//material-ui\r\nimport Box from \"@mui/material/Box\";\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\n\r\nclass LoadingSpinner extends Component {\r\n  render() {\r\n    return (\r\n      <Box \r\n        my={6}\r\n        textAlign=\"center\"\r\n        alignItems=\"center\"\r\n        justifyContent=\"center\"\r\n      >\r\n        <CircularProgress color=\"primary\" />\r\n      </Box>\r\n    );\r\n  }\r\n}\r\n\r\nexport default LoadingSpinner;\r\n","import { createTheme } from \"@mui/material/styles\";\r\nimport { blueGrey } from \"@mui/material/colors\";\r\n\r\n//const red = \"rgb(255, 156, 146)\";\r\nconst purple = \"rgba(205, 113, 194, 1)\";\r\nconst purpleLight = \"rgba(205, 113, 194, 0.7)\";\r\n//const blue = \"rgb(90, 157, 237)\";\r\nconst teal = \"rgba(83, 211, 224, 1)\";\r\nconst tealLight = \"rgba(83, 211, 224, 0.7)\";\r\n//const green = \"rgb(136, 216, 72)\";\r\n//const yellow = \"rgb(255, 233, 77)\";\r\n\r\nexport const theme = createTheme ({\r\n  palette: {\r\n    common: {\r\n      black: \"rgba(40, 31, 31, 1)\",\r\n      white: \"#fff\",\r\n    },\r\n    background: {\r\n      paper: \"#fff\",\r\n      default: \"#ddd\",\r\n    },\r\n    text: {\r\n      primary: \"rgba(0, 0, 0, 0.87)\",\r\n      secondary: \"rgba(0, 0, 0, 0.54)\",\r\n      disabled: \"rgba(0, 0, 0, 0.38)\",\r\n      hint: \"rgba(0, 0, 0, 0.38)\",\r\n    },\r\n    primary: {\r\n      light: purpleLight,\r\n      main: purple,\r\n      dark: purple,\r\n      contrastText: \"#fff\",\r\n    },\r\n    secondary: {\r\n      light: tealLight,\r\n      main: teal, \r\n      dark: teal,\r\n      contrastText: \"#000\",\r\n    },\r\n  },\r\n  typography: {\r\n    useNextVariants: true,\r\n    fontFamily: [\"system-ui\", \"sans-serif\"].join(\",\"),\r\n  },\r\n  overrides: {\r\n    MuiBadge: {\r\n      badge: {\r\n        background: blueGrey[50],\r\n        color: blueGrey[800],\r\n        border: \"1px solid\" + blueGrey[500],\r\n      },\r\n      colorSecondary: {\r\n        border: 0,\r\n      },\r\n      colorError: {\r\n        border: 0,\r\n        color: \"#fff\",\r\n      },\r\n    },\r\n    MuiTooltip: {\r\n      tooltip: {\r\n        color: \"#fff\",\r\n      },\r\n    },\r\n    MuiIconButton: {\r\n      root: {\r\n        color: blueGrey[500],\r\n      },\r\n      colorSecondary: {\r\n        color: blueGrey[50],\r\n        zIndex: 10,\r\n      },\r\n    },\r\n    MuiButton: {\r\n      root: {\r\n        borderRadius: \"50%\",\r\n      }\r\n    },\r\n    MuiStepper: {\r\n      root: {\r\n        backgroundColor: \"transparent\",\r\n        \"@media print\": {\r\n          display: \"none\",\r\n        },\r\n      },\r\n    },\r\n    MuiLinearProgress: {\r\n      root: {\r\n        height: 15,\r\n        borderRadius: 2,\r\n      },\r\n      dashedColorPrimary: {\r\n        animation: \"none\",\r\n        backgroundImage: \"none\",\r\n        backgroundColor: blueGrey[200],\r\n      },\r\n      barColorPrimary: {\r\n        backgroundColor: blueGrey[700],\r\n      },\r\n      colorPrimary: {\r\n        backgroundColor: blueGrey[100],\r\n      },\r\n    },\r\n    MuiCircularProgress: {\r\n      colorSecondary: {\r\n        color: blueGrey[50],\r\n      },\r\n    },\r\n    MuiTypography: {\r\n      colorTextSecondary: {\r\n        color: blueGrey[400],\r\n      },\r\n      h1: {\r\n        fontFamily: [\"system-ui\", \"serif\"].join(\",\"),\r\n        fontSize: \"2.2rem\",\r\n        fontWeight: 300,\r\n      },\r\n      h2: {\r\n        fontFamily: [\"system-ui\", \"serif\"].join(\",\"),\r\n        fontSize: \"1.4rem\",\r\n        fontWeight: 300,\r\n      },\r\n      h3: {\r\n        fontSize: \"1.3rem\",\r\n      },\r\n      h5: {\r\n        fontSize: \"1.1rem\",\r\n      },\r\n      body1: {\r\n        fontFamily: [\"system-ui\", \"serif\"].join(\",\"),\r\n      },\r\n    },\r\n    MuiTabs: {\r\n      indicator: {\r\n        backgroundColor: blueGrey[800],\r\n      },\r\n    },\r\n    MuiTab: {\r\n      root: {\r\n        \"@media (min-width: 960px)\": {\r\n          minWidth: 120,\r\n        },\r\n      },\r\n      textColorSecondary: {\r\n        color: blueGrey[400],\r\n        \"&$selected\": {\r\n          color: blueGrey[900],\r\n        },\r\n      },\r\n    },\r\n    MuiCardContent: {\r\n      root: {\r\n        paddingTop: 0,\r\n      },\r\n    },\r\n    MuiBottomNavigation: {\r\n      root: {\r\n        zIndex: 1190,\r\n        backgroundColor: blueGrey[50],\r\n        background: \"linear-gradient(315deg,\" + blueGrey[600] + \",\" + blueGrey[800] + \")\",\r\n      },\r\n    },\r\n    MuiBottomNavigationAction: {\r\n      root: {\r\n        color: blueGrey[100],\r\n        \"&$selected\": {\r\n          color: \"#fff\",\r\n        },\r\n      },\r\n    },\r\n    MuiAvatar: {\r\n      colorDefault: {\r\n        color: blueGrey[800],\r\n        backgroundColor: blueGrey[100],\r\n      },\r\n      square: {\r\n        backgroundColor: \"transparent\",\r\n      },\r\n    },\r\n    MuiCardMedia: {\r\n      root: {\r\n        height: 220,\r\n      },\r\n    },\r\n  },\r\n});\r\n","import React, { Component, Fragment } from \"react\";\r\nimport { withTranslation } from \"react-i18next\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Blockies from \"react-blockies\";\r\n//material-ui\r\nimport Tooltip from \"@mui/material/Tooltip\";\r\nimport List from \"@mui/material/List\";\r\nimport ListItem from \"@mui/material/ListItem\";\r\nimport ListItemAvatar from \"@mui/material/ListItemAvatar\";\r\nimport ListItemText from \"@mui/material/ListItemText\";\r\nimport ListItemSecondaryAction from \"@mui/material/ListItemSecondaryAction\";\r\nimport Button from \"@mui/material/Button\";\r\nimport Paper from \"@mui/material/Paper\";\r\nimport Popover from \"@mui/material/Popover\";\r\nimport Avatar from \"@mui/material/Avatar\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport ListItemIcon from \"@mui/material/ListItemIcon\";\r\nimport Backdrop from \"@mui/material/Backdrop\";\r\nimport Box from \"@mui/material/Box\";\r\n//icons\r\nimport AccountCircle from \"@mui/icons-material/AccountCircle\";\r\nimport AddCircle from \"@mui/icons-material/AddCircle\";\r\n\r\nclass ConnectionInfo extends Component {\r\n  state = {\r\n    connectionMenu: null,\r\n    deferredPrompt: null,\r\n    isAppInstalled: false,\r\n    isAppInstallable: false,\r\n  };\r\n\r\n  componentDidMount = () => {\r\n    window.addEventListener(\"beforeinstallprompt\", (e) => {\r\n      this.setState({ deferredPrompt: e, isAppInstallable: true });\r\n      console.log(\"deffered prompt saved\");\r\n    });\r\n    window.addEventListener(\"appinstalled\", (evt) => {\r\n      this.setState({ isAppInstalled: true });\r\n    });\r\n  };\r\n  handleConnectionIconClick = (event) => {\r\n    this.setState({ connectionMenu: event.currentTarget });\r\n  };\r\n  handleConnectionMenuClose = () => {\r\n    this.setState({ connectionMenu: null });\r\n  };\r\n\r\n  render() {\r\n    const { t } = this.props;\r\n    const { connectionMenu } = this.state;\r\n\r\n    return (\r\n      <Fragment>\r\n        <Tooltip disableFocusListener title={t(\"base.connectionInfo\")} aria-label={t(\"base.connectionInfo\")}>\r\n          <IconButton color=\"inherit\" onClick={this.handleConnectionIconClick}>\r\n            <AccountCircle />\r\n          </IconButton>\r\n        </Tooltip>\r\n        <Backdrop open={Boolean(connectionMenu)} className=\"backdropZindex\">\r\n          <Popover id=\"settings-menu\" open={Boolean(connectionMenu)} anchorEl={connectionMenu} onClose={this.handleConnectionMenuClose}>\r\n            <Paper>\r\n              <Box m={2}>\r\n                <List dense>\r\n                  <ListItem button component={Link} to=\"/account\" onClick={this.handleConnectionMenuClose}>\r\n                    <Tooltip disableFocusListener title=\"asdfasdf\">\r\n                      <ListItemAvatar>\r\n                        <Avatar>\r\n                          <Blockies seed=\"asdfasdf\" size={10} scale={4} className=\"blockies\" />\r\n                        </Avatar>\r\n                      </ListItemAvatar>\r\n                    </Tooltip>\r\n                    <ListItemText secondary=\"0x45454545455345\" primary={t(\"base.openYourAccount\")} />\r\n                    <ListItemSecondaryAction></ListItemSecondaryAction>\r\n                  </ListItem>\r\n                  <ListItem button component={Link} to=\"/account\" onClick={this.handleConnectionMenuClose}>\r\n                    <ListItemText secondary=\"20 AROMA\" primary=\"Wallet balance\" />\r\n                    <ListItemSecondaryAction></ListItemSecondaryAction>\r\n                  </ListItem>\r\n                  <ListItem button component={Link} to=\"/account\" onClick={this.handleConnectionMenuClose}>\r\n                    <ListItemText secondary=\"0 NFTs\" primary=\"Open my collection\" />\r\n                    <ListItemSecondaryAction></ListItemSecondaryAction>\r\n                  </ListItem>\r\n                  {this.state.isAppInstallable && !this.state.isAppInstalled && (\r\n                    <ListItem button onClick={() => this.state.deferredPrompt.prompt()}>\r\n                      <ListItemIcon color=\"primary\">\r\n                        <AddCircle />\r\n                      </ListItemIcon>\r\n                      <ListItemText primary=\"Install app\" secondary=\"Click to install\" />\r\n                    </ListItem>\r\n                  )}\r\n                </List>\r\n                <Button color=\"primary\" variant=\"outlined\" onClick={this.handleConnectionMenuClose}>\r\n                  {t(\"base.close\")}\r\n                </Button>\r\n              </Box>\r\n            </Paper>\r\n          </Popover>\r\n        </Backdrop>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(withTranslation()(ConnectionInfo));\r\n","import i18n from \"i18next\";\r\n// import Backend from 'i18next-xhr-backend';\r\nimport LanguageDetector from \"i18next-browser-languagedetector\";\r\nimport { format, formatDistance } from \"date-fns\";\r\n// other date functions: { formatDistance, formatRelative, subDays } from 'date-fns';\r\nimport { de, enUS, fr, it } from \"date-fns/locale\";\r\nimport transDe from \"./i18n/de/translation\";\r\nimport transEn from \"./i18n/en/translation\";\r\nimport transFr from \"./i18n/fr/translation\";\r\nimport transIt from \"./i18n/it/translation\";\r\nimport { initReactI18next } from \"react-i18next\";\r\n\r\nconst dateLang = {\r\n  en: enUS,\r\n  de: de,\r\n  fr: fr,\r\n  it: it,\r\n};\r\n\r\ni18n\r\n  // load translation using xhr -> see /public/locales\r\n  // learn more: https://github.com/i18next/i18nextdate-xhr-backend\r\n  //.use(Backend)\r\n  // detect user language\r\n  // learn more: https://github.com/i18next/i18next-browser-languageDetector\r\n  .use(LanguageDetector)\r\n  // pass the i18n instance to the react-i18next components.\r\n  // Alternative use the I18nextProvider: https://react.i18next.com/components/i18nextprovider\r\n  .use(initReactI18next)\r\n  // init i18next\r\n  // for all options read: https://www.i18next.com/overview/configuration-options\r\n  .init({\r\n    whitelist: [\"en\", \"de\", \"fr\", \"it\"],\r\n    fallbackLng: \"en\",\r\n    cleanCode: true,\r\n    lowerCaseLng: true,\r\n    debug: false,\r\n    interpolation: {\r\n      escapeValue: false, // not needed for react as it escapes by default\r\n      format: function (value, formatting, lng) {\r\n        var makedate = (value) => {\r\n          if (value instanceof Date) {\r\n            return value;\r\n          } else {\r\n            var d = new Date(0);\r\n            d.setUTCSeconds(value);\r\n            return d;\r\n          }\r\n        };\r\n        var now = new Date();\r\n        switch (formatting) {\r\n          case \"distance\":\r\n            switch (lng) {\r\n              case \"de\":\r\n                value = makedate(value);\r\n                return (\r\n                  (value.getTime() > now.getTime() ? \"in \" : \"vor \") +\r\n                  formatDistance(value, now, {\r\n                    locale: dateLang[lng],\r\n                  })\r\n                );\r\n              case \"en\":\r\n              default:\r\n                value = makedate(value);\r\n                return (\r\n                  formatDistance(value, now, {\r\n                    locale: dateLang[lng],\r\n                  }) + (value.getTime() > now.getTime() ? \" remaining\" : \" ago\")\r\n                );\r\n            }\r\n          case \"date\":\r\n            return format(makedate(value), \"dd.MM.yyyy\", {\r\n              locale: dateLang[lng],\r\n            });\r\n          case \"datetime\":\r\n            return format(makedate(value), \"dd.MM.yyyy hh:mm\", {\r\n              locale: dateLang[lng],\r\n            });\r\n          default:\r\n            if (value instanceof Date)\r\n              return format(value, formatting, { locale: dateLang[lng] });\r\n            else return value;\r\n        }\r\n      },\r\n    },\r\n    keySeparator: \".\",\r\n    react: {\r\n      wait: true,\r\n    },\r\n    resources: {\r\n      en: { translation: transEn },\r\n      de: { translation: transDe },\r\n      fr: { translation: transFr },\r\n      it: { translation: transIt },\r\n    },\r\n  });\r\n\r\nexport default i18n;\r\n","import React, { Component, Fragment } from \"react\";\r\n\r\nimport Tooltip from \"@mui/material/Tooltip\";\r\nimport Menu from \"@mui/material/Menu\";\r\nimport MenuItem from \"@mui/material/MenuItem\";\r\nimport Badge from \"@mui/material/Badge\";\r\nimport LanguageIcon from \"@mui/icons-material/Language\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport Backdrop from \"@mui/material/Backdrop\";\r\nimport { withTranslation } from \"react-i18next\";\r\nimport i18n from \"./../../i18n\";\r\n\r\nclass LanguageSelector extends Component {\r\n  state = {\r\n    languageMenu: null,\r\n    locale: i18n.language,\r\n  };\r\n\r\n  handleLanguageIconClick = (event) => {\r\n    this.setState({ languageMenu: event.currentTarget });\r\n  };\r\n  handleLanguageMenuClose = () => {\r\n    this.setState({ languageMenu: null });\r\n  };\r\n  handleLangChange = (name) => (event) => {\r\n    this.setState({ languageMenu: null });\r\n    i18n.changeLanguage(name);\r\n    this.setState({ locale: name });\r\n  };\r\n\r\n  render() {\r\n    const { languageMenu } = this.state;\r\n    const { t } = this.props;\r\n    return (\r\n      <Fragment>\r\n        <Tooltip title={t(\"base.changelang\")} aria-label={t(\"base.changelang\")} disableFocusListener>\r\n          <IconButton color=\"inherit\" aria-owns={languageMenu ? \"language-menu\" : undefined} aria-haspopup=\"true\" onClick={this.handleLanguageIconClick}>\r\n            <Badge badgeContent={this.state.locale.substring(0, 2).toUpperCase()} color=\"default\">\r\n              <LanguageIcon />\r\n            </Badge>\r\n          </IconButton>\r\n        </Tooltip>\r\n        <Backdrop open={Boolean(languageMenu)} className=\"backdropZindex\">\r\n          <Menu id=\"language-menu\" anchorEl={languageMenu} open={Boolean(languageMenu)} onClose={this.handleLanguageMenuClose}>\r\n            <MenuItem onClick={this.handleLangChange(\"en\")}>English</MenuItem>\r\n            <MenuItem onClick={this.handleLangChange(\"de\")}>Deutsch</MenuItem>\r\n            <MenuItem onClick={this.handleLangChange(\"fr\")}>Français</MenuItem>\r\n            <MenuItem onClick={this.handleLangChange(\"it\")}>Italiano</MenuItem>\r\n          </Menu>\r\n        </Backdrop>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withTranslation()(LanguageSelector);\r\n","export default __webpack_public_path__ + \"static/media/logo.5d39c721.png\";","import React, { Component } from \"react\";\r\nimport { withTranslation } from \"react-i18next\";\r\nimport { Link } from \"react-router-dom\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport Avatar from \"@mui/material/Avatar\";\r\nimport Tooltip from \"@mui/material/Tooltip\";\r\nimport logo from \"../../assets/logo.png\";\r\n\r\nclass LogoButton extends Component {\r\n  state = {\r\n    animation: true,\r\n  };\r\n  animate = () => {\r\n    this.setState({\r\n      animation: false,\r\n    });\r\n    window.clearTimeout(this.timeout);\r\n    this.timeout = window.setTimeout(() => {\r\n      this.setState({ animation: true });\r\n    }, 100);\r\n  };\r\n\r\n  render() {\r\n    const { t } = this.props;\r\n\r\n    return (\r\n      <Tooltip disableFocusListener title={t(\"base.titleTooltip\")} aria-label={t(\"base.titleTooltip\")}>\r\n        <IconButton color=\"inherit\" component={Link} to=\"/\">\r\n          <Avatar alt={t(\"base.titleTooltip\")} src={logo} />\r\n        </IconButton>\r\n      </Tooltip>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withTranslation()(LogoButton);\r\n","import React, { Component } from \"react\";\r\nimport { withTranslation } from \"react-i18next\";\r\nimport { withRouter, Link } from \"react-router-dom\";\r\n//material-ui\r\nimport Toolbar from \"@mui/material/Toolbar\";\r\nimport AppBar from \"@mui/material/AppBar\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport Button from \"@mui/material/Button\";\r\nimport ButtonGroup from \"@mui/material/ButtonGroup\";\r\nimport List from \"@mui/material/List\";\r\nimport ListItem from \"@mui/material/ListItem\";\r\nimport ListItemText from \"@mui/material/ListItemText\";\r\nimport DialogActions from \"@mui/material/DialogActions\";\r\nimport Dialog from \"@mui/material/Dialog\";\r\nimport DialogTitle from \"@mui/material/DialogTitle\";\r\nimport DialogContent from \"@mui/material/DialogContent\";\r\nimport ListItemIcon from \"@mui/material/ListItemIcon\";\r\nimport Tooltip from \"@mui/material/Tooltip\";\r\nimport Hidden from \"@mui/material/Hidden\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\n// icons\r\nimport People from \"@mui/icons-material/People\";\r\nimport EventNote from \"@mui/icons-material/EventNote\";\r\nimport Settings from \"@mui/icons-material/Settings\";\r\n//custom\r\n//import OfflineInfo from \"./OfflineInfo\";  // deactivated for the time being\r\nimport ConnectionInfo from \"./ConnectionInfo\";\r\nimport LanguageSelector from \"./LanguageSelector\";\r\nimport LogoButton from \"./LogoButton\";\r\n\r\nconst links = [\r\n  { name: \"Store\", icon: <Settings />, path: \"/store\", description: \"Buy some Aroma\" },\r\n  { name: \"Kitchen\", icon: <EventNote />, path: \"/kitchen\", description: \"Create your recipe\" },\r\n  { name: \"Buffet\", icon: <People />, path: \"/buffet\", description: \"Order and enjoy your meal\" },\r\n];\r\n\r\n\r\nclass Topbar extends Component {\r\n  state = {\r\n    popover: false,\r\n  };\r\n  handleConnectionIconClick = (event) => {\r\n    this.setState({ popover: true });\r\n  };\r\n  handleConnectionMenuClose = () => {\r\n    this.setState({ popover: false });\r\n  };\r\n  render() {\r\n    const { t } = this.props;\r\n    const { popover } = this.state;\r\n\r\n    return (\r\n      <AppBar color=\"primary\" position=\"static\">\r\n        <Toolbar>\r\n          <Grid container direction=\"row\" justifyContent=\"space-between\" alignItems=\"center\">\r\n            <Grid item>\r\n              <LogoButton />\r\n              <Button color=\"inherit\" size=\"large\" component={Link} to=\"/\">\r\n                {t(\"base.title\")}\r\n              </Button>\r\n            </Grid>\r\n              <Grid item>\r\n              <Hidden smDown>\r\n          <ButtonGroup color=\"secondary\" variant=\"contained\" size=\"large\">\r\n            {links.map((item, index) => (\r\n              <Tooltip key={index} title={item.description}>\r\n                <Button component={Link} to={item.path}>\r\n                  {item.name}\r\n                </Button>\r\n              </Tooltip>\r\n            ))}\r\n          </ButtonGroup>\r\n        </Hidden>\r\n        <Hidden mdUp>\r\n          <Tooltip title={t(\"admin.navControlButton\")}>\r\n            <IconButton color=\"inherit\" onClick={this.handleConnectionIconClick}>\r\n              <Settings />\r\n            </IconButton>\r\n          </Tooltip>\r\n        </Hidden>\r\n        <Dialog onClose={this.handleConnectionMenuClose} aria-labelledby=\"admininfos\" open={popover}>\r\n          <DialogTitle id=\"admininfos\">Admin Infos</DialogTitle>\r\n          <DialogContent>\r\n            <List dense>\r\n              {links.map((item, index) => (\r\n                <ListItem\r\n                  key={index}\r\n                  button\r\n                  component={Link}\r\n                  to={\"/assembly/\" + item.path}\r\n                  onClick={this.handleConnectionMenuClose}\r\n                >\r\n                  <ListItemIcon color=\"primary\">{item.icon}</ListItemIcon>\r\n                  <ListItemText primary={item.name} secondary={item.description} />\r\n                </ListItem>\r\n              ))}\r\n            </List>\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button color=\"primary\" variant=\"outlined\" onClick={this.handleConnectionMenuClose}>\r\n              Close\r\n            </Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n              </Grid>\r\n            <Grid item>\r\n              <ConnectionInfo />\r\n              <LanguageSelector />\r\n            </Grid>\r\n          </Grid>\r\n        </Toolbar>\r\n      </AppBar>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(withTranslation()(Topbar));\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n//    if ('serviceWorker' in navigator) {   \r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React, { Fragment } from \"react\";\r\nimport * as serviceWorker from \"../serviceWorker\";\r\nimport Button from \"@mui/material/Button\";\r\nimport { withSnackbar } from \"notistack\";\r\n\r\nclass ServiceWorkerWrapper extends React.Component {\r\n  state = {\r\n    showReload: null,\r\n    waitingWorker: null,\r\n  };\r\n\r\n  componentDidMount() {\r\n    serviceWorker.register({ onUpdate: this.onSWUpdate });\r\n  }\r\n\r\n  onSWUpdate = (registration) => {\r\n    this.setState({ waitingWorker: registration.waiting });\r\n    const activeSnackbar = this.props.enqueueSnackbar(\"A new version is available\", {\r\n      variant: \"warning\",\r\n      persist: true,\r\n      action: (\r\n        <Button color=\"inherit\" size=\"small\" onClick={this.reloadPage}>\r\n          Update now\r\n        </Button>\r\n      ),\r\n    });\r\n    this.setState({ showReload: activeSnackbar });\r\n  };\r\n\r\n  reloadPage = () => {\r\n    this.props.closeSnackbar(this.state.showReload);\r\n    this.state.waitingWorker.postMessage({ type: \"SKIP_WAITING\" });\r\n    window.location.reload(true);\r\n  };\r\n\r\n  render() {\r\n    return <Fragment> </Fragment>;\r\n  }\r\n}\r\n\r\nexport default withSnackbar(ServiceWorkerWrapper);\r\n","import React, { Component, Suspense, lazy } from \"react\";\r\nimport { Switch, Route, BrowserRouter as Router } from \"react-router-dom\";\r\nimport { withTranslation } from \"react-i18next\";\r\nimport { SnackbarProvider } from \"notistack\";\r\n// material-ui\r\nimport { green, blue, red } from \"@mui/material/colors\";\r\nimport { ThemeProvider } from \"@mui/material/styles\";\r\nimport CssBaseline from \"@mui/material/CssBaseline\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport { theme } from \"./utils/theme\";\r\n// shell\r\nimport Topbar from \"./components/common/Topbar\";\r\nimport LoadingSpinner from \"./components/common/LoadingSpinner\";\r\nimport ServiceWorkerWrapper from \"./components/ServiceWorkerWrapper\";\r\n// pages (lazy loading)\r\nconst Main = lazy(() => import(\"./components/Main\"));\r\nconst Account = lazy(() => import(\"./components/Account\"));\r\nconst Store = lazy(() => import(\"./components/Store\"));\r\nconst Kitchen = lazy(() => import(\"./components/Kitchen\"));\r\nconst Buffet = lazy(() => import(\"./components/Buffet\"));\r\n\r\nclass App extends Component {\r\n  state = {\r\n    expertmode: false,\r\n    videoOn: false,\r\n    admin: false,\r\n  };\r\n\r\n  setExpertMode = (boolValue) => {\r\n    this.setState({ expertmode: boolValue });\r\n    window.localStorage.setItem(\"expertmode\", boolValue);\r\n  };\r\n  setVideoOn = (boolValue) => {\r\n    this.setState({ videoOn: boolValue });\r\n    window.localStorage.setItem(\"videoOn\", boolValue);\r\n  };\r\n  setAdmin = (boolValue) => {\r\n    this.setState({ admin: boolValue });\r\n  };\r\n\r\n  render() {\r\n    const { expertmode, videoOn, admin } = this.state;\r\n\r\n    return (\r\n      <ThemeProvider  theme={theme}>\r\n        <SnackbarProvider\r\n          anchorOrigin={{\r\n            vertical: \"bottom\",\r\n            horizontal: \"right\",\r\n          }}\r\n          maxSnack={3}\r\n          autoHideDuration={6000}\r\n          classes={{\r\n            variantSuccess: { backgroundImage: \"linear-gradient(90deg,\" + green[700] + \",\" + green[500] + \")\" },\r\n            variantError: { backgroundImage: \"linear-gradient(90deg,\" + red[700] + \",\" + red[400] + \")\" },\r\n            variantWarning: { backgroundImage: \"linear-gradient(90deg,\" + blue[700] + \",\" + blue[500] + \")\" },\r\n            variantInfo: { backgroundImage: \"linear-gradient(90deg,\" + blue[700] + \",\" + blue[500] + \")\" },\r\n          }}\r\n        >\r\n          <CssBaseline />\r\n          <Router basename=\"/\">\r\n            <>\r\n              <Topbar setExpertMode={this.setExpertMode} setVideoOn={this.setVideoOn} expertmode={expertmode} videoOn={videoOn} admin={admin} />\r\n              <Grid container spacing={0} direction=\"row\" justifyContent=\"center\" alignItems=\"flex-start\">\r\n                <ServiceWorkerWrapper />\r\n                <Suspense fallback={<LoadingSpinner />}>\r\n                  <Switch>\r\n                    <Route exact path=\"/\" component={Main} />\r\n                    <Route exact path=\"/start\" component={Main} />\r\n                    <Route exact path=\"/buffet\" component={Buffet} />\r\n                    <Route exact path=\"/store\" component={Store} />\r\n                    <Route exact path=\"/kitchen\" component={Kitchen} />\r\n                    <Route exact path=\"/account\" render={() => <Account expertmode={expertmode} />} />\r\n                  </Switch>\r\n                </Suspense>\r\n              </Grid>\r\n            </>\r\n          </Router>\r\n        </SnackbarProvider>\r\n      </ThemeProvider >\r\n    );\r\n  }\r\n}\r\n\r\nexport default withTranslation()(App);\r\n"],"sourceRoot":""}